shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("RJDBC")
install.packages("RJDBC")
q
q()
install.packages("RJDBC")
q()
installed.packages
installed.packages()
install.packages("rjava")
install.packages("rJava")
installed.packages()
install.packages("rJava")
which Rscript
q()
q()
shiny::runApp()
persistentTemperature <- read.csv("~/GitHub/ScalableSystemsProject/projektShinyApp/persistentTemperature.csv", header=FALSE)
View(persistentTemperature)
View(persistentTemperature)
library(readr)
persistentTemperature <- read_csv("persistentTemperature.csv")
View(persistentTemperature)
library(readr)
persistentTweets <- read_csv("persistentTweets.csv")
View(persistentTweets)
runApp()
View(persistentTweets)
View(persistentTemperature)
View(persistentTemperature)
View(persistentTemperature)
View(persistentTemperature)
persistentTemperature <- read.csv("~/GitHub/ScalableSystemsProject/projektShinyApp/persistentTemperature.csv")
View(persistentTemperature)
runApp()
runApp()
runApp()
View(persistentTweets)
View(persistentTweets)
persistentTweets <- read.csv("~/GitHub/ScalableSystemsProject/projektShinyApp/persistentTweets.csv", sep="")
View(persistentTweets)
tweets <- read.csv("~/GitHub/ScalableSystemsProject/projektShinyApp/tweets.csv", sep="")
View(tweets)
runApp()
runApp()
runApp()
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Visualization of tweets and temperature data"),
# Sidebar with a slider input for number of bins
# Show a plot of the generated distribution
mainPanel(
plotOutput("plOlivert1"),
plotOutput("plOlivert2"),
plotOutput("plOlivert3"),
plotOutput("plOlivert4")
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
