


<!DOCTYPE html><html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
	<link rel="icon" href="/favicon.ico" type="image/x-icon">
    
  
  <title>CData JDBC Driver for Avro - CData JDBC Driver for Avro</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" 	content="CData JDBC Driver for Avro - RSBAvro - CData JDBC Driver for Avro: The connection string properties describe the various options that can be used to establish a connection." />
	<meta name="author" 		content="www.cdata.com"> 
	<meta name="generator" 		content="CData JDBC Driver for Avro (CData JDBC Driver for Avro  [JNRJV Build 8750]);">
	

    <meta http-equiv="X-UA-Compatible" content="IE=edge" >
    <!--if it works on the readme.htm file-->                  <link rel="stylesheet" type="text/css" href="./lib/bootstrap/bootstrap.min.css"/> 
        <link rel="stylesheet" type="text/css" href="./lib/syntaxhighlighter-3.0.83/styles/shCore.css" />
        <link rel="stylesheet" type="text/css" href="./lib/syntaxhighlighter-3.0.83/styles/shThemeDefault.css" />
        <link rel="stylesheet" type="text/css" href="./lib/help.css" />
        <link rel="stylesheet" type="text/css" href="./lib/tree2.css" />
      
    </head>
<body>
	
  <div class="header">
    <a href='http://www.cdata.com/'>
    <div id="whlogo">&nbsp;</div>
    </a>
    <div id='whheader'>
    	<h1>JDBC Driver for Avro</h1>

    	<span class="phones">Build 23.0.8750</span>
    	</div>
    <div id="hamburger-menu"></div>
  </div>
    <div border="0" cellpadding="0" cellspacing="0" id="whlayout">
        
        <div id="whcontent">
        <!-- TABLE OF CONTENTS -->            <div height="100%" id=whleftcol width='1%' > 
                <div style="width:340px;"></div> 
                <div id='whsizer' style='width:340px;'>
		


































<!--if it works on the readme.htm file-->

    
    

    

<div id="whtoc" style="display:none;">

<!--  BEGIN TOC CONTENT -->
<UL class="nav">


  <LI class="expanded">
  <a href="#default" style="font-weight: bold;">CData JDBC Driver for Avro</a>

  <UL>








  
    <LI>
      <a href="#pg_startedintroj">Getting Started</a>





  <UL>




  
    <LI>
      <a href="#pg_remotefilesystem"> Viewing Remote Avro Metadata</a>








  
    <LI>
      <a href="#pg_licensingjdbc"> Licensing</a>








  
    <LI>
      <a href="#pg_connectionj"> Establishing a Connection</a>








  
    <LI>
      <a href="#pg_jdbcconnstring"> Building the JDBC URL</a>








  
    <LI>
      <a href="#pg_connections3"> Connecting to Amazon S3</a>








  
    <LI>
      <a href="#pg_connectionazureblobstorage"> Connecting to Azure Blob Storage</a>





  <UL>




  
    <LI>
      <a href="#pg_connectionazureblobstorageoauthcustomappcreate"> Creating a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectionazuredatalakestore"> Connecting to Azure Data Lake Storage</a>





  <UL>




  
    <LI>
      <a href="#pg_connectionazuredatalakeoauthcustomappcreate"> Creating a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectionbox"> Connecting to Box</a>





  <UL>




  
    <LI>
      <a href="#pg_boxoauthcustomappcreate"> Create a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectiondropbox"> Connecting to Dropbox</a>





  <UL>




  
    <LI>
      <a href="#pg_dropboxoauthcustomappcreate"> Create a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectiongooglecloudstorage"> Connecting to Google Cloud Storage</a>





  <UL>




  
    <LI>
      <a href="#pg_googlecloudstorageoauthcustomappcreate"> Create a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectiongoogledrive"> Connecting to Google Drive</a>





  <UL>




  
    <LI>
      <a href="#pg_googledriveoauthcustomappcreate"> Create a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectionhttp"> Connecting to HTTP Streams</a>








  
    <LI>
      <a href="#pg_connectionibmcloudobjectstorage"> Connecting to IBM Object Storage</a>








  
    <LI>
      <a href="#pg_connectiononedrive"> Connecting to OneDrive</a>





  <UL>




  
    <LI>
      <a href="#pg_connectiononedriveoauthcustomappcreate"> Creating a Custom OAuth App</a>








  </UL>

  
    <LI>
      <a href="#pg_connectionsftp"> Connecting to SFTP</a>








  
    <LI>
      <a href="#pg_connectionsharepointonline"> Connecting to SharePoint Online</a>





  <UL>




  
    <LI>
      <a href="#pg_spoauthcustomappcreate"> Creating a Custom AzureAD App</a>








  </UL>

  
    <LI>
      <a href="#pg_ssoconnections"> SSO connections</a>








  
    <LI>
      <a href="#pg_kerberos"> Using Kerberos</a>








  
    <LI>
      <a href="#pg_changelog"> Changelog</a>








  </UL>

  
    <LI>
      <a href="#pg_jsondatabase">Modeling Avro Data</a>





  <UL>




  
    <LI>
      <a href="#pg_rawjson"> Raw Data</a>








  
    <LI>
      <a href="#pg_AutomaticDiscovery"> Automatic Schema Discovery</a>








  
    <LI>
      <a href="#pg_NestedParsing"> Parsing Hierarchical Data</a>





  <UL>




  
    <LI>
      <a href="#pg_FlattenedDocumentsDataModel"> Flattened Documents Model</a>








  
    <LI>
      <a href="#pg_DocumentDataModel"> Top-Level Document Model</a>








  
    <LI>
      <a href="#pg_RelationalDataModel"> Relational Model</a>








  </UL>

  </UL>

  
    <LI>
      <a href="#pg_usagej">Using JDBC</a>





  <UL>




  
    <LI>
      <a href="#pg_jars"> Installed Files</a>








  
    <LI>
      <a href="#pg_JDBCconnectcode"> Connecting from Code</a>








  
    <LI>
      <a href="#pg_JDBCqueries"> Executing Statements</a>








  
    <LI>
      <a href="#pg_JDBCupdates"> Using Prepared Statements</a>








  
    <LI>
      <a href="#pg_JDBCbatch"> Batch Processing</a>








  
    <LI>
      <a href="#pg_connectionpoolingjdbc"> Connection Pooling</a>





  <UL>




  
    <LI>
      <a href="#pg_jndipooling"> JNDI</a>








  </UL>

  
    <LI>
      <a href="#pg_storedprocedurej"> Calling Stored Procedures</a>








  </UL>

  
    <LI>
      <a href="#pg_jdbctoolsintro">Using from Tools</a>





  <UL>




  
    <LI>
      <a href="#pg_jdbcdbvisualizer"> DbVisualizer</a>








  
    <LI>
      <a href="#pg_jdbcdbeaver"> DBeaver</a>








  
    <LI>
      <a href="#pg_jdbcsquirrel"> SQuirreL SQL</a>








  
    <LI>
      <a href="#pg_jdbctableau"> Tableau</a>








  </UL>

  
    <LI>
      <a href="#pg_systemtablesintro">Schema Discovery</a>





  <UL>




  
    <LI>
      <a href="#pg_systemtablesj"> Tables</a>








  
    <LI>
      <a href="#pg_systemcolumnsj"> Columns</a>








  
    <LI>
      <a href="#pg_spmetadataj"> Procedures</a>








  
    <LI>
      <a href="#pg_spmetadataparamj"> Procedure Parameters</a>








  
    <LI>
      <a href="#pg_primarykeysjdbc"> Primary Keys</a>








  
    <LI>
      <a href="#pg_connmetadatajava"> Connection Properties</a>








  
    <LI>
      <a href="#pg_resultsetmetadatajdbc"> Result Sets</a>








  </UL>

  
    <LI>
      <a href="#pg_advancedfeatures">Advanced Features</a>





  <UL>




  
    <LI>
      <a href="#pg_userviews"> User Defined Views</a>








  
    <LI>
      <a href="#pg_advancedssl"> SSL Configuration</a>








  
    <LI>
      <a href="#pg_advancedproxy"> Firewall and Proxy</a>








  
    <LI>
      <a href="#pg_remotingintroj"> JDBC Remoting</a>





  <UL>




  
    <LI>
      <a href="#pg_cli"> CLI Options</a>








  
    <LI>
      <a href="#pg_conf"> Configuration File</a>








  </UL>

  
    <LI>
      <a href="#pg_caching"> Caching Data</a>





  <UL>




  
    <LI>
      <a href="#pg_workings">Configuring the Cache Connection</a>








  
    <LI>
      <a href="#pg_cachingMetadata">Caching Metadata</a>








  
    <LI>
      <a href="#pg_cacheAutomatically">Automatically Caching Data</a>








  
    <LI>
      <a href="#pg_cacheExplicitly">Explicitly Caching Data</a>








  
    <LI>
      <a href="#pg_cachedatatypemapping">Data Type Mapping</a>








  </UL>

  
    <LI>
      <a href="#pg_advancedqueryproc"> Query Processing</a>








  
    <LI>
      <a href="#pg_advancedlogging"> Logging</a>








  </UL>

  
    <LI>
      <a href="#pg_overview">SQL Compliance</a>





  <UL>




  
    <LI>
      <a href="#pg_sqlfunctions"> SQL Functions</a>





  <UL>




  
    <LI>
      <a href="#pg_sqlstringfunctions"> STRING Functions</a>








  
    <LI>
      <a href="#pg_sqlmathfunctions"> MATH Functions</a>








  
    <LI>
      <a href="#pg_sqldatefunctions"> DATE Functions</a>








  
    <LI>
      <a href="#pg_dateliteralfunctions">Date Literal Functions</a>








  </UL>

  
    <LI>
      <a href="#pg_select">SELECT Statements</a>





  <UL>




  
    <LI>
      <a href="#pg_sfagg">Aggregate Functions</a>








  
    <LI>
      <a href="#pg_sfjoin">JOIN Queries</a>








  
    <LI>
      <a href="#pg_window">Window Functions</a>








  </UL>

  
    <LI>
      <a href="#pg_cache">CACHE Statements</a>








  
    <LI>
      <a href="#pg_exec">EXECUTE Statements</a>








  
    <LI>
      <a href="#pg_pivotunpivot">PIVOT and UNPIVOT</a>








  
    <LI>
      <a href="#pg_createtable"> CREATE TABLE Statements</a>








  
    <LI>
      <a href="#pg_droptable"> DROP TABLE Statements</a>








  </UL>

  
    <LI>
      <a href="#pg_datamodel">Data Model</a>





  <UL>




  
    <LI>
      <a href="#pg_allsps"> Stored Procedures</a>





  <UL>




  
    <LI>
      <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>








  
    <LI>
      <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a>








  
    <LI>
      <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>








  </UL>

  
    <LI>
      <a href="#pg_allsystables"> System Tables</a>





  <UL>




  
    <LI>
      <a href="#pg_table-syscatalogs">sys_catalogs</a>








  
    <LI>
      <a href="#pg_table-sysschemas">sys_schemas</a>








  
    <LI>
      <a href="#pg_table-systables">sys_tables</a>








  
    <LI>
      <a href="#pg_table-systablecolumns">sys_tablecolumns</a>








  
    <LI>
      <a href="#pg_table-sysprocedures">sys_procedures</a>








  
    <LI>
      <a href="#pg_table-sysprocedureparameters">sys_procedureparameters</a>








  
    <LI>
      <a href="#pg_table-syskeycolumns">sys_keycolumns</a>








  
    <LI>
      <a href="#pg_table-foreignkeys">sys_foreignkeys</a>








  
    <LI>
      <a href="#pg_table-primarykeys">sys_primarykeys</a>








  
    <LI>
      <a href="#pg_table-sysindexes">sys_indexes</a>








  
    <LI>
      <a href="#pg_table-sysconnectionprops">sys_connection_props</a>








  
    <LI>
      <a href="#pg_table-syssqlinfo">sys_sqlinfo</a>








  
    <LI>
      <a href="#pg_table-sysidentity">sys_identity</a>







  </UL>

  </UL>





  <LI>
    <a href="#Connection">Connection String Options</a>
  
  <UL>






<li>
<a href="#RSBAvro_c_Authentication">Authentication</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_AuthScheme">AuthScheme</a>



		
<LI>

<a href="#RSBAvro_p_AccessKey">AccessKey</a>



		
<LI>

<a href="#RSBAvro_p_SecretKey">SecretKey</a>



		
<LI>

<a href="#RSBAvro_p_ApiKey">ApiKey</a>



		
<LI>

<a href="#RSBAvro_p_User">User</a>



		
<LI>

<a href="#RSBAvro_p_Password">Password</a>



		
<LI>

<a href="#RSBAvro_p_SharePointEdition">SharePointEdition</a>


</UL>




<li>
<a href="#RSBAvro_c_Connection">Connection</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_ConnectionType">ConnectionType</a>



		
<LI>

<a href="#RSBAvro_p_URI">URI</a>



		
<LI>

<a href="#RSBAvro_p_DataModel">DataModel</a>



		
<LI>

<a href="#RSBAvro_p_Region">Region</a>



		
<LI>

<a href="#RSBAvro_p_ProjectId">ProjectId</a>



		
<LI>

<a href="#RSBAvro_p_OracleNamespace">OracleNamespace</a>



		
<LI>

<a href="#RSBAvro_p_StorageBaseURL">StorageBaseURL</a>



		
<LI>

<a href="#RSBAvro_p_UseVirtualHosting">UseVirtualHosting</a>



		
<LI>

<a href="#RSBAvro_p_UseLakeFormation">UseLakeFormation</a>


</UL>




<li>
<a href="#RSBAvro_c_AWSAuthentication">AWS Authentication</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a>



		
<LI>

<a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a>



		
<LI>

<a href="#RSBAvro_p_AWSRoleARN">AWSRoleARN</a>



		
<LI>

<a href="#RSBAvro_p_AWSPrincipalARN">AWSPrincipalARN</a>



		
<LI>

<a href="#RSBAvro_p_AWSRegion">AWSRegion</a>



		
<LI>

<a href="#RSBAvro_p_AWSCredentialsFile">AWSCredentialsFile</a>



		
<LI>

<a href="#RSBAvro_p_AWSCredentialsFileProfile">AWSCredentialsFileProfile</a>



		
<LI>

<a href="#RSBAvro_p_AWSSessionToken">AWSSessionToken</a>



		
<LI>

<a href="#RSBAvro_p_AWSExternalId">AWSExternalId</a>



		
<LI>

<a href="#RSBAvro_p_MFASerialNumber">MFASerialNumber</a>



		
<LI>

<a href="#RSBAvro_p_MFAToken">MFAToken</a>



		
<LI>

<a href="#RSBAvro_p_CredentialsLocation">CredentialsLocation</a>



		
<LI>

<a href="#RSBAvro_p_TemporaryTokenDuration">TemporaryTokenDuration</a>



		
<LI>

<a href="#RSBAvro_p_ServerSideEncryption">ServerSideEncryption</a>


</UL>




<li>
<a href="#RSBAvro_c_AzureAuthentication">Azure Authentication</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_AzureStorageAccount">AzureStorageAccount</a>



		
<LI>

<a href="#RSBAvro_p_AzureAccessKey">AzureAccessKey</a>



		
<LI>

<a href="#RSBAvro_p_AzureSharedAccessSignature">AzureSharedAccessSignature</a>



		
<LI>

<a href="#RSBAvro_p_AzureTenant">AzureTenant</a>



		
<LI>

<a href="#RSBAvro_p_AzureEnvironment">AzureEnvironment</a>


</UL>




<li>
<a href="#RSBAvro_c_SSO">SSO</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_SSOLoginURL">SSOLoginURL</a>



		
<LI>

<a href="#RSBAvro_p_SSOProperties">SSOProperties</a>



		
<LI>

<a href="#RSBAvro_p_SSOExchangeUrl">SSOExchangeUrl</a>


</UL>




<li>
<a href="#RSBAvro_c_OAuth">OAuth</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a>



		
<LI>

<a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a>



		
<LI>

<a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a>



		
<LI>

<a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a>



		
<LI>

<a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a>



		
<LI>

<a href="#RSBAvro_p_OAuthAccessTokenSecret">OAuthAccessTokenSecret</a>



		
<LI>

<a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a>



		
<LI>

<a href="#RSBAvro_p_CallbackURL">CallbackURL</a>



		
<LI>

<a href="#RSBAvro_p_Scope">Scope</a>



		
<LI>

<a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>



		
<LI>

<a href="#RSBAvro_p_OAuthPasswordGrantMode">OAuthPasswordGrantMode</a>



		
<LI>

<a href="#RSBAvro_p_OAuthIncludeCallbackURL">OAuthIncludeCallbackURL</a>



		
<LI>

<a href="#RSBAvro_p_OAuthAuthorizationURL">OAuthAuthorizationURL</a>



		
<LI>

<a href="#RSBAvro_p_OAuthAccessTokenURL">OAuthAccessTokenURL</a>



		
<LI>

<a href="#RSBAvro_p_OAuthRefreshTokenURL">OAuthRefreshTokenURL</a>



		
<LI>

<a href="#RSBAvro_p_OAuthRequestTokenURL">OAuthRequestTokenURL</a>



		
<LI>

<a href="#RSBAvro_p_OAuthVerifier">OAuthVerifier</a>



		
<LI>

<a href="#RSBAvro_p_AuthToken">AuthToken</a>



		
<LI>

<a href="#RSBAvro_p_AuthKey">AuthKey</a>



		
<LI>

<a href="#RSBAvro_p_OAuthParams">OAuthParams</a>



		
<LI>

<a href="#RSBAvro_p_OAuthRefreshToken">OAuthRefreshToken</a>



		
<LI>

<a href="#RSBAvro_p_OAuthExpiresIn">OAuthExpiresIn</a>



		
<LI>

<a href="#RSBAvro_p_OAuthTokenTimestamp">OAuthTokenTimestamp</a>


</UL>




<li>
<a href="#RSBAvro_c_JWTOAuth">JWT OAuth</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a>



		
<LI>

<a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a>



		
<LI>

<a href="#RSBAvro_p_OAuthJWTCertPassword">OAuthJWTCertPassword</a>



		
<LI>

<a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a>


</UL>




<li>
<a href="#RSBAvro_c_Kerberos">Kerberos</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_KerberosKDC">KerberosKDC</a>



		
<LI>

<a href="#RSBAvro_p_KerberosRealm">KerberosRealm</a>



		
<LI>

<a href="#RSBAvro_p_KerberosSPN">KerberosSPN</a>



		
<LI>

<a href="#RSBAvro_p_KerberosKeytabFile">KerberosKeytabFile</a>



		
<LI>

<a href="#RSBAvro_p_KerberosServiceRealm">KerberosServiceRealm</a>



		
<LI>

<a href="#RSBAvro_p_KerberosServiceKDC">KerberosServiceKDC</a>



		
<LI>

<a href="#RSBAvro_p_KerberosTicketCache">KerberosTicketCache</a>


</UL>




<li>
<a href="#RSBAvro_c_SSL">SSL</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_SSLClientCert">SSLClientCert</a>



		
<LI>

<a href="#RSBAvro_p_SSLClientCertType">SSLClientCertType</a>



		
<LI>

<a href="#RSBAvro_p_SSLClientCertPassword">SSLClientCertPassword</a>



		
<LI>

<a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a>



		
<LI>

<a href="#RSBAvro_p_SSLMode">SSLMode</a>



		
<LI>

<a href="#RSBAvro_p_SSLServerCert">SSLServerCert</a>


</UL>




<li>
<a href="#RSBAvro_c_SSH">SSH</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_SSHAuthMode">SSHAuthMode</a>



		
<LI>

<a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a>



		
<LI>

<a href="#RSBAvro_p_SSHClientCertPassword">SSHClientCertPassword</a>



		
<LI>

<a href="#RSBAvro_p_SSHClientCertSubject">SSHClientCertSubject</a>



		
<LI>

<a href="#RSBAvro_p_SSHClientCertType">SSHClientCertType</a>



		
<LI>

<a href="#RSBAvro_p_SSHUser">SSHUser</a>



		
<LI>

<a href="#RSBAvro_p_SSHPassword">SSHPassword</a>


</UL>




<li>
<a href="#RSBAvro_c_Firewall">Firewall</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_FirewallType">FirewallType</a>



		
<LI>

<a href="#RSBAvro_p_FirewallServer">FirewallServer</a>



		
<LI>

<a href="#RSBAvro_p_FirewallPort">FirewallPort</a>



		
<LI>

<a href="#RSBAvro_p_FirewallUser">FirewallUser</a>



		
<LI>

<a href="#RSBAvro_p_FirewallPassword">FirewallPassword</a>


</UL>




<li>
<a href="#RSBAvro_c_Proxy">Proxy</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a>



		
<LI>

<a href="#RSBAvro_p_ProxyServer">ProxyServer</a>



		
<LI>

<a href="#RSBAvro_p_ProxyPort">ProxyPort</a>



		
<LI>

<a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a>



		
<LI>

<a href="#RSBAvro_p_ProxyUser">ProxyUser</a>



		
<LI>

<a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a>



		
<LI>

<a href="#RSBAvro_p_ProxySSLType">ProxySSLType</a>



		
<LI>

<a href="#RSBAvro_p_ProxyExceptions">ProxyExceptions</a>


</UL>




<li>
<a href="#RSBAvro_c_Logging">Logging</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_Logfile">Logfile</a>



		
<LI>

<a href="#RSBAvro_p_Verbosity">Verbosity</a>



		
<LI>

<a href="#RSBAvro_p_LogModules">LogModules</a>



		
<LI>

<a href="#RSBAvro_p_MaxLogFileSize">MaxLogFileSize</a>



		
<LI>

<a href="#RSBAvro_p_MaxLogFileCount">MaxLogFileCount</a>


</UL>




<li>
<a href="#RSBAvro_c_Schema">Schema</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_Location">Location</a>



		
<LI>

<a href="#RSBAvro_p_BrowsableSchemas">BrowsableSchemas</a>



		
<LI>

<a href="#RSBAvro_p_Tables">Tables</a>



		
<LI>

<a href="#RSBAvro_p_Views">Views</a>



		
<LI>

<a href="#RSBAvro_p_FlattenObjects">FlattenObjects</a>



		
<LI>

<a href="#RSBAvro_p_FlattenArrays">FlattenArrays</a>


</UL>




<li>
<a href="#RSBAvro_c_Caching">Caching</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_AutoCache">AutoCache</a>



		
<LI>

<a href="#RSBAvro_p_CacheDriver">CacheDriver</a>



		
<LI>

<a href="#RSBAvro_p_CacheConnection">CacheConnection</a>



		
<LI>

<a href="#RSBAvro_p_CacheLocation">CacheLocation</a>



		
<LI>

<a href="#RSBAvro_p_CacheTolerance">CacheTolerance</a>



		
<LI>

<a href="#RSBAvro_p_Offline">Offline</a>



		
<LI>

<a href="#RSBAvro_p_CacheMetadata">CacheMetadata</a>


</UL>




<li>
<a href="#RSBAvro_c_Miscellaneous">Miscellaneous</a>
<UL>
		
<LI>

<a href="#RSBAvro_p_AggregateFiles">AggregateFiles</a>



		
<LI>

<a href="#RSBAvro_p_BatchSize">BatchSize</a>



		
<LI>

<a href="#RSBAvro_p_Charset">Charset</a>



		
<LI>

<a href="#RSBAvro_p_ConnectionLifeTime">ConnectionLifeTime</a>



		
<LI>

<a href="#RSBAvro_p_ConnectOnOpen">ConnectOnOpen</a>



		
<LI>

<a href="#RSBAvro_p_DeleteDownloadedFiles">DeleteDownloadedFiles</a>



		
<LI>

<a href="#RSBAvro_p_DirectoryRetrievalDepth">DirectoryRetrievalDepth</a>



		
<LI>

<a href="#RSBAvro_p_ExcludeFiles">ExcludeFiles</a>



		
<LI>

<a href="#RSBAvro_p_FolderId">FolderId</a>



		
<LI>

<a href="#RSBAvro_p_IncludeDropboxTeamResources">IncludeDropboxTeamResources</a>



		
<LI>

<a href="#RSBAvro_p_IncludeFiles">IncludeFiles</a>



		
<LI>

<a href="#RSBAvro_p_IncludeItemsFromAllDrives">IncludeItemsFromAllDrives</a>



		
<LI>

<a href="#RSBAvro_p_IncludeSubdirectories">IncludeSubdirectories</a>



		
<LI>

<a href="#RSBAvro_p_InsertMode">InsertMode</a>



		
<LI>

<a href="#RSBAvro_p_MaxRows">MaxRows</a>



		
<LI>

<a href="#RSBAvro_p_MetadataDiscoveryURI">MetadataDiscoveryURI</a>



		
<LI>

<a href="#RSBAvro_p_Other">Other</a>



		
<LI>

<a href="#RSBAvro_p_PageSize">PageSize</a>



		
<LI>

<a href="#RSBAvro_p_PathSeparator">PathSeparator</a>



		
<LI>

<a href="#RSBAvro_p_PoolIdleTimeout">PoolIdleTimeout</a>



		
<LI>

<a href="#RSBAvro_p_PoolMaxSize">PoolMaxSize</a>



		
<LI>

<a href="#RSBAvro_p_PoolMinSize">PoolMinSize</a>



		
<LI>

<a href="#RSBAvro_p_PoolWaitTime">PoolWaitTime</a>



		
<LI>

<a href="#RSBAvro_p_PseudoColumns">PseudoColumns</a>



		
<LI>

<a href="#RSBAvro_p_RTK">RTK</a>



		
<LI>

<a href="#RSBAvro_p_TemporaryLocalFolder">TemporaryLocalFolder</a>



		
<LI>

<a href="#RSBAvro_p_Timeout">Timeout</a>



		
<LI>

<a href="#RSBAvro_p_UseConnectionPooling">UseConnectionPooling</a>



		
<LI>

<a href="#RSBAvro_p_UserDefinedViews">UserDefinedViews</a>


</UL>












	</UL>





</UL>

<!-- END TOC CONTENT -->

</div>              
        
                </div>
            </div>
        <!-- /TABLE OF CONTENTS -->    
        <div id="whrightcol">
				<div style='margin:0; padding:0;'>
						
						<div id=newver ></div>
				</div>
				
				<div id=whiframe>
               
					<! -- BEGIN CONTENT -->					<div id="wrapper">
						<div id="content">
							<h1 id="default">CData JDBC Driver for Avro</h1>
              <!-- <span id=whtitle>
              &prodname; - Build &prod.vermaj;.&prod.vermin;.&prod:verint;
              </span> -->



<p>
<h2>Overview</h2>

</p>

<p>The CData JDBC Driver for Avro offers the most natural way to connect to Avro data from Java-based applications and developer technologies. The driver wraps the complexity of accessing Avro data in an easy-to-integrate, 100%-Java JDBC driver. Applications can then access Avro as a traditional database.  The driver hides the complexity of accessing data and provides additional powerful security features, smart caching, batching, socket management, and more.


<h2>Key Features</h2>
</p>

<p><ul><li>Write SQL to retrieve data.</li><li>Compliant with JDBC 3.0 and JDBC 4.0.</li><li>Codeless integration with popular BI, reporting, and ETL tools.</li></ul>



<h2>Getting Started</h2>

See <a href="#pg_startedintroj">Getting Started</a> for A-Z guides on authenticating and connecting to Avro data.
See the <a href="https://www.cdata.com/kb/tech/avro-article-list.rst">Avro integration guides</a> for information on connecting from other applications.</p>

<p><b>NOTE:</b> The license file, <var>cdata.jdbc.avro.lic</var>, must be in the same location as the JAR file, <var>cdata.jdbc.avro.jar</var>. See the readme file for more information.</p>

<p>
<h2>Using the JDBC Driver/Using from Tools</h2>
</p>

<p>See <a href="#pg_usagej">Using JDBC</a> for examples of using standard JDBC classes like DataSource, Connection, Statement, ResultSet, and others, to work with Avro data. </p>

<p><a href="#pg_jdbctoolsintro">Using from Tools</a> walks through the steps of integration with JDBC tools, using several popular database tools as examples.


<h2>Schema Discovery</h2>
</p>

<p>See <a href="#pg_systemtablesintro">Schema Discovery</a> to access schema information through the standard JDBC interfaces. Query the <a href="#pg_allsystables">System Tables</a> to access additional metadata, such as data source capabilities. 


<h2>Advanced Features</h2>

<a href="#pg_advancedfeatures">Advanced Features</a> details additional features supported by the driver, such as defining user defined views, ssl configuration, remoting, caching, firewall/proxy settings, and advanced logging.

<h3>JDBC Remoting</h3>
</p>

<p>See <a href="#pg_remotingintroj">JDBC Remoting</a> to configure remote access to the JDBC data source. The JDBC remoting feature allows hosting the JDBC connection on a server to enable connections from virtually anywhere -- various clients on any platform (Java, .NET, C++, PHP, Python, and so on) and using any standards-based technology (ODBC, JDBC, and so on). JDBC remoting is enabled using the popular MySQL wire protocol server.


<h2>SQL Compliance</h2>
</p>

<p>See <a href="#pg_overview">SQL Compliance</a> for a syntax reference and code examples outlining the supported SQL.

    
<h2>Data Model</h2>

    </p>

<p>See <a href="#pg_datamodel">Data Model</a> for information on the available entities and how to query them.



<h2>Connection String Options</h2>
</p>

<p>The <a href="#Connection">Connection</a> properties describe the various options that can be used to establish a connection.
</p>





  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Getting Started" desc="CData JDBC Driver for Avro - RSBAvro - Getting Started: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Getting Started</h1>
       

    <div class="chapter_content" id="pg_startedintroj">

<p>
<h2>Connecting to Avro</h2>
</p>

<p><a href="#pg_connectionj">Establishing a Connection</a> shows how to authenticate to Avro and configure any necessary connection properties in a JDBC URL. You can also configure driver capabilities through the available <a href="#Connection">Connection</a> properties, from data modeling to firewall traversal. The Advanced Settings section shows how to set up more advanced configurations and troubleshoot connection errors. 


<h2>Connecting to JDBC Data Sources</h2>
</p>

<p>The CData JDBC Driver for Avro provides full support for integration into Java applications, including Eclipse, NetBeans, IntelliJ IDEA, and many other Integrated Development Environments, as well as J2EE applications running on a Java server such as Tomcat. You can find JSP, console, and swing demos in the installation folder.

<h2>Java Version Support</h2>

To deploy the driver JAR file, you must have Java Development Kit (JDK) 1.8 or higher installed on your system. 

<h2>Avro Version Support</h2>
The driver leverages the Apache Avro V1.10.1. 

<h2>Avro Serialization Encodings</h2>
</p>

<p> Apache Avro specifies two serialization encodings: binary and JSON. The driver only parses Avro files that are encoded in Binary.


<h2>See Also</h2>

<ul><li>
<h3>Create Connection Objects </h3>
See <a href="#pg_JDBCconnectcode">Connecting from Code</a> to create JDBC Connection objects.
  </li><li>
<h3>Query Data from Code</h3>
See <a href="#pg_JDBCqueries">Executing Statements</a> and <a href="#pg_JDBCupdates">Using Prepared Statements</a> to execute SQL statements to Avro tables.</li><li>
<h3>Connect from Java-Based Tools</h3>
See <a href="#pg_jdbctoolsintro">Using from Tools</a> shows how to connect to Avro and query data from several popular database tools.</li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Viewing Remote Avro Metadata" desc="CData JDBC Driver for Avro - RSBAvro -  Viewing Remote Avro Metadata: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Viewing Remote Avro Metadata</h1>
       

    <div class="chapter_content" id="pg_remotefilesystem">

<p>The CData JDBC Driver for Avro is designed for streaming Avro only.</p>

<p>This streamed file content does not include all of the metadata associated with remotely stored Avro files, such as file and folder name.</p>

<p>If access to both the file metadata and the actual file content is needed, then the CData JDBC Driver for Avro must be used in tandem with the associated file system driver(s) for the service the Avro files are remotely stored in.</p>

<p>The following file system drivers are available:
<ul><li>AmazonS3</li><li>Box</li><li>Dropbox</li><li>FTP</li><li>GoogleCloudStorage</li><li>IBLCloudObjectStorage</li><li>OneDrive</li><li>SFTP</li></ul>
</p>

<p>See the relevant CData file system driver's documentation for a configuration guide for connecting to stored Avro file metadata.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Licensing" desc="CData JDBC Driver for Avro - RSBAvro -  Licensing: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Licensing</h1>
       

    <div class="chapter_content" id="pg_licensingjdbc">

<p><b>Automatic Installation</b></p>

<p>
For Windows, the installer should automatically install the license. If the installation fails or you need to install the license on an offline computer, you can do a manual install instead.</p>

<p>
<b>Manual Installation</b></p>

<p>
For Mac/Unix, you need to install a license from the command line via cdata.jdbc.avro.jar. To do a manual install, execute the following command: 

<br/><pre lang="">java -jar cdata.jdbc.avro.jar --license</pre>

This creates a cdata.jdbc.avro.lic that must be located next to the .jar file or in the cdata directory under the user's home directory.</p>

<p>In certain cases, you may need to do a manual installation on Windows. The procedure is the same. 


</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Establishing a Connection" desc="CData JDBC Driver for Avro - RSBAvro -  Establishing a Connection: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Establishing a Connection</h1>
       

    <div class="chapter_content" id="pg_connectionj">

<p>
<h2>Creating a JDBC Data Source</h2>

</p>

<p>You can create a JDBC data source to connect from your Java application. Creating a JDBC data source based on the CData JDBC Driver for Avro consists of three basic steps:
<ul><li>Add the driver JAR file to the classpath. The JAR file is located in the lib subfolder of the installation directory. Note that the .lic file must be located in the same folder as the JAR file.</li><li>Provide the driver class. For example:
<br/><pre lang="">cdata.jdbc.avro.AvroDriver</pre></li><li>Provide the JDBC URL. For example:
<br/><pre lang="plain">jdbc:avro:URI=C:\folder\table.avro;

or

jdbc:cdata:avro:URI=C:\folder\table.avro;</pre>

<p>The second format above can be used whenever there is a conflict in your application between drivers using the same URL format to ensure you are using the CData driver. The URL must start with either "jdbc:avro:" or "jdbc:cdata:avro:" and can include any of the connection properties in name-value pairs separated with semicolons.</p>
</li></ul>
</p>

<p>The CData JDBC Driver for Avro allows connecting to local and remote Avro resources. Set the <u>URI</u> property to the Avro resource location, in addition to any other properties necessary to connect to your data source.</p>

<p>

<h2>Connecting to Local Files</h2>
</p>

<p> Set the <u>ConnectionType</u> to <b>Local</b>. Local files support SELECT.</p>

<p>Set the <u>URI</u> to a folder containing Avro files: <var>C:\folder1</var>.




<h2>Connecting to Cloud-Hosted Avro Files</h2>

While the driver is capable of pulling data from Avro files hosted on a variety of cloud data stores, INSERT, UPDATE, and DELETE <b>are not supported</b> outside of local files in this driver.</p>

<p>If you need INSERT/UPDATE/DELETE cloud files, you can download the corresponding CData driver for that cloud host (supported via stored procedures), make changes with the local file's corresponding driver, then upload the file using the cloud source's stored procedures.</p>

<p>As an example, if you wanted to update a file stored on SharePoint, you could use the CData SharePoint driver's DownloadDocument procedure to download the Avro file, update the local Avro file with the CData Avro driver, then use the SharePoint driver's UploadDocument procedure to upload the changed file to SharePoint.</p>

<p>A <b>unique prefix</b> at the beginning of the <u>URI</u> connection property is used to identify the cloud data store being targed by the driver and the remainder of the path is a relative path to the desired folder (one table per file) or single file (a single table).


<h3>Amazon S3</h3>
</p>

<p>Set the following to identify your Avro resources stored on Amazon S3:
<ul><li><u>ConnectionType</u>: Set the <u>ConnectionType</u> to <b>Amazon S3</b>.</li><li><u>URI</u>: Set this to the bucket and folder: <var>s3://bucket1/folder1</var>.</li></ul></p>

<p>See <a href="#pg_connections3">Connecting to Amazon S3</a> for more information regarding how to connect and authenticate to Avro files hosted on Amazon S3.
 


<h3>Azure Blob Storage</h3>
</p>

<p>Set the following to identify your Avro resources stored on Azure Blob Storage:
<ul><li><u>ConnectionType</u>: Set this to <b>Azure Blob Storage</b>.</li><li><u>URI</u>: Set this to the name of your container and the name of the blob. For example: <var>azureblob://mycontainer/myblob</var>.</li></ul></p>

<p>See <a href="#pg_connectionazureblobstorage">Connecting to Azure Blob Storage</a> for more information regarding how to connect and authenticate to Avro files hosted on Amazon Blob Storage.


<h3>Azure Data Lake Storage</h3>
</p>

<p>Set the following to identify your Avro resources stored on Azure Data Lake Storage:
<ul><li><u>ConnectionType</u>: Set this to <b>Azure Data Lake Storage Gen1</b>, <b>Azure Data Lake Storage Gen2</b>, or <b>Azure Data Lake Storage Gen2 SSL</b>.</li><li><u>URI</u>: Set this to the name of the file system and the name of the folder which contains your Avro files. For example: 
<ul><li>Gen 1: <var>adl://myfilesystem/folder1</var></li><li>Gen 2: <var>abfs://myfilesystem/folder1</var></li><li>Gen 2 SSL: <var>abfss://myfilesystem/folder1</var></li></ul></li></ul></p>

<p>See <a href="#pg_connectionazuredatalakestore">Connecting to Azure Data Lake Storage</a> for more information regarding how to connect and authenticate to Avro files hosted on Azure Data Lake Storage.


<h3>Azure File Storage</h3>
</p>

<p>Set the following properties to connect:
<ul><li><u>ConnectionType</u>: Set this to <b>Azure Files</b>.</li><li><u>URI</u>: Set this the name of your azure file share and the name of the resource. For example: <var>azurefile://fileShare/remotePath</var>.</li><li><u>AzureStorageAccount</u> (Required): Set this to the account associated with the Azure file.</li></ul></p>

<p>You can authenticate either an Azure access key or an Azure shared access signature. Set <b>one</b> of the following:
<ul><li><u>AzureAccessKey</u>: Set this to the access key associated with the Azure file.</li><li><u>AzureSharedAccessSignature</u>: Set this to the shared access signature associated with the Azure file.</li></ul>


<h3>Box</h3>
</p>

<p>Set the following to identify your Avro resources stored on Box:
<ul><li><u>ConnectionType</u>: Set this to <b>Box</b>.</li><li><u>URI</u>: Set this the name of the file system and the name of the folder which contains your Avro files. For example: <var>box://folder1</var>.</li></ul></p>

<p>See <a href="#pg_connectionbox">Connecting to Box</a> for more information regarding how to connect and authenticate to Avro files hosted on Box.


<h3>Dropbox</h3>
</p>

<p>Set the following to identify your Avro resources stored on Dropbox:
<ul><li><u>ConnectionType</u>: Set this to <b>Dropbox</b>.</li><li><u>URI</u>: Set this to the path to a folder containing Avro files. For example: <var>dropbox://folder1</var>.</li></ul></p>

<p>See <a href="#pg_connectiondropbox">Connecting to Dropbox</a> for more information regarding how to connect and authenticate to Avro files hosted on Dropbox.


<h3>FTP</h3>
</p>

<p>The driver supports both plaintext and SSL/TLS connections to FTP servers.</p>

<p>Set the following connection properties to connect:
<ul><li><u>ConnectionType</u>: Set this to either <b>FTP</b> or <b>FTPS</b>.</li><li><u>URI</u>: Set this to the address of the server followed by the path to the folder to be used as the root folder. For example: <var>ftp://localhost:990/folder1</var> or <var>ftps://localhost:990/folder1</var>.</li><li><u>User</u>: Set this to your username on the FTP(S) server you want to connect to.</li><li><u>Password</u>: Set this to your password on the FTP(S) server you want to connect to.</li></ul>
 


<h3>Google Cloud Storage</h3>
</p>

<p>Set the following to identify your Avro resources stored on Google Cloud Storage:
<ul><li><u>ConnectionType</u>: Set this to <b>Google Cloud Storage</b>.</li><li><u>URI</u>: Set this to the path to the name of the file system and the name of the folder which contains your Avro files. For example: <var>gs://bucket/remotePath</var>.</li></ul></p>

<p>See <a href="#pg_connectiongooglecloudstorage">Connecting to Google Cloud Storage</a> for more information regarding how to connect and authenticate to Avro files hosted on Google Cloud Storage.


<h3>Google Drive</h3>
</p>

<p>Set the following to identify your Avro resources stored on Google Drive:
<ul><li><u>ConnectionType</u>: Set this to <b>Google Drive</b>.</li><li><u>URI</u>: Set to the path to the name of the file system and the name of the folder which contains your Avro files. For example: <var>gdrive://folder1</var>.</li></ul></p>

<p>See <a href="#pg_connectiongoogledrive">Connecting to Google Drive</a> for more information regarding how to connect and authenticate to Avro files hosted on Google Drive.


<h3>HDFS</h3>
</p>

<p>Set the following to identify your Avro resources stored on HDFS:
<ul><li><u>ConnectionType</u>: Set this to <b>HDFS</b> or <b>HDFS Secure</b>.</li><li><u>URI</u>: Set this to the path to a folder containing Avro files. For example:
<ul><li>HDFS: <var>webhdfs://host:port/remotePath</var></li><li>HDFS Secure: <var>webhdfss://host:port/remotePath</var></li></ul></li></ul></p>

<p></p>

<p>There are two authentication methods available for connecting to HDFS data source, Anonymous Authentication and Negotiate (Kerberos) Authentication.</p>

<p><b>Anonymous Authentication</b></p>

<p>In some situations, you can connect to HDFS without any authentication connection properties.
To do so, set the <u>AuthScheme</u> property to <b>None</b> (default).</p>

<p>
<b>Authenticate using Kerberos</b></p>

<p> When authentication credentials are required, you can use Kerberos for authentication. 
See <a href="#pg_kerberos">Using Kerberos</a> for details on how to authenticate with Kerberos.
	
</p>

<p>
<h3>HTTP Streams</h3>
</p>

<p>Set the following to identify your Avro resources stored on HTTP streams:
<ul><li><u>ConnectionType</u>: Set this to <b>HTTP</b> or <b>HTTPS</b>.</li><li><u>URI</u>: Set this to the URI of your HTTP(S) stream. For example:
<ul><li>HTTP: <var>http://remoteStream</var></li><li>HTTPS: <var>https://remoteStream</var></li></ul></li></ul></p>

<p>See <a href="#pg_connectionhttp">Connecting to HTTP Streams</a> for more information regarding how to connect and authenticate to Avro files hosted on HTTP Streams.


<h3>IBM Cloud Object Storage</h3>
</p>

<p></p>

<p>Set the following to identify your Avro resources stored on IBM Cloud Object Storage:
<ul><li><u>ConnectionType</u>: Set this to <b>IBM Object Storage Source</b>.</li><li><u>URI</u>: Set this to the bucket and folder. For example: <var>ibmobjectstorage://bucket1/remotePath</var>.</li><li><u>Region</u>: Set this property to your IBM instance region. For example: <var>eu-gb</var>.</li></ul></p>

<p>See <a href="#pg_connectionibmcloudobjectstorage">Connecting to IBM Object Storage</a> for more information regarding how to connect and authenticate to Avro files hosted on IBM Cloud Object Storage.
</p>

<p>
<h3>OneDrive</h3>
</p>

<p>Set the following to identify your Avro resources stored on OneDrive:
<ul><li><u>ConnectionType</u>: Set this to <b>OneDrive</b>.</li><li><u>URI</u>: Set this to the path to a folder containing Avro files. For example: <var>onedrive://remotePath</var>.</li></ul></p>

<p>See <a href="#pg_connectiononedrive">Connecting to OneDrive</a> for more information regarding how to connect and authenticate to Avro files hosted on OneDrive.


<h3>Oracle Cloud Storage</h3>
</p>

<p>Set the following properties to authenticate with HMAC:
<ul><li><u>ConnectionType</u>: Set the <u>ConnectionType</u> to <b>Oracle Cloud Storage</b>.</li><li><u>URI</u>: Set this to the bucket and folder: <var>os://bucket/remotePath</var>.</li><li><u>AccessKey</u>: Set this to an Oracle Cloud Access Key.</li><li><u>SecretKey</u>: Set this to an Oracle Cloud Secret Key.</li><li><u>OracleNamespace</u>: Set this to an Oracle cloud namespace.</li><li><u>Region</u> (optional): Set this to the hosting region for your S3-like Web Services.</li></ul>

</p>

<p>
<h3>SFTP</h3>
</p>

<p>Set the following to identify your Avro resources stored on SFTP:
<ul><li><u>ConnectionType</u>: Set this to <b>SFTP</b>.</li><li><u>URI</u>: Set this to the address of the server followed by the path to the folder to be used as the root folder. For example: <var>sftp://server:port/remotePath</var>.</li></ul></p>

<p>See <a href="#pg_connectionsftp">Connecting to SFTP</a> for more information regarding how to connect and authenticate to Avro files hosted on SFTP.


<h3>SharePoint Online</h3>
</p>

<p>Set the following to identify your Avro resources stored on SharePoint Online:
<ul><li><u>ConnectionType</u>: Set this to <b>SharePoint REST</b> or <b>SharePoint SOAP</b>.</li><li><u>URI</u>: Set this to a document library containing Avro files. For example:
<ul><li>SharePoint Online REST: <var>sprest://remotePath</var></li><li>SharePoint Online SOAP: <var>sp://remotePath</var></li></ul></li></ul></p>

<p>See <a href="#pg_connectionsharepointonline">Connecting to SharePoint Online</a> for more information regarding how to connect and authenticate to Avro files hosted on SharePoint Online.
 






</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Building the JDBC URL" desc="CData JDBC Driver for Avro - RSBAvro -  Building the JDBC URL: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Building the JDBC URL</h1>
       

    <div class="chapter_content" id="pg_jdbcconnstring">

<p>
<h2>Building the JDBC URL</h2>
</p>

<p>Connection strings provide information about a data source and how to connect to that data source. The driver comes with a connection string builder that makes it easier to create and manage the contents of connection strings.
</p>

<p>After downloading and installing the driver, double-click the .jar file in the lib folder. You can also manually run the .jar file, as shown in the following examples.
</p>

<p>From Windows:

<br/><pre lang="">java -jar 'C:\Program Files\CData\CData JDBC Driver for Avro 2023\lib\cdata.jdbc.avro.jar'</pre>
</p>

<p>From macOS:

<br/><pre lang="">java -jar cdata.jdbc.avro.jar</pre>
</p>

<p>Running the .jar file opens the <b>Connection Properties</b> dialog box. You can use this dialog box to build and test a connection string. Click <b>Test Connection</b> to test and validate the entered connection properties. Click <b>Copy to Clipboard</b> to copy the connection string for use within the application where the JDBC driver is being used.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Amazon S3" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Amazon S3: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Amazon S3</h1>
       

    <div class="chapter_content" id="pg_connections3">

<p>
<h2>Before You Connect</h2>
</p>

<p>
<h3>Obtain AWS Keys</h3>

To obtain the credentials for an IAM user:
<ol><li>Sign into the IAM console.</li><li>In the navigation pane, select <b>Users</b>.</li><li>To create or manage the access keys for a user, select the user and then go to the <b>Security Credentials</b> tab.</li></ol>

To obtain the credentials for your AWS root account:
<ol><li>Sign into the AWS Management console with the credentials for your root account.</li><li>Select your account name or number.</li><li>In the menu that displays, select <b>My Security Credentials</b>.</li><li>To manage or create root account access keys, click <b>Continue to Security Credentials</b> and expand the "Access Keys" section. </li></ol></p>

<p>
<h2>Connecting to Amazon S3</h2>
</p>

<p>Specify the following to connect to data:
<ul><li><u>AWSRegion</u>: Set this to the region where your Avro data is hosted.</li><li><u>StorageBaseURL</u> (optional): Specify the base S3 service URL only if it has a different URL from "amazonaws.com". Make sure to specify the full URL. For example: <var>http://127.0.0.1:9000</var>.</li></ul>


<h2>Authenticating to Amazon S3</h2>
</p>

<p>There are several authentication methods available for connecting to Avro including: 
<ul><li>Root Credentials</li><li>AWS Role, as an AWS Role (from an EC2 Instance or by specifying the root credentials)</li><li>SSO (ADFS, Okta, PingFederate)</li><li>MFA</li><li>Temporary Credentials</li><li>Credentials File</li></ul></p>

<p>
<h3>Root Credentials</h3>
</p>

<p>To authenticate using account root credentials, set these configuration parameters:
<ul><li><u>AuthScheme</u>: <b>AwsRootKeys</b>.</li><li><u>AWSAccessKey</u>: The access key associated with the AWS root account.</li><li><u>AWSSecretKey</u>: The secret key associated with the AWS root account.</li></ul></p>

<p><b>Note:</b> Use of this authentication scheme is discouraged by Amazon for anything but simple tests. The account root credentials have the full permissions of the user, making this the least secure authentication method.</p>

<p>
<h3>EC2 Instances</h3>
</p>

<p>Set <u>AuthScheme</u> to <b>AwsEC2Roles</b>.</p>

<p>If you are using the driver from an EC2 Instance and have an IAM Role assigned to the instance, you can use the 
IAM Role to authenticate. Since the driver automatically obtains your IAM Role credentials and authenticates with them, it is not necessary to specify <u>AWSAccessKey</u> and <u>AWSSecretKey</u>.
</p>

<p>If you are also using an IAM role to authenticate, you must additionally specify the following:</p>

<p><ul><li><u>AWSRoleARN</u>: Specify the Role ARN for the role you'd like to authenticate with. This will cause the driver to attempt to retrieve credentials for
  the specified role.
  </li><li><u>AWSExternalId</u> (optional): Only required if you are assuming a role in another AWS account.</li></ul>
</p>

<p>
<h5>IMDSv2 Support</h5>
</p>

<p>The Avro driver now supports IMDSv2. Unlike IMDSv1, the new version requires an authentication token. Endpoints and response are the same in both versions.  </p>

<p>In IMDSv2, the Avro driver first attempts to retrieve the IMDSv2 metadata token and then uses it to call AWS metadata endpoints. If it is unable to retrieve the token, the driver reverts to IMDSv1.</p>

<p>
<h3>
<h3>AWS IAM Roles</h3>
</h3>
</p>

<p>Set <u>AuthScheme</u> to <b>AwsIAMRoles</b>.</p>

<p>In many situations, it may be preferable to use an IAM role for authentication instead of the direct security credentials of an AWS root user. If you are specifying the <u>AWSAccessKey</u> and <u>AWSSecretKey</u> of an AWS root user, you may not use roles.
</p>

<p>To authenticate as an AWS role, set these properties:</p>

<p><ul><li><u>AWSAccessKey</u>: The access key of the IAM user to assume the role for.</li><li><u>AWSSecretKey</u>: The secret key of the IAM user to assume the role for.</li><li><u>AWSRoleARN</u>: Specify the Role ARN for the role you'd like to authenticate with. This will cause the driver to attempt to retrieve credentials for
the specified role.</li><li><u>AWSExternalId</u> (optional): Only required if you are assuming a role in another AWS  account.</li></ul>


<h3>ADFS</h3>
</p>

<p>To connect to ADFS, set the <u>AuthScheme</u> to <b>ADFS</b>, and set these properties:
<ul><li><u>User</u>: The ADFS user.</li><li><u>Password</u>: The ADFS user's password.</li><li><u>SSOLoginURL</u>: The SSO provider's login url.</li></ul>
</p>

<p>To authenticate to ADFS, set these <u>SSOProperties</u>: 
<ul><li>RelyingParty: The value of the ADFS server's Relying Party Identifier.</li></ul>
</p>

<p>Example connection string: 
<br/><pre lang="">AuthScheme=ADFS;User=username;Password=password;SSOLoginURL='https://sts.company.com';SSOProperties='RelyingParty=https://saml.salesforce.com';</pre>

<h3>Okta</h3>
</p>

<p>To connect to Okta, set the <u>AuthScheme</u> to <b>Okta</b>, and set these properties:
<ul><li><u>User</u>: The Okta user.</li><li><u>Password</u>: The Okta user's password.</li><li><u>SSOLoginURL</u>: The SSO provider's login URL.</li></ul></p>

<p>If you are using a trusted application or proxy that overrides the Okta client request OR configuring MFA, you must use combinations of <u>SSOProperties</u> to authenticate using Okta. Set any of the following, as applicable:</p>

<p><ul><li>APIToken: When authenticating a user via a trusted application or proxy that overrides the Okta client request context, set this to the API Token the customer created from the Okta organization.</li><li>MFAType: If you have configured the MFA flow, set this to one of the following supported types: <b>OktaVerify</b>, <b>Email</b>, or <b>SMS</b>.</li><li>MFAPassCode: If you have configured the MFA flow, set this to a valid passcode. <br>
If you set this to empty or an invalid value, the driver issues a one-time password challenge to your device or email. After the passcode is received, reopen the connection where the retrieved one-time password value is set to the MFAPassCode connection property.</li><li>MFARememberDevice: <b>True</b> by default. Okta supports remembering devices when MFA is required. If remembering devices is allowed according to the configured authentication policies, the driver sends a device token to extend MFA authentication lifetime. If you do not want MFA to be remembered, set this 
variable to <b>False</b>.</li></ul>
</p>

<p>Example connection string:
<br/><pre lang="">AuthScheme=Okta;SSOLoginURL='https://example.okta.com/home/appType/0bg4ivz6cJRZgCz5d6/46';User=oktaUserName;Password=oktaPassword;</pre></p>

<p>To connect to PingFederate, set <u>AuthScheme</u> to <b>PingFederate</b>, and set these properties:
<ul><li><u>User</u>: The PingFederate user.</li><li><u>Password</u>: The PingFederate user's password.</li><li><u>SSOLoginURL</u>: The SSO provider's login url.</li><li><u>AWSRoleARN</u> (optional): If you have multiple role ARNs, specify the one you want to use for authorization.</li><li><u>AWSPrincipalARN</u> (optional): If you have multiple principal ARNs, specify the one you want to use for authorization.</li><li><u>SSOExchangeUrl</u>: The <b>Partner Service Identifier</b> URI configured in your PingFederate server instance under: <b>SP Connections &gt; SP Connection &gt; WS-Trust &gt; Protocol Settings</b>. This should uniquely identify a PingFederate SP Connection, so it is a good idea to set it to your <b>AWS SSO ACS URL</b>. You can find it under <b>AWS SSO &gt; Settings &gt; View Details</b> next to the <b>Authentication</b> field.</li><li><u>SSOProperties</u> (optional): <b>Authscheme=Basic</b> if you want to include your username and password as an authorization header in requests to Amazon S3.</li></ul></p>

<p>To enable mutual SSL authentication for <u>SSOLoginURL</u>, the WS-Trust STS endpoint, configure these 
<u>SSOProperties</u>:
<ul><li><u>SSLClientCert</u></li><li><u>SSLClientCertType</u></li><li><u>SSLClientCertSubject</u></li><li><u>SSLClientCertPassword</u></li></ul>
</p>

<p>Example connection string: 
<br/><pre lang="">authScheme=pingfederate;SSOLoginURL=https://mycustomserver.com:9033/idp/sts.wst;SSOExchangeUrl=https://us-east-1.signin.aws.amazon.com/platform/saml/acs/764ef411-xxxxxx;user=admin;password=PassValue;AWSPrincipalARN=arn:aws:iam::215338515180:saml-provider/pingFederate;AWSRoleArn=arn:aws:iam::215338515180:role/SSOTest2;</pre></p>

<p>
<h3>MFA</h3>
</p>

<p>For users and roles that require Multi-factor Authentication, specify the following to authenticate:
<ul><li><u>AuthScheme</u>: Set this to <b>AwsMFA</b>.</li><li><u>CredentialsLocation</u>: The location of the settings file where MFA credentials are saved. See the Credentials File Location page under Connection String Options for more information.</li><li><u>MFASerialNumber</u>: The serial number of the MFA device if one is being used.</li><li><u>MFAToken</u>: The temporary token available from your MFA device.</li></ul>

If you are connecting to AWS (instead of already being connected such as on an EC2 instance), you must additionally specify the following:
<ul><li><u>AWSAccessKey</u>: The access key of the IAM user for whom MFA will be issued.
  </li><li><u>AWSSecretKey</u>: The secret key of the IAM user whom MFA will be issued.</li></ul>

If you are also using an IAM role to authenticate, you must additionally specify the following:
<ul><li><u>AWSRoleARN</u>: Specify the Role ARN for the role you'd like to authenticate with. This will cause the driver to attempt to retrieve credentials for
  the specified role using MFA.
  </li><li><u>AWSExternalId</u> (optional): Only required if you are assuming a role in another AWS  account.</li></ul>

This causes the driver to submit the MFA credentials in a request to retrieve temporary authentication credentials.</p>

<p>Note that you can control the duration of the temporary credentials by setting the <u>TemporaryTokenDuration</u> property (default 3600 seconds).
</p>

<p>
<h3>Temporary Credentials</h3>
</p>

<p>To authenticate using temporary credentials, specify the following:
<ul><li><u>AuthScheme</u>: Set this to <b>AwsTempCredentials</b>.</li><li><u>AWSAccessKey</u>: The access key of the IAM user to assume the role for.</li><li><u>AWSSecretKey</u>: The secret key of the IAM user to assume the role for.</li><li><u>AWSSessionToken</u>: Your AWS session token. This will have been provided alongside your temporary credentials. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">AWS Identity and Access Management User Guide</a> for more info.</li></ul></p>

<p>The driver can now request resources using the same permissions provided by long-term credentials (such as IAM user credentials) for the lifespan of the temporary credentials.
</p>

<p>If you are also using an IAM role to authenticate, you must additionally specify the following:
<ul><li><u>AWSRoleARN</u>: Specify the Role ARN for the role you'd like to authenticate with. This will cause the driver to attempt to retrieve credentials for
  the specified role.
  </li><li><u>AWSExternalId</u> (optional): Only required if you are assuming a role in another AWS  account.</li></ul>
</p>

<p>
<h3>Credentials Files</h3>
</p>

<p>You can use a credentials file to authenticate. Any configurations related to AccessKey/SecretKey authentication, temporary credentials, role authentication, or MFA can be used.
To do so, set the following properties to authenticate:
<ul><li><u>AuthScheme</u>: Set this to <b>AwsCredentialsFile</b>.</li><li><u>AWSCredentialsFile</u>: Set this to the location of your credentials file.</li><li><u>AWSCredentialsFileProfile</u> (optional): Optionally set this to the name of the profile you would like to use from the specified credentials file. If not specified, the profile with the name <i>default</i> will be used.</li></ul>
See <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html">AWS Command Line Interface User Guide</a> for more information.

<h3>Azure AD</h3>
</p>

<p>This configuration requires two separate Azure AD applications: 
<ul><li>The "Avro" application used for single sign-on, and </li><li>A custom OAuth application with user_impersonation permission on the "Avro" application. (See <a href="#pg_oauthcustomappcreate">Creating a Custom OAuth App</a>.)</li></ul></p>

<p>To connect to Azure AD, set the <u>AuthScheme</u> to <b>AzureAD</b>, and set these properties:

<ul><li><u>OAuthClientId</u>: The application Id of the connector application, listed in the Overview section of the app registration.</li><li><u>OAuthClientSecret</u>: The client secret value of the connector application. Azure AD displays this when you create a new client secret.</li><li><u>CallbackURL</u>: The redirect URI of the connector application. For example: <var>https://localhost:33333</var>.</li><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH.</li></ul>
</p>

<p>To authenticate to Azure AD, set these <u>SSOProperties</u>: 
<ul><li>Resource: The application Id URI of the Avro application, listed in the app registration's Overview section. In most cases this is the URL of your custom Avro domain.</li><li>AzureTenant: The Id of the Azure AD tenant where the applications are registered.</li></ul>
</p>

<p>Example connection string:
<br/><pre lang="">AuthScheme=AzureAD;InitiateOAuth=GETANDREFRESH;OAuthClientId=3ea1c786-d527-4399-8c3b-2e3696ae4b48;OauthClientSecret=xxx;CallbackUrl=https://localhost:33333;SSOProperties='Resource=https://signin.aws.amazon.com/saml;AzureTenant=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx';</pre></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Azure Blob Storage" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Azure Blob Storage: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Azure Blob Storage</h1>
       

    <div class="chapter_content" id="pg_connectionazureblobstorage">

<p>
<h2>Before You Connect</h2>
</p>

<p>To obtain the credentials for an AzureBlob user, follow the steps below:
<ol><li>Sign into the <a href="https://portal.azure.com/">Azure portal</a> with the credentials for your root account.</li><li>Click on <b>Storage Accounts</b> and select the storage account you want to use.</li><li>Under <b>Settings</b>, click <b>Access keys</b>.</li><li>Your storage account name and key will be displayed on that page.</li></ol>


<h2>Connecting to Azure Blob Storage</h2>
</p>

<p>Set <u>AzureStorageAccount</u> to your Azure Blob Storage account name.</p>

<p>
<h2>Authenticating to Azure Blob Storage</h2>
</p>

<p>You can authenticate to Azure Blob Storage via Access Key, Shared Access Signatures (SAS), AzureAD user, Azure MSI, or Azure Service Principal.</p>

<p>
<h3>Access Key</h3>
</p>

<p>Set the following to authenticate with an Azure Access Key:
<ul><li><u>AuthScheme</u>: Set this to <b>AccessKey</b>.</li><li><u>AzureAccessKey</u>: Set this to the storage key associated with your Azure Blob Storage account.</li></ul>


<h3>Shared Access Signature (SAS)</h3>

Set the following to authenticate with an Shared Access Signature (SAS):
<ul><li><u>AuthScheme</u>: Set this to <b>AzureStorageSAS</b>.</li><li><u>AzureSharedAccessSignature</u>: Set this to the SAS associated with your Azure Blob Storage account.</li></ul>
Follow these steps to create a shared access signature using <u>AzureSharedAccessSignature</u>:</p>

<p><ol><li>Sign into the Azure Portal with the credentials for your root account. (<var>https://portal.azure.com/</var>)</li><li>Click <b>storage accounts</b> and select the storage account you want to use.</li><li>Under <b>settings</b>, click <b>Shared Access Signature</b>.</li><li>Set the permissions.</li><li>Specify when you want the token to expire.</li><li>Click <b>Generate SAS</b> and copy the shared access signature it generates.</li><li>Set <u>AzureSharedAccessSignature</u> to the shared access signature from the previous step. </li></ol></p>

<p>
<h3>AzureAD User</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>AzureAD</b> in all user account flows.</p>

<p>
<h4>Desktop Applications</h4>

CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_connectionazureblobstorageoauthcustomappcreate">Creating a Custom OAuth App</a> for information about creating custom applications and reasons for doing so.</p>

<p><b>Get and Refresh the OAuth Access Token</b></p>

<p>After setting the following, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u> (custom applications only): Set this to the client Id assigned when you registered your app.</li><li><u>OAuthClientSecret</u> (custom applications only): Set this to the client secret assigned when you registered your app.</li><li><u>CallbackURL</u> (custom application only): Set this to the redirect URI defined when you registered your app. For example: <var>http://localhost:33333</var></li></ul>
When you connect, the driver opens the Microsoft identity platform's OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>The driver obtains an access token from the Microsoft identity platform and uses it to request data.</li><li>The OAuth values are saved in the location specified in <u>OAuthSettingsLocation</u>, to be persisted across connections.</li></ol>
The driver refreshes the access token automatically when it expires.



<h4>Web Applications</h4>
</p>

<p>When connecting via a Web application, you need to register a custom OAuth app with Azure Active Directory. You can then use the driver to get and manage the OAuth token values. See <a href="#pg_connectionazureblobstorageoauthcustomappcreate">Creating a Custom OAuth App</a> for more information.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call stored procedures to complete the OAuth exchange:
<ol><li>
<p>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the <b>Redirect URI</b> you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.</p>
</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in, and authorize the web application. After authenticating, the browser redirects you to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the <var>code</var> parameter in the query string of the redirect URI.</li></ol></p>

<p>After you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually.</p>

<p><b>Automatic Refresh of the OAuth Access Token</b></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection.
<ul><li><u>InitiateOAuth</u>: Set this to REFRESH.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where you want the driver to save the OAuth values, which persist across connections.</li></ul></p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p></p>

<p>
<h4>Headless Machines</h4>
</p>

<p>To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, set the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the redirect URI.</li></ol></p>

<p>There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter. Later you will set this in the <u>OAuthVerifier</u> connection property.</p>

<p>    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens.
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the noted verifier code (the value of the <var>code</var> parameter in the redirect URI).</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>Test the connection to generate the OAuth settings file, then re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to install and create a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p>Test the connection to generate the OAuth settings file, then copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the OAuth settings file you copied from the machine with the browser. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul></p>

<p>
<h3>Azure MSI</h3>
</p>

<p></p>

<p>If you are connecting from an Azure VM with permissions for Azure Data Lake Storage, set <u>AuthScheme</u> to <b>AzureMSI</b>.</p>

<p>
<h3>Azure Service Principal</h3>
</p>

<p>If you would like to authenticate with a service principal instead of a client secret, it is also possible to authenticate with a client certificate. Set the following to authenticate:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>AuthScheme</u>: Set this to <b>AzureServicePrincipal</b>. </li><li><u>AzureTenant</u>: Set this to the tenant you wish to connect to.</li><li><u>OAuthGrantType</u>: Set this to <b>CLIENT</b>.</li><li><u>OAuthClientId</u>: Set this to the Client Id in your app settings.</li><li><u>OAuthJWTCert</u>: Set this to the JWT Certificate store.</li><li><u>OAuthJWTCertType</u>: Set this to the type of the certificate store specified by <u>OAuthJWTCert</u>.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Creating a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Creating a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Creating a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_connectionazureblobstorageoauthcustomappcreate">

<p>
There are two types of custom AzureAD applications: AzureAD and AzureAD with an Azure Service Principal. Both are OAuth-based.


<h3>When to Create a Custom Application</h3>


CData embeds OAuth Application Credentials with CData branding that can be used when connecting via either a Desktop Application or from a Headless Machine. </p>

<p>
You may choose to use your own AzureAD Application Credentials when you want to 
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul> </p>

<p>

<h3>Custom AzureAD Applications</h3>


You can use a custom AzureAD application to authenticate a service account or a user account. You can always create a custom AzureAD application, but note that desktop and headless connections support embedded OAuth, which simplifies the process of authentication. See "Establishing a Connection" for information about using the embedded OAuth application. 



<h4>Create a Custom AzureAD App</h4>
</p>

<p>Follow the steps below to obtain the AzureAD values for your application, the <u>OAuthClientId</u> and <u>OAuthClientSecret</u>.</p>

<p><ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an application name and select the desired tenant setup.

When creating a custom AzureAD application in Azure Active Directory, you can define whether the application is single- or multi-tenant. If you select the default option, "Accounts in this organizational directory only", you must set the <u>AzureTenant</u> connection property to the Id of the Azure AD Tenant when establishing a connection with the CData JDBC Driver for Avro. Otherwise, the authentication attempt fails with an error. If your application is for private use only, "Accounts in this organization directory only" should be sufficient. Otherwise, if you want to distribute your application, choose one of the multi-tenant options.
 </li><li>Set the redirect url to <var>http://localhost:33333</var>, the driver's default. Or, specify a different port and set <u>CallbackURL</u> to the exact reply URL you defined.</li><li>Click <b>Register</b> to register the new application. This opens an application management screen. Note the value in <b>Application (client) ID</b> as the <u>OAuthClientId</u> and the <b>Directory (tenant) ID</b> as the <u>AzureTenant</u>.</li><li>Navigate to the "Certificates &amp; Secrets" and define the application authentication type. There are two types of authentication available: using a client secret or a certificate. The recommended authentication method is using a certificate.
<ul><li>Option 1: Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2: Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once.</i> You will need it as the <u>OAuthClientSecret</u>.</li></ul></li><li>Select <b>API Permissions &gt; Add</b>.  If you plan for your application to connect without a user context, select <b>Application Permissions</b> (<u>OAuthGrantType</u> = <b>CLIENT</b>). Otherwise, use the <b>Delegated permissions</b>.</li><li>Save your changes.</li><li>If you have selected to use permissions that require admin consent (such as the Application Permissions), you can grant them from the current tenant on the API Permissions page. Otherwise, follow the steps under
"Admin Consent".
</li></ol>


<h3>Custom AzureAD Service Principal Applications</h3>

</p>

<p>When authenticating using an Azure Service Principal, you must create both a custom AzureAD application and a service principal that can access the necessary resources. Follow the steps below to create a custom AzureAD application and obtain the connection properties for Azure Service Principal authentication.


<h4>Create a Custom AzureAD App with an Azure Service Principal</h4>

</p>

<p>Follow the steps below to obtain the AzureAD values for your application.</p>

<p>
<ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an app name and select <b>Any Azure AD Directory - Multi Tenant</b>. Then set the redirect url to  <var>http://localhost:33333</var>, the driver's default.</li><li>After creating the application, copy the Application (client) Id value displayed in the "Overview" section. This value is used as the <u>OAuthClientId</u></li><li>Define the app authentication type by going to the "Certificates &amp; Secrets" section. There are two types of authentication available: using a client secret and using a certificate. The recommended authentication method is via a certificate.
<ul><li>Option 1 - Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2 - Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once</i>. You will use it as the <u>OAuthClientSecret</u>.</li></ul></li><li>On the <b>Authentication</b> tab, make sure to select <b>Access tokens (used for implicit flows)</b>.</li></ol></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Azure Data Lake Storage" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Azure Data Lake Storage: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Azure Data Lake Storage</h1>
       

    <div class="chapter_content" id="pg_connectionazuredatalakestore">

<p>
<h2>Connecting to Azure Data Lake Storage</h2>
</p>

<p>Set <u>AzureStorageAccount</u> to your Azure Data Lake Storage account name.</p>

<p>
<h2>Authenticating to Azure Data Lake Storage</h2>
</p>

<p>You can authenticate to Azure Data Lake Storage via Access Key, Shared Access Signature (SAS), AzureAD user, Azure MSI, or Azure Service Principal.</p>

<p>
<h3>Access Key</h3>
</p>

<p>Set the following to authenticate with an Azure Access Key:
<ul><li><u>AuthScheme</u>: Set this to <b>AccessKey</b>.</li><li><u>AzureAccessKey</u>: Set this to the storage key associated with your Azure Data Lake Storage account.</li></ul></p>

<p>
<h3>Shared Access Signature (SAS)</h3>

Set the following to authenticate with an Shared Access Signature (SAS):
<ul><li><u>AuthScheme</u>: Set this to <b>AzureStorageSAS</b>.</li><li><u>AzureSharedAccessSignature</u>: Set this to the SAS associated with your Azure Blob Storage account.</li></ul>
Follow these steps to create a shared access signature using <u>AzureSharedAccessSignature</u>:</p>

<p><ol><li>Sign into the Azure Portal with the credentials for your root account. (<var>https://portal.azure.com/</var>)</li><li>Click <b>storage accounts</b> and select the storage account you want to use.</li><li>Under <b>settings</b>, click <b>Shared Access Signature</b>.</li><li>Set the permissions.</li><li>Specify when you want the token to expire.</li><li>Click <b>Generate SAS</b> and copy the shared access signature it generates.</li><li>Set <u>AzureSharedAccessSignature</u> to the shared access signature from the previous step. </li></ol>

<h3>AzureAD User</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>AzureAD</b> in all user account flows.</p>

<p>
<h4>Desktop Applications</h4>

CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_connectionazuredatalakeoauthcustomappcreate">Creating a Custom OAuth App</a> for information about creating custom applications and reasons for doing so.</p>

<p><b>Get and Refresh the OAuth Access Token</b></p>

<p>After setting the following, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u> (custom applications only): Set this to the client Id assigned when you registered your app.</li><li><u>OAuthClientSecret</u> (custom applications only): Set this to the client secret assigned when you registered your app.</li><li><u>CallbackURL</u> (custom application only): Set this to the redirect URI defined when you registered your app. For example: <var>http://localhost:33333</var></li></ul>
When you connect, the driver opens the Microsoft identity platform's OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>The driver obtains an access token from the Microsoft identity platform and uses it to request data.</li><li>The OAuth values are saved in the location specified in <u>OAuthSettingsLocation</u>, to be persisted across connections.</li></ol>
The driver refreshes the access token automatically when it expires.



<h4>Web Applications</h4>
</p>

<p>When connecting via a Web application, you need to register a custom OAuth app with Azure Active Directory. You can then use the driver to get and manage the OAuth token values. See <a href="#pg_connectionazuredatalakeoauthcustomappcreate">Creating a Custom OAuth App</a> for more information.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call stored procedures to complete the OAuth exchange:
<ol><li>
<p>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the <b>Redirect URI</b> you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.</p>
</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in, and authorize the web application. After authenticating, the browser redirects you to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the <var>code</var> parameter in the query string of the redirect URI.</li></ol></p>

<p>After you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually.</p>

<p><b>Automatic Refresh of the OAuth Access Token</b></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection.
<ul><li><u>InitiateOAuth</u>: Set this to REFRESH.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where you want the driver to save the OAuth values, which persist across connections.</li></ul></p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p></p>

<p>
<h4>Headless Machines</h4>
</p>

<p>To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, set the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the redirect URI.</li></ol></p>

<p>There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter. Later you will set this in the <u>OAuthVerifier</u> connection property.</p>

<p>    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens.
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the noted verifier code (the value of the <var>code</var> parameter in the redirect URI).</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>Test the connection to generate the OAuth settings file, then re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to install and create a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p>Test the connection to generate the OAuth settings file, then copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the OAuth settings file you copied from the machine with the browser. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul></p>

<p>
<h3>Azure MSI</h3>
</p>

<p></p>

<p>If you are connecting from an Azure VM with permissions for Azure Data Lake Storage, set <u>AuthScheme</u> to <b>AzureMSI</b>.</p>

<p>
<h3>Azure Service Principal</h3>
</p>

<p>If you would like to authenticate with a service principal instead of a client secret, it is also possible to authenticate with a client certificate. Set the following to authenticate:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>AuthScheme</u>: Set this to <b>AzureServicePrincipal</b>. </li><li><u>AzureTenant</u>: Set this to the tenant you wish to connect to.</li><li><u>OAuthGrantType</u>: Set this to <b>CLIENT</b>.</li><li><u>OAuthClientId</u>: Set this to the Client Id in your app settings.</li><li><u>OAuthJWTCert</u>: Set this to the JWT Certificate store.</li><li><u>OAuthJWTCertType</u>: Set this to the type of the certificate store specified by <u>OAuthJWTCert</u>.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Creating a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Creating a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Creating a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_connectionazuredatalakeoauthcustomappcreate">

<p>
There are two types of custom AzureAD applications: AzureAD and AzureAD with an Azure Service Principal. Both are OAuth-based.


<h3>When to Create a Custom Application</h3>


CData embeds OAuth Application Credentials with CData branding that can be used when connecting via either a Desktop Application or from a Headless Machine. </p>

<p>
You may choose to use your own AzureAD Application Credentials when you want to 
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul> </p>

<p>

<h3>Custom AzureAD Applications</h3>


You can use a custom AzureAD application to authenticate a service account or a user account. You can always create a custom AzureAD application, but note that desktop and headless connections support embedded OAuth, which simplifies the process of authentication. See "Establishing a Connection" for information about using the embedded OAuth application. 



<h4>Create a Custom AzureAD App</h4>
</p>

<p>Follow the steps below to obtain the AzureAD values for your application, the <u>OAuthClientId</u> and <u>OAuthClientSecret</u>.</p>

<p><ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an application name and select the desired tenant setup.

When creating a custom AzureAD application in Azure Active Directory, you can define whether the application is single- or multi-tenant. If you select the default option, "Accounts in this organizational directory only", you must set the <u>AzureTenant</u> connection property to the Id of the Azure AD Tenant when establishing a connection with the CData JDBC Driver for Avro. Otherwise, the authentication attempt fails with an error. If your application is for private use only, "Accounts in this organization directory only" should be sufficient. Otherwise, if you want to distribute your application, choose one of the multi-tenant options.
 </li><li>Set the redirect url to <var>http://localhost:33333</var>, the driver's default. Or, specify a different port and set <u>CallbackURL</u> to the exact reply URL you defined.</li><li>Click <b>Register</b> to register the new application. This opens an application management screen. Note the value in <b>Application (client) ID</b> as the <u>OAuthClientId</u> and the <b>Directory (tenant) ID</b> as the <u>AzureTenant</u>.</li><li>Navigate to the "Certificates &amp; Secrets" and define the application authentication type. There are two types of authentication available: using a client secret or a certificate. The recommended authentication method is using a certificate.
<ul><li>Option 1: Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2: Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once.</i> You will need it as the <u>OAuthClientSecret</u>.</li></ul></li><li>Select <b>API Permissions &gt; Add</b>.  If you plan for your application to connect without a user context, select <b>Application Permissions</b> (<u>OAuthGrantType</u> = <b>CLIENT</b>). Otherwise, use the <b>Delegated permissions</b>.</li><li>Save your changes.</li><li>If you have selected to use permissions that require admin consent (such as the Application Permissions), you can grant them from the current tenant on the API Permissions page. Otherwise, follow the steps under
"Admin Consent".
</li></ol>


<h3>Custom AzureAD Service Principal Applications</h3>

</p>

<p>When authenticating using an Azure Service Principal, you must create both a custom AzureAD application and a service principal that can access the necessary resources. Follow the steps below to create a custom AzureAD application and obtain the connection properties for Azure Service Principal authentication.


<h4>Create a Custom AzureAD App with an Azure Service Principal</h4>

</p>

<p>Follow the steps below to obtain the AzureAD values for your application.</p>

<p>
<ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an app name and select <b>Any Azure AD Directory - Multi Tenant</b>. Then set the redirect url to  <var>http://localhost:33333</var>, the driver's default.</li><li>After creating the application, copy the Application (client) Id value displayed in the "Overview" section. This value is used as the <u>OAuthClientId</u></li><li>Define the app authentication type by going to the "Certificates &amp; Secrets" section. There are two types of authentication available: using a client secret and using a certificate. The recommended authentication method is via a certificate.
<ul><li>Option 1 - Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2 - Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once</i>. You will use it as the <u>OAuthClientSecret</u>.</li></ul></li><li>On the <b>Authentication</b> tab, make sure to select <b>Access tokens (used for implicit flows)</b>.</li></ol></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Box" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Box: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Box</h1>
       

    <div class="chapter_content" id="pg_connectionbox">

<p>
<h2>Connecting to Box</h2>
</p>

<p>Use the OAuth authentication standard to connect to Box. You can authenticate with a user account or with a service account. A service account is required to grant organization-wide access scopes to the driver. The driver facilitates these authentication flows as described below.


<h3>User Accounts (OAuth)</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>OAuth</b> in all user account flows.</p>

<p>
<h4>Desktop Applications</h4>

CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_boxoauthcustomappcreate">Create a Custom OAuth App</a> for information about creating custom applications and reasons for doing so.</p>

<p><b>Get and Refresh the OAuth Access Token</b></p>

<p>After setting the following, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u> (custom applications only): Set this to the client Id assigned when you registered your app.</li><li><u>OAuthClientSecret</u> (custom applications only): Set this to the client secret assigned when you registered your app.</li><li><u>CallbackURL</u> (custom application only): Set this to the redirect URI defined when you registered your app. For example: <var>http://localhost:33333</var></li></ul>
When you connect, the driver opens Box's OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>The driver obtains an access token from Box and uses it to request data.</li><li>The OAuth values are saved in the location specified in <u>OAuthSettingsLocation</u>, to be persisted across connections.</li></ol>
The driver refreshes the access token automatically when it expires.



<h4>Web Applications</h4>
</p>

<p>When connecting via a Web application, you need to register a custom OAuth app with Box. You can then use the driver to get and manage the OAuth token values. See <a href="#pg_boxoauthcustomappcreate">Create a Custom OAuth App</a> for more information.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call stored procedures to complete the OAuth exchange:
<ol><li>
<p>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the <b>Redirect URI</b> you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.</p>
</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in, and authorize the web application. After authenticating, the browser redirects you to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the <var>code</var> parameter in the query string of the redirect URI.</li></ol></p>

<p>After you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually.</p>

<p><b>Automatic Refresh of the OAuth Access Token</b></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection.
<ul><li><u>InitiateOAuth</u>: Set this to REFRESH.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where you want the driver to save the OAuth values, which persist across connections.</li></ul></p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p></p>

<p>
<h4>Headless Machines</h4>
</p>

<p>To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, set the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter. Later you will set this in the <u>OAuthVerifier</u> connection property.</li></ol>
    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens.
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the noted verifier code (the value of the <var>code</var> parameter in the redirect URI).</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>Test the connection to generate the OAuth settings file, then re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to install and create a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p>Test the connection to generate the OAuth settings file, then copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the OAuth settings file you copied from the machine with the browser. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul>


<h3>Authenticate with a Service Account</h3>
</p>

<p>Set the <u>AuthScheme</u> to <b>OAuthJWT</b> to authenticate with this method.</p>

<p>Service accounts have silent authentication, without user authentication in the browser.  You can also use a service account to delegate enterprise-wide access scopes to the driver.</p>

<p>You need to create an OAuth application in this flow. See <a href="#pg_boxoauthcustomappcreate">Create a Custom OAuth App</a> to create and authorize an app. You can then connect to Box data that the service account has permission to access.
</p>

<p>After setting the following connection properties, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set to GETANDREFRESH. </li><li><u>OAuthClientId</u>: Set to the Client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set to the Client Secret in your app settings.  </li><li><u>OAuthJWTCertType</u>: Set to "PEMKEY_FILE". </li><li><u>OAuthJWTCert</u>: Set to the path to the .pem file you generated. </li><li><u>OAuthJWTCertPassword</u>: Set to the password of the .pem file.</li><li><u>OAuthJWTCertSubject</u>: Set to "*" to pick the first certificate in the certificate store.  </li><li><u>OAuthJWTSubjectType</u>: Set to "enterprise" or "user" depending on the Application Access Value you selected in your app settings. The default value of this connection property is "enterprise". </li><li><u>OAuthJWTSubject</u>: Set to your enterprise Id if your subject type is set to "enterprise" or your app user Id if your subject type is set to "user". </li><li><u>OAuthJWTPublicKeyId</u>: Set to the Id of your public key in your app settings. </li></ul>
When you connect the driver completes the OAuth flow for a service account. 
  <ol><li>Creates and signs the JWT with the claim set required by the driver.
  </li><li>Exchanges the JWT for the access token.
  </li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> to be persisted across connections.
  </li><li>Submits the JWT for a new access token when the token expires.
  </li></ol>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Create a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Create a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Create a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_boxoauthcustomappcreate">

<p>
<h2>When To Create a Custom OAuth Application</h2>


CData embeds OAuth Application Credentials with CData branding that can be used when connecting via a desktop application or headless application. </p>

<p>
You may choose to use your own OAuth Application Credentials when you want to 
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul></p>

<p>
<h2>Create an OAuth App for User Accounts</h2>
</p>

<p><ol><li>Log in to your <a href="https://app.box.com/developers/console">Box developers dashboard</a> and click <b>Create New App</b>. Select your app type (e.g., Custom App). </li><li>Select the Standard OAuth 2.0 (User Authentication) authentication method and click <b>View Your App</b>. After creating your app, you can click <b>Configuration</b> from the main menu to access your app settings.</li><li>Note the displayed <b>Client ID</b> and <b>Client Secret</b>. You will later need to use these values to populate the <u>OAuthClientId</u> and <u>OAuthClientSecret</u> connection properties.</li><li>Set the Redirect URI and store the specified value for later driver configuration.
<ul><li>When setting up a desktop app or headless app, set the Redirect URI to <var>http://localhost:33333</var> or a different port number.</li><li>When setting up a web app, set the Redirect URI to <var>https://&lt;yourwebappserver&gt;:&lt;port&gt;</var>.</li></ul></li><li>Select the scope of user permissions your app will request.</li></ol>
</p>

<p>
<h2>Create an OAuth App for Service Accounts</h2>

 </p>

<p>Follow the steps below to create an OAuth application and generate a private key. You will then authorize the service account.


<ol><li>Log in to your <a href="https://app.box.com/developers/console">Box developers dashboard</a> and click <b>Create New App</b>. Select your app type (e.g., Custom App). </li><li>Select the <b>OAuth 2.0 with JWT (Server Authentication)</b> authentication method, provide an application name, and click <b>Create App</b>. After creating your app, you can click <b>Configuration</b> from the main menu to access your app settings.</li><li>Note the displayed Client ID and Client Secret. You will later need to use these values to populate the <u>OAuthClientId</u> and <u>OAuthClientSecret</u> connection properties.
  </li><li>Select the application access level and the scope of user permissions your app will request. The enterprise access level enables you to work with existing users in your enterprise. The <var>application-level</var> setting restricts access to App-type users, users that have only API access.</li><li>Generate your RSA keypair. First you need to generate your private key. You can do this by running the following OpenSSL command : <var>openssl genrsa -aes128 -out private_key.pem 2048</var> (you can install and use the Cygwin package to run the OpenSSL RSA keypair if you are using Windows).</li><li>Generate your public key by running the following OpenSSL command: <var>openssl rsa -pubout -in private_key.pem -out public_key.pem</var>. Copy the contents of the generated public_key.pem file and then add it by using the <b>Add and Manage Public Keys</b> option in your app settings.
  </li><li>
<p>Authorize the application in the <a href="https://app.box.com/master/settings">enterprise admin console</a>:  Navigate to <b>Apps &gt; Custom Apps Manager &gt; Add App</b>. In the Add App modal window, provide the Client Id and click <b>Next</b> to identify and verify the app.</p>

  
<p>  <i>Note</i>: If you change the JWT access scopes, you will need to reauthorize the application in the enterprise admin console: Click <b>Apps</b> in the main menu and then select the ellipsis button next to your JWT application name. Select <b>Reauthorize App</b> in the menu.
  </p>
</li></ol>

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Dropbox" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Dropbox: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Dropbox</h1>
       

    <div class="chapter_content" id="pg_connectiondropbox">

<p>
<h2>Connecting to Dropbox</h2>
</p>

<p></p>

<p>Dropbox uses the OAuth authentication standard.

<h3>Dropbox OAuth Scopes</h3>
</p>

<p>You need to choose between using CData's embedded OAuth app or <a href="#pg_dropboxoauthcustomappcreate">Create a Custom OAuth App</a>. </p>

<p>The embedded app includes the following scopes:
<ul><li>account_info.read</li><li>file_requests.read</li><li>files.content.read</li><li>files.content.write</li><li>files.metadata.read</li><li>sharing.read</li><li>sharing.write</li></ul>

<h3>Desktop Applications</h3>

CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_dropboxoauthcustomappcreate">Create a Custom OAuth App</a> for information about creating custom applications and reasons for doing so.</p>

<p><b>Get and Refresh the OAuth Access Token</b></p>

<p>After setting the following, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u> (custom applications only): Set this to the client Id assigned when you registered your app.</li><li><u>OAuthClientSecret</u> (custom applications only): Set this to the client secret assigned when you registered your app.</li><li><u>CallbackURL</u> (custom application only): Set this to the redirect URI defined when you registered your app. For example: <var>http://localhost:33333</var></li></ul>
When you connect, the driver opens Dropbox's OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>The driver obtains an access token from Dropbox and uses it to request data.</li><li>The OAuth values are saved in the location specified in <u>OAuthSettingsLocation</u>, to be persisted across connections.</li></ol>
The driver refreshes the access token automatically when it expires.



<h3>Web Applications</h3>
</p>

<p>When connecting via a Web application, you need to register a custom OAuth app with Dropbox. You can then use the driver to get and manage the OAuth token values. See <a href="#pg_dropboxoauthcustomappcreate">Create a Custom OAuth App</a> for more information.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: Set this to the <b>App secret</b> from your OAuth app settings.</li></ul></p>

<p>Then call stored procedures to complete the OAuth exchange:
<ol><li>
<p>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the <b>Redirect URI</b> you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.</p>
</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in, and authorize the web application. After authenticating, the browser redirects you to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the <var>code</var> parameter in the query string of the redirect URI.</li></ol></p>

<p>After you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually.</p>

<p><b>Automatic Refresh of the OAuth Access Token</b></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection.
<ul><li><u>InitiateOAuth</u>: Set this to REFRESH.</li><li><u>OAuthClientId</u>: Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: Set this to the <b>App secret</b> from your OAuth app settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where you want the driver to save the OAuth values, which persist across connections.</li></ul></p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:
<ul><li><u>OAuthClientId</u>: Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: Set this to the <b>App secret</b> from your OAuth app settings.</li></ul></p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p></p>

<p>
<h3>Headless Machines</h3>
</p>

<p>To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, set the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.</li><li><u>OAuthClientId</u>: Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: Set this to the <b>App secret</b> from your OAuth app settings.</li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter. Later you will set this in the <u>OAuthVerifier</u> connection property.</li></ol>
    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens.
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the noted verifier code (the value of the <var>code</var> parameter in the redirect URI).</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the <b>App secret</b> from your OAuth app settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>Test the connection to generate the OAuth settings file, then re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the <b>App secret</b> from your OAuth app settings.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to install and create a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p>Test the connection to generate the OAuth settings file, then copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the noted <b>App key</b> value from your OAuth app settings.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the <b>App secret</b> from your OAuth app settings.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the OAuth settings file you copied from the machine with the browser. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Create a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Create a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Create a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_dropboxoauthcustomappcreate">

<p>
<h2>When To Create a Custom OAuth Application</h2>


CData embeds OAuth Application Credentials with CData branding that can be used when connecting via a desktop application or headless application. </p>

<p>
You may choose to use your own OAuth Application Credentials when you want to 
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul></p>

<p>
<h2>Create a Custom OAuth App</h2>
</p>

<p><ol><li>Log in to your <a href="https://www.dropbox.com/developers/apps?_tk=pilot_lp&_ad=topbar4&_camp=myapps">Dropbox developers dashboard</a> and click Create New App. Select the Dropbox API type. Select the Full Dropbox access for your app.</li><li>After creating your app, you can view <b>Configuration</b> from the main menu that displays your app settings.</li><li>On the app Settings tab, note the values of <b>App key</b> and <b>App secret</b> for later driver configuration.</li><li>Set the Redirect URI and store the specified value for later driver configuration.
<ul><li>When setting up a desktop app or headless app, set the Redirect URI to <var>http://localhost:33333</var> or a different port number.</li><li>When setting up a web app, set the Redirect URI to <var>https://&lt;yourwebappserver&gt;:&lt;port&gt;</var>.</li></ul></li><li>On the app <b>Permissions</b> tab, select the scope of user permissions your app will request.

<p></p>
</li></ol></p>

<p>No further values need to be specified in the Avro app settings.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Google Cloud Storage" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Google Cloud Storage: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Google Cloud Storage</h1>
       

    <div class="chapter_content" id="pg_connectiongooglecloudstorage">

<p>
<h2>Connecting to Google Cloud Storage</h2>
</p>

<p>Set the <u>ProjectId</u> property to the Id of the project you want to connect to.</p>

<p>
<h2>Authenticating to Google Cloud Storage</h2>
</p>

<p>The driver supports using user accounts, service accounts 
and GCP instance accounts for authentication.</p>

<p>The following sections discuss the available authentication schemes for Google Cloud Storage:</p>

<p><ul><li>User Accounts (OAuth)</li><li>Service Account (OAuthJWT)</li><li>GCP Instance Account</li></ul>


<h3>User Accounts (OAuth)</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>OAuth</b> in all user account flows. 
</p>

<p>
<h4>Desktop Applications</h4>
</p>

<p>CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_googlecloudstorageoauthcustomappcreate">Create a Custom OAuth App</a> for information about creating custom applications and reasons for doing so. </p>

<p>For authentication, the only difference between the two methods is that you must set two additional connection properties when using custom OAuth applications. 

 </p>

<p>After setting the following connection properties, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>, which instructs the driver to automatically attempt to get and refresh the OAuth access token.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the Client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the Client Secret in the custom OAuth application settings.</li></ul>

When you connect the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application. The driver then completes the OAuth process as follows:</p>

<p><ul><li>Extracts the access token from the callback URL.</li><li>Obtains a new access token when the old one expires.</li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> that persist across connections.</li></ul>


<h4>Web Applications</h4>


When connecting via a Web application, you need to create and register a custom OAuth application with Google Cloud Storage. You can then use the driver to acquire and manage the OAuth token values. See <a href="#pg_googlecloudstorageoauthcustomappcreate">Create a Custom OAuth App</a> for more information about custom applications. </p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:</p>

<p>
<ul><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.</li></ul>
</p>

<p>Then call stored procedures to complete the OAuth exchange:</p>

<p><ol><li>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the Callback URL you specified in your application settings. The stored procedure returns the URL to the OAuth endpoint.</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in to the custom OAuth application and authorize the web application. Once authenticated, the browser redirects you to the callback URL.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set AuthMode to <b>WEB</b> and the Verifier input to the "code" parameter in the query string of the callback URL.</li></ol></p>

<p>Once you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually. </p>

<p>
<b>Automatic Refresh of the OAuth Access Token</b></p>

<p></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection:</p>

<p><ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where the driver saves the OAuth token values, which persist across connections.</li></ul>

On subsequent data connections, the values for OAuthAccessToken and OAuthRefreshToken are taken from <u>OAuthSettingsLocation</u>.
</p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
</p>

<p>Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:</p>

<p> 
  <ul><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.
  </li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.
  </li></ul>

  </p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>  Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p>

<h4>Headless Machines</h4>


To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application click <a href="">Google Cloud Storage OAuth endpoint</a> to open the endpoint in your browser.</li><li>If you are using a custom OAuth application, create the Authorization URL by setting the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the callback URL, which contains the verifier code.</li><li>Save the value of the verifier code. Later you will set this in the <u>OAuthVerifier</u> connection property.</li></ol>
    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens. Set the following properties:
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the verifier code.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the Client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the Client Secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>After the OAuth settings file is generated, you need to re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to create and install a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p> 
Once you have successfully tested the connection, copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of your OAuth settings file. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul>

  
<h3>Service Accounts (OAuthJWT)</h3>

  </p>

<p>To authenticate using a service account, you must create a new service account and have a copy of the accounts certificate. If you do not already have a service account, you can create one by following the procedure in <a href="#pg_googlecloudstorageoauthcustomappcreate">Create a Custom OAuth App</a>. 
  
  </p>

<p>For a JSON file, set these properties:
  <ul><li><u>AuthScheme</u>: Set this to <b>OAuthJWT</b>.
  
    </li><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>. 
  
  </li><li><u>OAuthJWTCertType</u>: Set this to <b>GOOGLEJSON</b>.
  </li><li><u>OAuthJWTCert</u>: Set this to the path to the <var>.json</var> file provided by Google.
  </li><li><u>OAuthJWTSubject</u>: (optional) Only set this value if the service account is part of a GSuite domain and you want to enable delegation. The value of this property should be the email address of the user whose data you want to access.
  </li></ul>
  
  </p>

<p>For a PFX file, set these properties instead:
  <ul><li><u>AuthScheme</u>: Set this to <b>OAuthJWT</b>.
  
    </li><li><u>InitiateOAuth</u>:  Set this to <b>GETANDREFRESH</b>. 
  
  </li><li><u>OAuthJWTCertType</u>: Set this to <b>PFXFILE</b>.
  </li><li><u>OAuthJWTCert</u>: Set this to the path to the <var>.pfx</var> file provided by Google.
  </li><li><u>OAuthJWTCertPassword</u>: (optional) Set this to the <var>.pfx</var> file password. In most cases you must provide this since Google encrypts PFX certificates.
  </li><li><u>OAuthJWTCertSubject</u>:  (optional) Set this only if you are using a <u>OAuthJWTCertType</u> which stores multiple certificates. Should not be set for PFX certificates generated by Google.
  </li><li><u>OAuthJWTIssuer</u>: Set this to the email address of the service account. This address will usually include the domain <b>iam.gserviceaccount.com</b>.
  </li><li><u>OAuthJWTSubject</u>: (optional) Only set this value if the service account is part of a GSuite domain and you want to enable delegation. The value of this property should be the email address of the user whose data you want to access.
  </li></ul>


<h3>GCP Instance Accounts </h3>
</p>

<p>When running on a GCP virtual machine, the driver can authenticate using a service account tied to the virtual machine.
To use this mode, set <u>AuthScheme</u> to <b>GCPInstanceAccount</b>.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Create a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Create a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Create a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_googlecloudstorageoauthcustomappcreate">

<p>
<h2>Creating a Custom OAuth Application</h2>

CData embeds OAuth Application Credentials with CData branding that can be used when connecting to Avro via a desktop application or a headless machine. </p>

<p>(For information on getting and setting the <u>OAuthAccessToken</u> and other configuration parameters, see the 
<i>Desktop Authentication</i> section of "Connecting to Avro".)</p>

<p>However, you must create a custom OAuth application to connect to Avro via the Web. And since custom OAuth 
applications seamlessly support all three commonly-used auth flows, you might want to create custom OAuth applications (use your own OAuth Application Credentials) for those auth flows anyway.</p>

<p>Custom OAuth applications are useful if you want to: 
<ul><li>control branding of the authentication dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user
 </li></ul>
</p>

<p></p>

<p>The following sections describe how to enable the Directory API and create custom OAuth applications for user accounts (OAuth) and 
Service Accounts (OAuth/JWT).
</p>

<p>

<h2>Enable the Cloud Storage API</h2>


Follow these steps to enable the Cloud Storage API:</p>

<p><ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Select <b>Library</b> from the left-hand navigation menu. This opens the <b>Library</b> page.</li><li>In the search field, enter "Cloud Storage API" and select <b>Cloud Storage API</b> from the search results.</li><li>On the <b>Cloud Storage API</b> page, click <b>ENABLE</b>. </li></ol></p>

<p>
<h2>Create an OAuth Application</h2>

To create custom OAuth applications that retrieve the necessary OAuth connection properties, follow these procedures.
</p>

<p>
<h3>User Accounts (OAuth)</h3>
</p>

<p>For users whose <u>AuthScheme</u> is <b>OAuth</b> and who need to authenticate over a web application, 
you must always create a custom OAuth application. (For desktop and headless flows, creating a custom 
OAuth application is optional.)  </p>

<p>Do the following:
<ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Create a new project or select an existing project.</li><li>At the left-hand navigation menu, select <b>Credentials</b>. </li><li>If this project does not already have a consent screen configured, click <b>CONFIGURE CONSENT SCREEN</b> 
to create one. If you are not using a Google Workspace account, you are restricted to creating an External-type 
Consent Screen, which requires specifying a support email and developer contact email. Additional info is optional.</li><li>On the <b>Credentials</b> page, select <b>Create Credentials &gt; OAuth Client ID</b>.</li><li>In the <b>Application Type</b> menu, select <b>Web application</b>. </li><li>Specify a name for your custom OAuth application.</li><li>Under <b>Authorized redirect URIs</b>, click <b>ADD URI</b> and enter a redirect URI. </li><li>Click <b>Enter</b>, then <b>CREATE</b>. The Cloud Console returns you to the <b>Credentials</b> page. <br>
A window opens that displays your client Id and client secret. </li><li>Record the client Id and Client Secret for later use as the <u>OAuthClientId</u> and <u>OAuthClientSecret</u> 
connection properties.</li></ol></p>

<p><b>Note:</b> The client secret remains accessible from from the Google Cloud Console.
 </p>

<p>
<h3>Service Accounts (OAuthJWT)</h3>

Service accounts (<u>AuthScheme</u> <b>OAuthJWT</b>) can be used in an OAuth flow to access Google APIs on behalf of 
users in a domain. A domain administrator can delegate domain-wide access to the service account.</p>

<p>To create a new service account:

<ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Create a new project or select an existing project.</li><li>At the left-hand navigation menu, select <b>Credentials</b>.</li><li>Select <b>Create Credentials &gt; Service account</b>.</li><li>On the <b>Create service account</b> page, enter the Service account name, the Service account ID, and, 
optionally, a description.</li><li>Click <b>DONE</b>. The Cloud Console redisplays the <b>Credentials</b> page.</li><li>In the <b>Service Accounts</b> section, select the service account you just created.</li><li>Click the <b>KEYS</b> tab.</li><li>Click <b>ADD KEY &gt; Create new key</b>. </li><li>Select any supported Key type (see <u>OAuthJWTCert</u> and <u>OAuthJWTCertType</u>).</li><li>Click <b>CREATE</b>. The key is automatically downloaded to your device, and any additional information 
specific to the key is displayed.</li><li>Record the additional information for future use.</li></ol></p>

<p>To complete the service account flow, generate a private key in the Google Cloud Console. In the service account flow, the driver exchanges a JSON Web token (JWT) for the <u>OAuthAccessToken</u>. The private key is required to sign the JWT. The driver will have the same permissions granted to the service account.

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to Google Drive" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to Google Drive: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to Google Drive</h1>
       

    <div class="chapter_content" id="pg_connectiongoogledrive">

<p>
<h2>Authenticating to Google Drive</h2>
</p>

<p>The driver supports using user accounts, service accounts 
and GCP instance accounts for authentication.</p>

<p>The following sections discuss the available authentication schemes for Google Drive:</p>

<p><ul><li>User Accounts (OAuth)</li><li>Service Account (OAuthJWT)</li><li>GCP Instance Account</li></ul>


<h3>User Accounts (OAuth)</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>OAuth</b> in all user account flows. 
</p>

<p>
<h4>Desktop Applications</h4>
</p>

<p>CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_googledriveoauthcustomappcreate">Create a Custom OAuth App</a> for information about creating custom applications and reasons for doing so. </p>

<p>For authentication, the only difference between the two methods is that you must set two additional connection properties when using custom OAuth applications. 

 </p>

<p>After setting the following connection properties, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>, which instructs the driver to automatically attempt to get and refresh the OAuth access token.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the Client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the Client Secret in the custom OAuth application settings.</li></ul>

When you connect the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application. The driver then completes the OAuth process as follows:</p>

<p><ul><li>Extracts the access token from the callback URL.</li><li>Obtains a new access token when the old one expires.</li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> that persist across connections.</li></ul>

<h4>Web Applications</h4>


When connecting via a Web application, you need to create and register a custom OAuth application with Google Drive. You can then use the driver to acquire and manage the OAuth token values. See <a href="#pg_googledriveoauthcustomappcreate">Create a Custom OAuth App</a> for more information about custom applications. </p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:</p>

<p>
<ul><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.</li></ul>
</p>

<p>Then call stored procedures to complete the OAuth exchange:</p>

<p><ol><li>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the Callback URL you specified in your application settings. The stored procedure returns the URL to the OAuth endpoint.</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in to the custom OAuth application and authorize the web application. Once authenticated, the browser redirects you to the callback URL.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set AuthMode to <b>WEB</b> and the Verifier input to the "code" parameter in the query string of the callback URL.</li></ol></p>

<p>Once you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually. </p>

<p>
<b>Automatic Refresh of the OAuth Access Token</b></p>

<p></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection:</p>

<p><ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where the driver saves the OAuth token values, which persist across connections.</li></ul>

On subsequent data connections, the values for OAuthAccessToken and OAuthRefreshToken are taken from <u>OAuthSettingsLocation</u>.
</p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
</p>

<p>Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:</p>

<p> 
  <ul><li><u>OAuthClientId</u>: Set this to the Client Id in your application settings.
  </li><li><u>OAuthClientSecret</u>: Set this to the Client Secret in your application settings.
  </li></ul>

  </p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>  Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p>
<h4>Headless Machines</h4>


To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an Internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an Internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an Internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, create the Authorization URL by setting the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the callback URL, which contains the verifier code.</li><li>Save the value of the verifier code. Later you will set this in the <u>OAuthVerifier</u> connection property.</li></ol>
    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens. Set the following properties:
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the verifier code.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the Client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the Client Secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>After the OAuth settings file is generated, you need to re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to create and install a connection with the driver on a device that supports an Internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p> 
Once you have successfully tested the connection, copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of your OAuth settings file. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul>

  
<h3>Service Accounts (OAuthJWT)</h3>

  </p>

<p>To authenticate using a service account, you must create a new service account and have a copy of the accounts certificate. If you do not already have a service account, you can create one by following the procedure in <a href="#pg_googledriveoauthcustomappcreate">Create a Custom OAuth App</a>. 
  
  </p>

<p>For a JSON file, set these properties:
  <ul><li><u>AuthScheme</u>: Set this to <b>OAuthJWT</b>.
  
    </li><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>. 
  
  </li><li><u>OAuthJWTCertType</u>: Set this to <b>GOOGLEJSON</b>.
  </li><li><u>OAuthJWTCert</u>: Set this to the path to the <var>.json</var> file provided by Google.
  </li><li><u>OAuthJWTSubject</u>: (optional) Only set this value if the service account is part of a GSuite domain and you want to enable delegation. The value of this property should be the email address of the user whose data you want to access.
  </li></ul>
  
  </p>

<p>For a PFX file, set these properties instead:
  <ul><li><u>AuthScheme</u>: Set this to <b>OAuthJWT</b>.
  
    </li><li><u>InitiateOAuth</u>:  Set this to <b>GETANDREFRESH</b>. 
  
  </li><li><u>OAuthJWTCertType</u>: Set this to <b>PFXFILE</b>.
  </li><li><u>OAuthJWTCert</u>: Set this to the path to the <var>.pfx</var> file provided by Google.
  </li><li><u>OAuthJWTCertPassword</u>: (optional) Set this to the <var>.pfx</var> file password. In most cases you must provide this since Google encrypts PFX certificates.
  </li><li><u>OAuthJWTCertSubject</u>:  (optional) Set this only if you are using a <u>OAuthJWTCertType</u> which stores multiple certificates. Should not be set for PFX certificates generated by Google.
  </li><li><u>OAuthJWTIssuer</u>: Set this to the email address of the service account. This address will usually include the domain <b>iam.gserviceaccount.com</b>.
  </li><li><u>OAuthJWTSubject</u>: (optional) Only set this value if the service account is part of a GSuite domain and you want to enable delegation. The value of this property should be the email address of the user whose data you want to access.
  </li></ul>


<h3>GCP Instance Accounts </h3>
</p>

<p>When running on a GCP virtual machine, the driver can authenticate using a service account tied to the virtual machine.
To use this mode, set <u>AuthScheme</u> to <b>GCPInstanceAccount</b>.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Create a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Create a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Create a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_googledriveoauthcustomappcreate">

<p>
<h2>Creating a Custom OAuth Application</h2>

CData embeds OAuth Application Credentials with CData branding that can be used when connecting to Avro via a desktop application or a headless machine. </p>

<p>(For information on getting and setting the <u>OAuthAccessToken</u> and other configuration parameters, see the 
<i>Desktop Authentication</i> section of "Connecting to Avro".)</p>

<p>However, you must create a custom OAuth application to connect to Avro via the Web. And since custom OAuth 
applications seamlessly support all three commonly-used auth flows, you might want to create custom OAuth applications (use your own OAuth Application Credentials) for those auth flows anyway.</p>

<p>Custom OAuth applications are useful if you want to: 
<ul><li>control branding of the authentication dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user
 </li></ul>
</p>

<p></p>

<p>The following sections describe how to enable the Directory API and create custom OAuth applications for user accounts (OAuth) and 
Service Accounts (OAuth/JWT).
</p>

<p>

<h2>Enable the Google Drive API</h2>


Follow these steps to enable the Google Drive API:</p>

<p><ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Select <b>Library</b> from the left-hand navigation menu. This opens the <b>Library</b> page.</li><li>In the search field, enter "Google Drive API" and select <b>Google Drive API</b> from the search results.</li><li>On the <b>Google Drive API</b> page, click <b>ENABLE</b>. </li></ol></p>

<p>
<h2>Create an OAuth Application</h2>

To create custom OAuth applications that retrieve the necessary OAuth connection properties, follow these procedures.
</p>

<p>
<h3>User Accounts (OAuth)</h3>
</p>

<p>For users whose <u>AuthScheme</u> is <b>OAuth</b> and who need to authenticate over a web application, 
you must always create a custom OAuth application. (For desktop and headless flows, creating a custom 
OAuth application is optional.)  </p>

<p>Do the following:
<ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Create a new project or select an existing project.</li><li>At the left-hand navigation menu, select <b>Credentials</b>. </li><li>If this project does not already have a consent screen configured, click <b>CONFIGURE CONSENT SCREEN</b> 
to create one. If you are not using a Google Workspace account, you are restricted to creating an External-type 
Consent Screen, which requires specifying a support email and developer contact email. Additional info is optional.</li><li>On the <b>Credentials</b> page, select <b>Create Credentials &gt; OAuth Client ID</b>.</li><li>In the <b>Application Type</b> menu, select <b>Web application</b>. </li><li>Specify a name for your custom OAuth application.</li><li>Under <b>Authorized redirect URIs</b>, click <b>ADD URI</b> and enter a redirect URI. </li><li>Click <b>Enter</b>, then <b>CREATE</b>. The Cloud Console returns you to the <b>Credentials</b> page. <br>
A window opens that displays your client Id and client secret. </li><li>Record the client Id and Client Secret for later use as the <u>OAuthClientId</u> and <u>OAuthClientSecret</u> 
connection properties.</li></ol></p>

<p><b>Note:</b> The client secret remains accessible from from the Google Cloud Console.
 </p>

<p>
<h3>Service Accounts (OAuthJWT)</h3>

Service accounts (<u>AuthScheme</u> <b>OAuthJWT</b>) can be used in an OAuth flow to access Google APIs on behalf of 
users in a domain. A domain administrator can delegate domain-wide access to the service account.</p>

<p>To create a new service account:

<ol><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">Google Cloud Console</a>.</li><li>Create a new project or select an existing project.</li><li>At the left-hand navigation menu, select <b>Credentials</b>.</li><li>Select <b>Create Credentials &gt; Service account</b>.</li><li>On the <b>Create service account</b> page, enter the Service account name, the Service account ID, and, 
optionally, a description.</li><li>Click <b>DONE</b>. The Cloud Console redisplays the <b>Credentials</b> page.</li><li>In the <b>Service Accounts</b> section, select the service account you just created.</li><li>Click the <b>KEYS</b> tab.</li><li>Click <b>ADD KEY &gt; Create new key</b>. </li><li>Select any supported Key type (see <u>OAuthJWTCert</u> and <u>OAuthJWTCertType</u>).</li><li>Click <b>CREATE</b>. The key is automatically downloaded to your device, and any additional information 
specific to the key is displayed.</li><li>Record the additional information for future use.</li></ol></p>

<p>To complete the service account flow, generate a private key in the Google Cloud Console. In the service account flow, the driver exchanges a JSON Web token (JWT) for the <u>OAuthAccessToken</u>. The private key is required to sign the JWT. The driver will have the same permissions granted to the service account.

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to HTTP Streams" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to HTTP Streams: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to HTTP Streams</h1>
       

    <div class="chapter_content" id="pg_connectionhttp">

<p>
<h2>Authenticating to HTTP(S)</h2>
</p>

<p>The driver generically supports connecting to Avro data stored on HTTP(S) streams.</p>

<p>Several authentication methods, such as user/password, digest access, OAuth, OAuthJWT, and OAuth PASSWORD flow are supported.</p>

<p>You can also connect to streams that have no authentication set up.</p>

<p>
<h3>No Authentication</h3>
</p>

<p>Connect to an HTTP(S) stream with no authentication by setting the <u>AuthScheme</u> connection property to <b>None</b>.

<h3>Basic</h3>
</p>

<p>Set the following to connect:
<ul><li><u>AuthScheme</u>: Set this to <b>Basic</b>.</li><li><u>User</u>: Set this to the username associated with your HTTP(S) stream.</li><li><u>Password</u>: Set this to the password associated with your HTTP(S) stream.</li></ul>

<h3>Digest</h3>
</p>

<p>Set the following to connect:
<ul><li><u>AuthScheme</u>: Set this to <b>Digest</b>.</li><li><u>User</u>: Set this to the username associated with your HTTP(S) stream.</li><li><u>Password</u>: Set this to the password associated with your HTTP(S) stream.</li></ul></p>

<p>
<h3>OAuth</h3>

Set the <u>AuthScheme</u> to <b>OAuth</b>.</p>

<p>OAuth requires the authenticating user to interact with Avro using the browser. The driver facilitates this in various ways as described in the following sections.
</p>

<p>Before following the procedures below, you need to register an OAuth app with the service containing the Avro data you want to work with.</p>

<p>Creating a custom application in most services requires registering as a developer and creating an app in the UI of the service. </p>

<p>This is not necessarily true for all services. In some you must contact the service provider to create the app for you. However it 
is done, you must obtain the values for <u>OAuthClientId</u>, <u>OAuthClientSecret</u>, and <u>CallbackURL</u>.


<h4>Desktop Applications</h4>
 </p>

<p>After setting the following connection properties, you are ready to connect:

<ul><li><u>OAuthVersion</u>: Set this to the OAuth Version, either 1.0 or 2.0.  </li><li><u>OAuthRequestTokenURL</u>: Required for OAuth 1.0. In OAuth 1.0, this is the URL where the app makes a request for the request token.</li><li><u>OAuthAuthorizationURL</u>: Required for OAuth 1.0 and 2.0. This is the URL where the user logs into the service and grants permissions to the application. In OAuth 1.0, if permissions are granted, the request token is authorized.</li><li><u>OAuthAccessTokenURL</u>: Required for OAuth 1.0 and 2.0.  This is the URL where the request for the access token is made. In OAuth 1.0, the authorized request token is exchanged for the access token. </li><li><u>OAuthRefreshTokenURL</u>: Required for OAuth 2.0. In OAuth 2.0, this is the URL where the refresh token is exchanged for a new access token when the old one expires. Note that for your data source this may be the same as the access token URL.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings. This may also be called the consumer key.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings. This may also be called the consumer secret.</li><li><u>CallbackURL</u>: Set this to <var>http://localhost:33333</var>. If you specified a redirect URL in your app settings, this must match. </li><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the access token in the connection string.</li></ul>
When you connect, the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application. The driver then completes the OAuth process:
<ol><li>Extracts the access token from the callback URL and authenticates requests.</li><li>Refreshes the access token when it expires.</li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> to be persisted across connections. </li></ol>

<h4>Web Application</h4>

 </p>

<p>When connecting via a Web application, or if the driver is not authorized to open a browser window, use the provided stored procedures to get and manage the OAuth token values. </p>

<p></p>

<p>
<b>Set Up the OAuth Flow</b></p>

<p>Provide the OAuth URLs to authenticate in the Web flow.
<ul><li><u>OAuthRequestTokenURL</u>: Required for OAuth 1.0. In OAuth 1.0, this is the URL where the app makes a request for the request token.
  </li><li><u>OAuthAuthorizationURL</u>: Required for OAuth 1.0 and 2.0. This is the URL where the user logs into the service and grants permissions to the application. In OAuth 1.0, if permissions are granted, the request token is authorized.
  </li><li><u>OAuthAccessTokenURL</u>: Required for OAuth 1.0 and 2.0. This is the URL where the request for the access token is made. In OAuth 1.0, the authorized request token is exchanged for the access token. 
  </li><li><u>OAuthRefreshTokenURL</u>: Required for OAuth 2.0. In OAuth 2.0, this is the URL where the refresh token is exchanged for a new access token when the old one expires. Note that for your data source this may be the same as the access token URL.</li></ul>

<b>Get an Access Token</b></p>

<p>In addition to the OAuth URLs, set the following additional connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings. This may also be called the consumer key.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.  This may also be called the consumer secret.</li><li><u>OAuthVersion</u>: Set this to the OAuth version, either 1.0 or 2.0.</li></ul>
</p>

<p>You can then call stored procedures to complete the OAuth exchange:
  <ol><li>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the AuthMode input to WEB and set the CallbackURL input to the Redirect URI you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.
  </li><li>Log in and authorize the application. You are redirected back to the callback URL. 
  </li><li>
<p>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to WEB. </p>

  
<p>In OAuth 1.0, set the Verifier input to the "oauth_verifier" parameter. Extract the verifier code from the callback URL. Additionally, set the AuthToken and AuthSecret to the values returned by GetOAuthAccessToken.</p>

  
<p>In OAuth 2.0, set the Verifier input to the "code" parameter in the query string of the callback URL.
  </p>
</li></ol>


<b>Connect to Data and Refresh the Token</b></p>

<p>The <u>OAuthAccessToken</u> returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has a limited lifetime. To automatically refresh the token, set the following on the first data connection. Alternatively, use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the token.</p>

<p>  <b>OAuth Endpoints</b>
  <ul><li><u>OAuthRequestTokenURL</u>
    </li><li><u>OAuthAuthorizationURL</u>
    </li><li><u>OAuthAccessTokenURL</u>
    </li><li><u>OAuthRefreshTokenURL</u>
  </li></ul>
  </p>

<p><b>OAuth Tokens and Keys</b>
<ul><li><u>OAuthClientId</u></li><li><u>OAuthClientSecret</u></li><li><u>OAuthRefreshToken</u></li><li><u>OAuthAccessToken</u></li></ul></p>

<p>  <b>Initiate OAuth</b></p>

<p><ul><li><u>OAuthVersion</u>: Set this to 1.0 or 2.0.
  </li><li><u>InitiateOAuth</u>: Set this to REFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.
  </li><li><u>OAuthSettingsLocation</u>: Set this to the location where the driver will save the OAuth values, to be persisted across connections.</li></ul></p>

<p>On subsequent data connections, set the following:
<ul><li><u>InitiateOAuth</u></li><li><u>OAuthSettingsLocation</u></li><li><u>OAuthRequestTokenURL</u></li><li><u>OAuthAuthorizationURL</u></li><li><u>OAuthAccessTokenURL</u></li><li><u>OAuthRefreshTokenURL</u></li></ul>


<h3>OAuth JWT</h3>
</p>

<p>Set <u>AuthScheme</u> to <b>OAuthJWT</b>.</p>

<p>The driver supports using JWT as an authorization grant in situations where a user cannot perform an interactive sign-on.
After setting the following connection properties, you are ready to connect:

<ul><li><u>OAuthVersion</u>: Set this to <b>2.0</b>.</li><li><u>OAuthAccessTokenURL</u>: Set this to the URL where the JWT is exchanged for an access token.</li><li><u>OAuthJWTCert</u>: Set this to the certificate you want to use. In most cases this will be a path to a PEM or PFX file.</li><li><u>OAuthJWTCertType</u>: Set this to the correct certificate type. In most cases this will either <b>PEMKEY_FILE</b> or <b>PFXFILE</b>.</li><li><u>OAuthJWTCertPassword</u>: If the certificate is encrypted, set this to the encryption password.</li><li><u>OAuthJWTIssuer</u>: Set this to the issuer. This corresponds to the <i>iss</i> field in the JWT.</li><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH.</li></ul>
</p>

<p>Note that the JWT signature algorithm cannot be set directly. The driver only supports the RS256 algorithm.
</p>

<p>The driver will then construct a JWT including the following fields, and submit it to <u>OAuthAccessTokenURL</u> for an access token.

<ul><li><b>scope</b> This will come from <u>Scope</u> if it is provided.</li><li><b>aud</b> This will come from <u>OAuthJWTAudience</u> if it is provided.</li><li><b>iss</b> This will come from <u>OAuthJWTIssuer</u>.</li><li><b>iat</b> This is the time when the JWT is generated.</li><li><b>exp</b> This is the value of <i>iat</i> plus the value of <u>OAuthJWTValidityTime</u>.</li><li><b>sub</b> This will come from <u>OAuthJWTSubject</u> if it is provided.</li></ul></p>

<p>
<h3>OAuthPassword</h3>
</p>

<p><u>AuthScheme</u>: Set this to <b>OAuthPassword</b>.</p>

<p></p>

<p>OAuth requires the authenticating user to interact with Avro using the browser. The driver facilitates this in various ways as described in the following sections.
</p>

<p>Before following the procedures below, you need to register an OAuth app with the service containing the Avro data you want to work with.</p>

<p>Creating a custom application in most services requires registering as a developer and creating an app in the UI of the service. </p>

<p>This is not necessarily true for all services. In some you must contact the service provider to create the app for you. However it 
is done, you must obtain the values for <u>OAuthClientId</u>, <u>OAuthClientSecret</u>, and <u>CallbackURL</u>.
</p>

<p>After setting the following connection properties, you are ready to connect:

<ul><li><u>OAuthVersion</u>: Set this to the OAuth Version, either 1.0 or 2.0.  </li><li><u>OAuthRequestTokenURL</u>: Required for OAuth 1.0. In OAuth 1.0, this is the URL where the app makes a request for the request token.</li><li><u>OAuthAuthorizationURL</u>: Required for OAuth 1.0 and 2.0. This is the URL where the user logs into the service and grants permissions to the application. In OAuth 1.0, if permissions are granted, the request token is authorized.</li><li><u>OAuthAccessTokenURL</u>: Required for OAuth 1.0 and 2.0.  This is the URL where the request for the access token is made. In OAuth 1.0, the authorized request token is exchanged for the access token. </li><li><u>OAuthRefreshTokenURL</u>: Required for OAuth 2.0. In OAuth 2.0, this is the URL where the refresh token is exchanged for a new access token when the old one expires. Note that for your data source this may be the same as the access token URL.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings. This may also be called the consumer key.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings. This may also be called the consumer secret.</li><li><u>CallbackURL</u>: Set this to <var>http://localhost:33333</var>. If you specified a redirect URL in your app settings, this must match. </li><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the access token in the connection string.</li></ul>
When you connect, the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application. The driver then completes the OAuth process:
<ol><li>Extracts the access token from the callback URL and authenticates requests.</li><li>Refreshes the access token when it expires.</li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> to be persisted across connections. </li></ol></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to IBM Object Storage" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to IBM Object Storage: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to IBM Object Storage</h1>
       

    <div class="chapter_content" id="pg_connectionibmcloudobjectstorage">

<p>
<h2>Before You Connect</h2>
</p>

<p>

<h3>Register a New Instance of Cloud Object Storage</h3>
</p>

<p>If you do not already have Cloud Object Storage in your IBM Cloud account, you can follow the procedure below to install an instance of SQL Query in your account:
<ol><li>Log in to your IBM Cloud account.</li><li>Navigate to the <a href="https://console.bluemix.net/catalog/services/cloud-object-storage">Cloud Object Storage</a> page, choose a name for your instance and click <b>Create</b>. You will be redirected to the instance of Cloud Object Storage you just created.</li></ol>


<h3>API Key</h3>
</p>

<p>To connect with IBM Cloud Object Storage, you will need an <u>ApiKey</u>. You can obtain this as follows:
<ol><li>Log in to your IBM Cloud account.</li><li>Navigate to the <a href="https://cloud.ibm.com/iam/apikeys">Platform API Keys</a> page.</li><li>On the middle-right corner click <b>Create an IBM Cloud API Key</b> to create a new API Key.</li><li>In the pop-up window, specify the API Key name and click <b>Create</b>. Note the <u>ApiKey</u> as you can never access it again from the dashboard.</li></ol></p>

<p>

<h2>Connecting to IBM Cloud Object Storage</h2>
</p>

<p>Set <u>Region</u> to to your IBM instance region.</p>

<p>
<h2>Authenticating to IBM Cloud Object Storage</h2>
</p>

<p>You can authenticate to IBM Cloud Object Storage using either HMAC or OAuth authentication.

<h3>HMAC</h3>
</p>

<p>Set the following properties to authenticate:
<ul><li><u>AccessKey</u>: Set this to an IBM Access Key (a username).</li><li><u>SecretKey</u>: Set this to an IBM Secret Key.</li></ul>
For example:
<br/><pre lang="">ConnectionType=IBM Object Storage Source;URI=ibmobjectstorage://bucket1/folder1; AccessKey=token1; SecretKey=secret1; Region=eu-gb;</pre>
</p>

<p>
<h3>OAuth</h3>
</p>

<p>Set the following to authenticate using OAuth authentication. 
<ul><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the OAuthAccessToken.</li><li><u>AuthScheme</u>: Set this to <b>OAuth</b>.</li><li><u>ApiKey</u>: Set this to the IBM API Key noted during setup.</li></ul>
For example:
<br/><pre lang="">ConnectionType=IBM Object Storage Source;URI=ibmobjectstorage://bucket1/folder1; ApiKey=key1; Region=eu-gb; AuthScheme=OAuth; InitiateOAuth=GETANDREFRESH;</pre></p>

<p>When you connect, the driver completes the OAuth process. 
  <ol><li>Extracts the access token and authenticates requests.
  </li><li>Saves OAuth values in <u>OAuthSettingsLocation</u> to be persisted across connections. 
  </li></ol> </p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to OneDrive" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to OneDrive: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to OneDrive</h1>
       

    <div class="chapter_content" id="pg_connectiononedrive">

<p>
<h2>Connecting to OneDrive</h2>
</p>

<p>You can connect to OneDrive using an AzureAD user, with MSI authentication, or using an Azure Service Principal.</p>

<p>
<h3>AzureAD Users</h3>
</p>

<p><u>AuthScheme</u> must be set to <b>AzureAD</b> in all user account flows.</p>

<p>
<h4>Desktop Applications</h4>

CData provides an embedded OAuth application that simplifies OAuth desktop Authentication. Alternatively, you can create a custom OAuth application. See <a href="#pg_connectionazureblobstorageoauthcustomappcreate">Creating a Custom OAuth App</a> for information about creating custom applications and reasons for doing so.</p>

<p><b>Get and Refresh the OAuth Access Token</b></p>

<p>After setting the following, you are ready to connect:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u> (custom applications only): Set this to the client Id assigned when you registered your app.</li><li><u>OAuthClientSecret</u> (custom applications only): Set this to the client secret assigned when you registered your app.</li><li><u>CallbackURL</u> (custom application only): Set this to the redirect URI defined when you registered your app. For example: <var>http://localhost:33333</var></li></ul>
When you connect, the driver opens the Microsoft identity platform's OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>The driver obtains an access token from the Microsoft identity platform and uses it to request data.</li><li>The OAuth values are saved in the location specified in <u>OAuthSettingsLocation</u>, to be persisted across connections.</li></ol>
The driver refreshes the access token automatically when it expires.



<h4>Web Applications</h4>
</p>

<p>When connecting via a Web application, you need to register a custom OAuth app with Azure Active Directory. You can then use the driver to get and manage the OAuth token values. See <a href="#pg_connectionazureblobstorageoauthcustomappcreate">Creating a Custom OAuth App</a> for more information.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call stored procedures to complete the OAuth exchange:
<ol><li>
<p>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the <b>Redirect URI</b> you specified in your app settings. The stored procedure returns the URL to the OAuth endpoint.</p>
</li><li>Navigate to the URL that the stored procedure returned in Step 1. Log in, and authorize the web application. After authenticating, the browser redirects you to the redirect URI. There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter.</li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the <var>code</var> parameter in the query string of the redirect URI.</li></ol></p>

<p>After you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually.</p>

<p><b>Automatic Refresh of the OAuth Access Token</b></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection.
<ul><li><u>InitiateOAuth</u>: Set this to REFRESH.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where you want the driver to save the OAuth values, which persist across connections.</li></ul></p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul></p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the OAuthAccessToken property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p></p>

<p>
<h4>Headless Machines</h4>
</p>

<p>To configure the driver, use OAuth with a user account on a headless machine. You need to authenticate on another device that has an internet browser.</p>

<p>
<ol><li>Choose one of two options: 
<ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below. </li><li>Option 2: Install the driver on a machine with an internet browser and transfer the OAuth authentication values after you authenticate through the usual browser-based flow.</li></ul></li><li>Then configure the driver to automatically refresh the access token on the headless machine. </li></ol>
</p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options:
<ul><li>If you are using the Embedded OAuth Application, call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Open the URL returned by the stored procedure in a browser.</li><li>If you are using a custom OAuth application, set the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></li><li>Log in and grant permissions to the driver. You are then redirected to the redirect URI.</li></ol></p>

<p>There will be a parameter called <var>code</var> appended to the redirect URI. Note the value of this parameter. Later you will set this in the <u>OAuthVerifier</u> connection property.</p>

<p>    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens.
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the noted verifier code (the value of the <var>code</var> parameter in the redirect URI).</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to persist the encrypted OAuth authentication values to the specified location. </li></ul>
</p>

<p>Test the connection to generate the OAuth settings file, then re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to install and create a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p>Test the connection to generate the OAuth settings file, then copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the OAuth settings file you copied from the machine with the browser. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul></p>

<p>
<h3>Azure MSI</h3>
</p>

<p></p>

<p>If you are connecting from an Azure VM with permissions for Azure Data Lake Storage, set <u>AuthScheme</u> to <b>AzureMSI</b>.</p>

<p>
<h3>Azure Service Principal</h3>
</p>

<p>If you would like to authenticate with a service principal instead of a client secret, it is also possible to authenticate with a client certificate. Set the following to authenticate:
<ul><li><u>InitiateOAuth</u>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>AuthScheme</u>: Set this to <b>AzureServicePrincipal</b>. </li><li><u>AzureTenant</u>: Set this to the tenant you wish to connect to.</li><li><u>OAuthGrantType</u>: Set this to <b>CLIENT</b>.</li><li><u>OAuthClientId</u>: Set this to the Client Id in your app settings.</li><li><u>OAuthJWTCert</u>: Set this to the JWT Certificate store.</li><li><u>OAuthJWTCertType</u>: Set this to the type of the certificate store specified by <u>OAuthJWTCert</u>.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Creating a Custom OAuth App" desc="CData JDBC Driver for Avro - RSBAvro -  Creating a Custom OAuth App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Creating a Custom OAuth App</h1>
       

    <div class="chapter_content" id="pg_connectiononedriveoauthcustomappcreate">

<p>
There are two types of custom AzureAD applications: AzureAD and AzureAD with an Azure Service Principal. Both are OAuth-based.


<h3>When to Create a Custom Application</h3>


CData embeds OAuth Application Credentials with CData branding that can be used when connecting via either a Desktop Application or from a Headless Machine. </p>

<p>
You may choose to use your own AzureAD Application Credentials when you want to 
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul> </p>

<p>

<h3>Custom AzureAD Applications</h3>


You can use a custom AzureAD application to authenticate a service account or a user account. You can always create a custom AzureAD application, but note that desktop and headless connections support embedded OAuth, which simplifies the process of authentication. See "Establishing a Connection" for information about using the embedded OAuth application. 



<h4>Create a Custom AzureAD App</h4>
</p>

<p>Follow the steps below to obtain the AzureAD values for your application, the <u>OAuthClientId</u> and <u>OAuthClientSecret</u>.</p>

<p><ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an application name and select the desired tenant setup.

When creating a custom AzureAD application in Azure Active Directory, you can define whether the application is single- or multi-tenant. If you select the default option, "Accounts in this organizational directory only", you must set the <u>AzureTenant</u> connection property to the Id of the Azure AD Tenant when establishing a connection with the CData JDBC Driver for Avro. Otherwise, the authentication attempt fails with an error. If your application is for private use only, "Accounts in this organization directory only" should be sufficient. Otherwise, if you want to distribute your application, choose one of the multi-tenant options.
 </li><li>Set the redirect url to <var>http://localhost:33333</var>, the driver's default. Or, specify a different port and set <u>CallbackURL</u> to the exact reply URL you defined.</li><li>Click <b>Register</b> to register the new application. This opens an application management screen. Note the value in <b>Application (client) ID</b> as the <u>OAuthClientId</u> and the <b>Directory (tenant) ID</b> as the <u>AzureTenant</u>.</li><li>Navigate to the "Certificates &amp; Secrets" and define the application authentication type. There are two types of authentication available: using a client secret or a certificate. The recommended authentication method is using a certificate.
<ul><li>Option 1: Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2: Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once.</i> You will need it as the <u>OAuthClientSecret</u>.</li></ul></li><li>Select <b>API Permissions &gt; Add</b>.  If you plan for your application to connect without a user context, select <b>Application Permissions</b> (<u>OAuthGrantType</u> = <b>CLIENT</b>). Otherwise, use the <b>Delegated permissions</b>.</li><li>Save your changes.</li><li>If you have selected to use permissions that require admin consent (such as the Application Permissions), you can grant them from the current tenant on the API Permissions page. Otherwise, follow the steps under
"Admin Consent".
</li></ol>


<h3>Custom AzureAD Service Principal Applications</h3>

</p>

<p>When authenticating using an Azure Service Principal, you must create both a custom AzureAD application and a service principal that can access the necessary resources. Follow the steps below to create a custom AzureAD application and obtain the connection properties for Azure Service Principal authentication.


<h4>Create a Custom AzureAD App with an Azure Service Principal</h4>

</p>

<p>Follow the steps below to obtain the AzureAD values for your application.</p>

<p>
<ol><li>Log in to <a href="https://portal.azure.com">https://portal.azure.com</a>.</li><li>In the left-hand navigation pane, select <b>All services</b>. Filter and select <b>App registrations</b>.</li><li>Click <b>New registrations</b>.</li><li>Enter an app name and select <b>Any Azure AD Directory - Multi Tenant</b>. Then set the redirect url to  <var>http://localhost:33333</var>, the driver's default.</li><li>After creating the application, copy the Application (client) Id value displayed in the "Overview" section. This value is used as the <u>OAuthClientId</u></li><li>Define the app authentication type by going to the "Certificates &amp; Secrets" section. There are two types of authentication available: using a client secret and using a certificate. The recommended authentication method is via a certificate.
<ul><li>Option 1 - Upload a certificate: In "Certificates &amp; Secrets", select <b>Upload certificate</b> and the certificate to upload from your local machine.</li><li>Option 2 - Create a new application secret: In "Certificates &amp; Secrets", select <b>New Client Secret</b> for the application and specify its duration. After saving the client secret, the key value is displayed. <i>Copy this value as it is displayed only once</i>. You will use it as the <u>OAuthClientSecret</u>.</li></ul></li><li>On the <b>Authentication</b> tab, make sure to select <b>Access tokens (used for implicit flows)</b>.</li></ol></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to SFTP" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to SFTP: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to SFTP</h1>
       

    <div class="chapter_content" id="pg_connectionsftp">

<p>
<h2>Connecting to SFTP</h2>
</p>

<p>You can authenticate to SFTP using a user and password or an SSH certificate. Additionally, you can connect to an SFTP server that has no authentication enabled.</p>

<p>
<h3>No Authentication</h3>
</p>

<p>Set <u>SSHAuthMode</u> to <b>None</b> to connect without authentication, assuming your server supports doing so.</p>

<p>
<h3>Password</h3>
</p>

<p>Provide user credentials associated with your SFTP server:
<ul><li><u>SSHAuthMode</u>: Set this to <b>Password</b>.</li><li><u>SSHUser</u>: A username associated with your SFTP server.</li><li><u>SSHPassword</u>: The password associated with the user.</li></ul>
</p>

<p>
<h3>SSH Certificate</h3>
</p>

<p>Set the following to connect.
<ul><li><u>SSHAuthMode</u>: Set this to <b>Public_Key</b>.</li><li><u>SSHClientCert</u>: Specify the SSH certificate in the form specified by <u>SSHClientCertType</u> (see the associated documentation for this connection property).</li><li><u>SSHClientCertType</u>: The type of the key store specified in <u>SSHClientCert</u>.</li><li><u>SSHClientCertPassword</u> (optional): The certificate store password.</li><li><u>SSHClientCertSubject</u> (optional): If there are multiple keys in your key store, specify the desired key, by name, here.</li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting to SharePoint Online" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting to SharePoint Online: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting to SharePoint Online</h1>
       

    <div class="chapter_content" id="pg_connectionsharepointonline">

<p>
<h2>Connecting to SharePoint Online (REST)</h2>
</p>

<p>The following authentication schemes are supported for the REST API:</p>

<p><ul><li>AzureAD</li><li>MSI</li><li>AzureServicePrincipal</li></ul>


<h3>AzureAD</h3>


Azure Active Directory (AzureAD) is a connection type that leverages OAuth to authenticate. OAuth requires the authenticating user to interact with Avro using an internet browser. The driver facilitates this in several ways as described below. Set your AuthScheme to <b>AzureAD</b>. The AzureAD flows described below assume that you have done so.</p>

<p>
Your organization may require Admin Consent when authorizing a new AzureAD application for your Azure Tenant. In all AzureAD flows, any initial installation and use of an AzureAD application requires that an administrator approve the application for their Azure Tenant.

 </p>

<p>
<h4>Desktop Applications</h4>
</p>

<p>CData provides an embedded OAuth application that simplifies OAuth desktop authentication. Alternatively, you can create a custom AzureAD application. See <a href="#pg_spoauthcustomappcreate">Creating a Custom AzureAD App</a> for information about creating custom applications and reasons for doing so. </p>

<p>
For authentication, the only difference between the two methods is that you must set two additional connection properties when using custom AzureAD applications. </p>

<p>After setting the following connection properties, you are ready to connect:</p>

<p><ul><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>. You can use InitiateOAuth to avoid   repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your application settings. </li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in your application settings. </li><li><u>CallbackURL</u>: Set this to the Redirect URL in your application settings.</li></ul> </p>

<p>When you connect the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application.  The driver then completes the OAuth process:
<ol><li>Extracts the access token from the callback URL and authenticates requests.</li><li>Obtains a new access token when the old one expires.</li><li>Saves OAuth values in <u>OAuthSettingsLocation</u>. These stored values persist across connections. </li></ol>


<h4>Web Applications</h4>
</p>

<p>When connecting via a Web application, you need to create and register a custom AzureAD application with Avro. See <a href="#pg_spoauthcustomappcreate">Creating a Custom AzureAD App</a> for more information about custom applications. You can then use the driver to acquire and manage the OAuth token values.</p>

<p><b>Get an OAuth Access Token</b></p>

<p>Set the following connection properties to obtain the <u>OAuthAccessToken</u>:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your application settings</li></ul> </p>

<p>
Then call stored procedures to complete the OAuth exchange:
  <ol><li>Call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure. Set the CallbackURL input to the callback URL you specified in your application settings. If necessary, set the Scope parameter to request custom permissions.
<p>The stored procedure returns the URL to the OAuth endpoint.
    </p>
</li><li>Open the URL, log in, and authorize the application. You are redirected back to the callback URL.
    </li><li>Call the <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> stored procedure. Set the AuthMode input to <b>WEB</b>. Set the Verifier input to the "code" parameter in the query string of the callback URL. If necessary, set the Scope parameter to request custom permissions.
  </li></ol></p>

<p>
Once you have obtained the access and refresh tokens, you can connect to data and refresh the OAuth access token either automatically or manually. </p>

<p>
<b>Automatic Refresh of the OAuth Access Token</b></p>

<p></p>

<p>To have the driver automatically refresh the OAuth access token, set the following on the first data connection:</p>

<p><ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: Set this to the client Id in your application settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your application settings.</li><li><u>OAuthAccessToken</u>: Set this to the access token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthRefreshToken</u>: Set this to the refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>.</li><li><u>OAuthSettingsLocation</u>: Set this to the location where the driver saves the OAuth token values, which persist across connections.</li></ul>

On subsequent data connections, the values for OAuthAccessToken and OAuthRefreshToken are taken from <u>OAuthSettingsLocation</u>.
</p>

<p><b>Manual Refresh of the OAuth Access Token</b>
</p>

<p>The only value needed to manually refresh the OAuth access token when connecting to data is the OAuth refresh token.
</p>

<p>Use the <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> stored procedure to manually refresh the <u>OAuthAccessToken</u> after the ExpiresIn parameter value returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a> has elapsed, then set the following connection properties:</p>

<p> 
  <ul><li><u>OAuthClientId</u>: Set this to the client Id in your application settings.
  </li><li><u>OAuthClientSecret</u>: Set this to the client secret in your application settings.
  </li></ul>

  </p>

<p>Then call <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a> with <u>OAuthRefreshToken</u> set to the OAuth refresh token returned by <a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>. After the new tokens have been retrieved, open a new connection by setting the <u>OAuthAccessToken</u> property to the value returned by <a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>. </p>

<p>  Finally, store the OAuth refresh token so that you can use it to manually refresh the OAuth access token after it has expired. </p>

<p>
<h4>Headless Machines</h4>
 </p>

<p> 
To configure the driver to use OAuth with a user account on a headless machine, you need to authenticate on another device that has an internet browser.</p>

<p><ol><li>Choose one of these two options: 
<p><ul><li>Option 1: Obtain the <u>OAuthVerifier</u> value as described in "Obtain and Exchange a Verifier Code" below.</li><li>Option 2: Install the driver on another machine and transfer the OAuth authentication values after you authenticate through the usual browser-based flow, as described in "Transfer OAuth Settings" below.</li></ul></p>

<p></p>
</li><li>Then configure the driver to automatically refresh the access token from the headless machine. </li></ol></p>

<p></p>

<p><b>Option 1: Obtain and Exchange a Verifier Code</b></p>

<p>To obtain a verifier code, you must authenticate at the OAuth authorization URL.</p>

<p>
Follow the steps below to authenticate from the machine with an internet browser and obtain the <u>OAuthVerifier</u> connection property.</p>

<p><ol><li>Choose one of these options: 
<p><ul><li>If you are using the Embedded OAuth Application click <a href="">Avro OAuth endpoint</a> to open the endpoint in your browser.</li><li>If you are using a custom OAuth application, create the Authorization URL by setting the following properties:
<ul><li><u>InitiateOAuth</u>: Set to <b>OFF</b>.
    </li><li><u>OAuthClientId</u>: Set to the client Id assigned when you registered your application.
    </li><li><u>OAuthClientSecret</u>: Set to the client secret assigned when you registered your application. </li></ul>
    Then call the <a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a> stored procedure with the appropriate CallbackURL.  Open the URL returned by the stored procedure in a browser.</li></ul></p>
</li><li>Log in and grant permissions to the driver. You are then redirected to the callback URL, which contains the verifier code.</li><li>Save the value of the verifier code. Later you will set this in the <u>OAuthVerifier</u> connection property.</li></ol>
    
Next, you need to exchange the OAuth verifier code for OAuth refresh and access tokens. Set the following properties:
</p>

<p>On the headless machine, set the following connection properties to obtain the OAuth authentication values:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthVerifier</u>: Set this to the verifier code.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id in your custom OAuth application settings.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret in the custom OAuth application settings.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of the file where the driver saves the OAuth token values that persist across connections.</li></ul>
</p>

<p>After the OAuth settings file is generated, you need to re-set the following properties to connect: 
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>: (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location containing the encrypted OAuth authentication values. Make sure this location grants read and write permissions to the driver to enable the automatic refreshing of the access token. </li></ul>
    </p>

<p><b>Option 2: Transfer OAuth Settings</b></p>

<p>     
Prior to connecting on a headless machine, you need to create and install a connection with the driver on a device that supports an internet browser. Set the connection properties as described in "Desktop Applications" above.
</p>

<p>After completing the instructions in "Desktop Applications", the resulting authentication values are encrypted and written to the location specified by <u>OAuthSettingsLocation</u>. The default filename is <var>OAuthSettings.txt</var>. </p>

<p> 
Once you have successfully tested the connection, copy the OAuth settings file to your headless machine. 
      </p>

<p>On the headless machine, set the following connection properties to connect to data:
<ul><li><u>InitiateOAuth</u>: Set this to <b>REFRESH</b>.</li><li><u>OAuthClientId</u>: (custom applications only) Set this to the client Id assigned when you registered your application.</li><li><u>OAuthClientSecret</u>:  (custom applications only) Set this to the client secret assigned when you registered your application.</li><li><u>OAuthSettingsLocation</u>: Set this to the location of your OAuth settings file. Make sure this location gives read and write permissions to the driver to enable the automatic refreshing of the access token.</li></ul></p>

<p></p>

<p>
<h3>MSI</h3>
</p>

<p>If you are running Avro on an Azure VM, you can leverage Managed Service Identity (MSI) credentials to connect:
<ul><li><u>AuthScheme</u>: Set this to <b>AzureMSI</b>.</li></ul></p>

<p>The MSI credentials are automatically obtained for authentication.</p>

<p>

<h3>Azure Service Principal</h3>
</p>

<p>When authenticating using an Azure Service Principal, you must register an application with an Azure AD tenant.</p>

<p>
<h4> Assign a role to the application</h4>
</p>

<p>To access resources in your subscription, you must assign a role to the application.</p>

<p><ol><li>Open the <b>Subscriptions</b> page by searching and selecting the Subscriptions service from the search bar.
</li><li>Select the particular subscription to assign the application to.
</li><li>Open the <b>Access control (IAM)</b> and select <b>Add &gt; Add role assignment</b> to open the <b>Add role assignment</b> page.
</li><li>Select <b>Owner</b> as the role to assign to your created Azure AD app.</li></ol>
 </p>

<p>
<h4>Authenticate with an Azure Service Principal</h4>
</p>

<p>You are ready to connect after setting one of the below connection properties groups, depending on the configured app authentication (client secret or certificate).</p>

<p>Before choosing client secret or certicate authentication, set the following:
<ul><li><u>AuthScheme</u>: Set this to the <b>AzureServicePrincipal</b> in your app settings.</li><li><u>InitiateOAuth</u>: Set this to <b>GETANDREFRESH</b>. You can use <u>InitiateOAuth</u> to avoid repeating the OAuth exchange and manually setting the <u>OAuthAccessToken</u>.</li><li><u>AzureTenant</u>: Set this to the tenant you wish to connect to.</li><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthGrantType</u>: Set this to <b>CLIENT</b>.</li></ul>


<h4>Option 1: Authenticating using a Client Secret</h4>
</p>

<p>Set the following to authenticate with a client secret:
<ul><li><u>OAuthClientId</u>: Set this to the client Id in your app settings.</li><li><u>OAuthClientSecret</u>: Set this to the client secret in your app settings.</li></ul>
</p>

<p>
<h4>Option 2: Authenticating using a JWT Certificate</h4>
</p>

<p>Set the following to authenticate with a JWT Certificate:
<ul><li><u>OAuthJWTCert</u>: Set this to the JWT Certificate store.</li><li><u>OAuthJWTCertType</u>: Set this to the type of the certificate store specified by <u>OAuthJWTCert</u>.</li></ul>
</p>

<p>
<h2>Connecting to SharePoint Online (SOAP)</h2>
</p>

<p>The following authentications are supported for the SOAP API: </p>

<p><ul><li>User Credentials</li><li>ADFS</li><li>Okta</li><li>OneLogin</li></ul></p>

<p></p>

<p>
<h3>User Credentials</h3>
</p>

<p>

<h3>ADFS</h3>
</p>

<p>Set the <u>AuthScheme</u> to <b>ADFS</b>. You need to set the following connection properties:
<ul><li><u>User</u>: Set this to the ADFS user.</li><li><u>Password</u>: Set this to ADFS password for the user.</li><li><u>SSOLoginURL</u>: Set this to the base URL for your ADFS server.</li></ul>

Below is an example connection string: 
<br/><pre lang="">AuthScheme=ADFS;User=ADFSUserName;Password=ADFSPassword;URL='http://sharepointserver/mysite';</pre>


<h3>Okta</h3>
</p>

<p>Set the <u>AuthScheme</u> to <b>Okta</b>. The following connection properties are used to connect to Okta:
<ul><li><u>User</u>: Set this to the Okta user.</li><li><u>Password</u>: Set this to Okta password for the user.</li><li><u>SSOLoginURL</u>: Set this to your Okta applications's embed link.</li></ul>
</p>

<p>The following is an example connection string:
<br/><pre lang="">AuthScheme=Okta;User=oktaUserName;Password=oktaPassword;URL='http://sharepointserver/mysite';</pre>


<h3>OneLogin</h3>
</p>

<p>Set the <u>AuthScheme</u> to <b>OneLogin</b>. The following connection properties are used to connect to OneLogin:
<ul><li><u>User</u>: Set this to the OneLogin user.</li><li><u>Password</u>: Set this to OneLogin password for the user.</li></ul>
</p>

<p>The following is an example connection string:
<br/><pre lang="">AuthScheme=OneLogin;User=OneLoginUserName;Password=OneLoginPassword;URL='http://sharepointserver/mysite';</pre></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Creating a Custom AzureAD App" desc="CData JDBC Driver for Avro - RSBAvro -  Creating a Custom AzureAD App: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Creating a Custom AzureAD App</h1>
       

    <div class="chapter_content" id="pg_spoauthcustomappcreate">

<p>
<h2>When to Create a Custom OAuth App</h2>

CData embeds OAuth Application Credentials with CData branding that can be used when connecting via either a Desktop Application or from a Headless Machine. Creating a custom OAuth application is, however, required when using a web application.</p>

<p>You may choose to create your own OAuth Application Credentials when you want to
<ul><li>control branding of the Authentication Dialog</li><li>control the redirect URI that the application redirects the user to after the user authenticates</li><li>customize the permissions that you are requesting from the user</li></ul></p>

<p>
<h2>Creating a Custom OAuth App</h2>
</p>

<p>Follow the steps below to obtain OAuth values for your app, the <u>OAuthClientId</u> and <u>OAuthClientSecret</u>.</p>

<p><ol><li>Log in to the <a href="https://portal.azure.com">Azure Portal</a>.</li><li>In the left-hand navigation pane, select <b>Azure Active Directory &gt;  App Registrations</b> and click <b>Add</b>.</li><li>Enter an application name and select <b>Any Azure AD Directory - Multi Tenant</b>. Then set the redirect url to <var>http://localhost:33333</var>, the driver's default or set a different port of your choice and set <u>CallbackURL</u> to the exact reply URL you defined.</li><li>After creating the app, navigate to the "Certificates &amp; Secrets" section, create a client secret for the application, and select a duration. </li><li>After you save the key, key value is displayed once. Set <u>OAuthClientSecret</u> to the displayed value. Set <u>OAuthClientId</u> to the Application Id. </li><li>Select <b>API Permissions</b> and click <b>Add</b>.  If you plan for your application to connect without a user context, select the Application Permissions (<u>OAuthGrantType</u> = CLIENT). Otherwise,  when selecting permissions, use the Delegated permissions.</li><li>In the API Permissions section, click on <b>Add a permission</b> and select <b>Sharepoint</b>. Choose the permissions you want your app to have. To view and edit lists, you have to select (at least) the <b>AllSites.Manage</b> permission.</li><li>Save your changes.</li><li>If you have selected to use permissions that require admin consent (such as the Application Permissions), you can grant them from the current tenant on the API Permissions page. Otherwise, follow the steps under "OAuth: Admin Consent" in <a href="#pg_connection">Establishing a Connection</a>.	</li></ol></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  SSO connections" desc="CData JDBC Driver for Avro - RSBAvro -  SSO connections: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> SSO connections</h1>
       

    <div class="chapter_content" id="pg_ssoconnections">

<p>
<h3>Authenticating with SSO</h3>
</p>

<p>
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Service provider</b>               </td><td><b>Okta</b>   </td><td><b>OneLogin</b>   </td><td><b>ADFS</b>   </td><td><b>AzureAD</b>                            </td></tr><tr><td style="white-space:nowrap">Amazon S3                             </td><td>Y             </td><td>                  </td><td>Y             </td><td>Y       </td></tr><tr><td style="white-space:nowrap">Azure Blob Storage                    </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Azure Data Lake Store Gen1            </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Azure Data Lake Store Gen2            </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Azure Data Lake Store Gen2 with SSL   </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Google Drive                          </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">OneDrive                              </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Box                                   </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Dropbox                               </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">SharePoint Online SOAP                </td><td>Y             </td><td>Y                 </td><td>Y             </td><td>       </td></tr><tr><td style="white-space:nowrap">SharePoint Online REST                </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Wasabi                                </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Google Cloud Storage                  </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Oracle Cloud Storage                  </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr><tr><td style="white-space:nowrap">Azure File                            </td><td>              </td><td>                  </td><td>              </td><td>       </td></tr></table></center><p />


<h3>AzureAD</h3>
</p>

<p><b>Azure AD Configuration</b></p>

<p>The main theme behind this configuration is the <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow">OAuth 2.0 On-Behalf-Of flow</a>.
It requires two Azure AD applications: 
<ol><li>An application used for the single sign-on process to a specific service provider.
<ul><li><b>Amazon S3:</b> Please follow this <a href="https://docs.microsoft.com/en-us/azure/active-directory/saas-apps/amazon-web-service-tutorial">link</a> for detailed instructions on how to create this application. Make sure you test the connection and you are able to login to the AWS console from Azure AD.

<p>Save the step "Assign the Azure AD test user" until after provisioning so that you can select the AWS roles when assigning the user.</p>
</li></ul></li><li>A "connector" application with <var>user_impersonation</var> permission on the SSO application you created in the previous step.
Go to <b>Azure Active Directory &gt; App</b> registrations and register a new application. After you register this application, you need to allow it to make API calls to the SSO application. 
Go to the <b>API permissions</b> section of the app you registered and click the "Add a permission" box. Select the API of your SSO application by specifying the API name or Application Id and add the 
user_impersonation permission. </li></ol>
</p>

<p><b>CData Driver Common Properties</b></p>

<p>The following <u>SSOProperties</u> are needed to authenticate to Azure Active Directory and must be specified for every service provider.
<ul><li>Resource: The application Id URI of the SSO application, listed in the <b>Overview</b> section of the app registration.</li><li>Tenant: The Id of the Azure AD tenant where the applications are registered. You can find this value using the instructions found <a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-to-find-tenant">here</a>.</li></ul></p>

<p>We will retrieve the SSO SAML response from an OAuth 2.0 On-Behalf-Of flow so the following OAuth connection properties must be specified:
<ul><li><u>OAuthClientId</u>: The application Id of the connector application, listed in the Overview section of the app registration.</li><li><u>OAuthClientSecret</u>: The client secret value of the connector application. Azure AD displays this when you create a new client secret (Certificates &amp; secrets section).</li></ul>
</p>

<p><b>Amazon S3</b></p>

<p> 
In addition to the common properties, the following properties must be specified when connecting to Amazon S3 service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>AzureAD</b>.</li><li><u>AWSRoleARN</u>: The ARN of the IAM role. Find this on the Summary page of the IAM role.</li><li><u>AWSPrincipalARN</u>: The ARN of the identity provider. Find this on the identity provider's summary page.</li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme=AzureAD;InitiateOAuth=GETANDREFRESH;OAuthClientId=d593a1d-ad89-4457-872d-8d7443aaa655;OauthClientSecret=g9-oy5D_rl9YEKfN-45~3Wm8FgVa2F;SSOProperties='Tenant=94be7-edb4-4fda-ab12-95bfc22b232f;Resource=https://signin.aws.amazon.com/saml;';AWSRoleARN=arn:aws:iam::2153385180:role/AWS_AzureAD;AWSPrincipalARN=arn:aws:iam::215515180:saml-provider/AzureAD;</pre>

<h3>OneLogin</h3>
</p>

<p><b>OneLogin Configuration</b></p>

<p>You must create an application used for the single sign-on process to a specific provider. 
<ul><li><b>Sharepoint SOAP:</b> Please follow this <a href="https://onelogin.service-now.com/kb_view_customer.do?sysparm_article=KB0010030">link</a> for detailed instructions on how to create this application. Make sure you test the connection and you are able to login to Office 365 from OneLogin.
<b>Make sure you have enabled WS-TRUST in your application. Otherwise, the CData driver will not be able to connect.</b></li></ul>
</p>

<p><b>Sharepoint SOAP</b></p>

<p> 
The following properties must be specified when connecting to Sharepoint SOAP service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>OneLogin</b>.</li><li><u>User</u>: The username of the OneLogin account.</li><li><u>Password</u>: The password of the OneLogin account.</li><li><u>SSOProperties</u>: 
<ul><li>Domain (optional): It may be required to be set this property if the domain configured on the SSO domain is different than the domain of the <u>User</u>.</li></ul></li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme='OneLogin';User=test;Password=test;SSOProperties='Domain=test.cdata;';</pre>

<h3>Okta</h3>
</p>

<p><b>Okta Configuration</b></p>

<p>You must create an application used for the single sign-on process to a specific provider. 
<ul><li><b>Sharepoint SOAP:</b> Please follow this <a href="https://help.okta.com/en/prod/Content/Topics/Apps/Office365-Deployment/configure-sso.htm">link</a> for detailed instructions on how to create this application and configure SSO. Make sure you test the connection and you are able to login to Office 365 from Okta.
<b>Make sure you have configured SSO using WS-Federation in your application. Otherwise, the CData driver will not be able to connect.</b></li><li><b>Amazon S3:</b> Please follow this <a href="https://saml-doc.okta.com/SAML_Docs/How-to-Configure-SAML-2.0-for-Amazon-Web-Service">link</a> for detailed instructions on how to create this application and configure SSO. Make sure you test the connection and you are able to login to AWS from Okta.
<b>Make sure you have configured SSO with SAML 2.0 in your application. Otherwise, the CData driver will not be able to connect.</b>
Ensure that the assigned AWS role in the Okta app has access to the S3 bucket you want to connect.</li></ul>
</p>

<p><b>Sharepoint SOAP</b></p>

<p> 
The following properties must be specified when connecting to Sharepoint SOAP service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>Okta</b>.</li><li><u>User</u>: The username of the Okta account.</li><li><u>Password</u>: The password of the Okta account.</li><li><u>SSOProperties</u>: 
<ul><li>Domain (optional): It may be required to be set this property if the domain configured on the SSO domain is different than the domain of the <u>User</u>.</li></ul></li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme='Okta';User=test;Password=test;SSOProperties='Domain=test.cdata;';</pre>
</p>

<p><b>Amazon S3</b></p>

<p> 
The following properties must be specified when connecting to an Amazon S3 service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>Okta</b>.</li><li><u>User</u>: The username of the Okta account.</li><li><u>Password</u>: The password of the Okta account.</li><li><u>SSOLoginURL</u>: Set this to the embedded URL of your AWS Okta SSO app.</li><li><u>AWSRoleARN</u> (optional): The ARN of the IAM role. Find this on the Summary page of the IAM role.</li><li><u>AWSPrincipalARN</u> (optional): The ARN of the identity provider. Find this on the identity provider's summary page.</li><li><u>SSOProperties</u>: 
<ul><li>APIToken (optional): Set this to the API Token that the customer created from the Okta org. It should be used when authenticating a user via a trusted application or proxy that overrides Okta client request context.</li></ul></li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme=Okta;User=OktaUser;Password=OktaPassword;SSOLoginURL='https://{subdomain}.okta.com/home/amazon_aws/0oan2hZLgQiy5d6/272';</pre>

<h3>ADFS</h3>
</p>

<p><b>ADFS Configuration</b></p>

<p>You must create an application used for the single sign-on process to a specific provider. 
<ul><li><b>Sharepoint SOAP:</b> Please follow this <a href="https://docs.microsoft.com/en-us/sharepoint/security-for-sharepoint-server/implement-saml-based-authentication-in-sharepoint-server">link</a> for detailed instructions on how to set up ADFS for Office 365 for Single Sign-On. Make sure you test the connection and you are able to login to Office 365 from ADFS.</li><li><b>Amazon S3:</b> Please follow this <a href="https://aws.amazon.com/blogs/security/enabling-federation-to-aws-using-windows-active-directory-adfs-and-saml-2-0/">link</a> for detailed instructions on how to set up ADFS for AWS Single Sign-On. Make sure you test the connection and you are able to login to AWS from ADFS.</li></ul>
</p>

<p><b>Sharepoint SOAP</b></p>

<p> 
The following properties must be specified when connecting to a Sharepoint SOAP service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>ADFS</b>.</li><li><u>User</u>: The username of the ADFS account.</li><li><u>Password</u>: The password of the ADFS account.</li><li><u>SSOProperties</u>: 
<ul><li>Domain (optional): It may be required to be set this property if the domain configured on the SSO domain is different than the domain of the <u>User</u>.</li></ul></li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme='ADFS';User=test;Password=test;SSOProperties='Domain=test.cdata;';</pre>
</p>

<p><b>Amazon S3</b></p>

<p> 
The following properties must be specified when connecting to a Sharepoint SOAP service provider:
<ul><li><u>AuthScheme</u>: Set the <u>AuthScheme</u> to <b>ADFS</b>.</li><li><u>SSOLoginURL</u>: Set this to the URL of your ADFS instance.</li><li><u>User</u>: The username of the ADFS account.</li><li><u>Password</u>: The password of the ADFS account.</li><li><u>AWSRoleARN</u> (optional): The ARN of the IAM role. Find this on the Summary page of the IAM role.</li><li><u>AWSPrincipalARN</u> (optional): The ARN of the identity provider. Find this on the identity provider's summary page.</li></ul>

The following is an example connection string:
<br/><pre lang="">AuthScheme=ADFS;User=username;Password=password;SSOLoginURL='https://sts.company.com';</pre>

<b>ADFS Integrated</b>
</p>

<p>The ADFS Integrated flow indicates you are connecting with the <b>currently logged in Windows user credentials</b>. 
To use the ADFS Integrated flow, simply do not specify the <u>User</u> and <u>Password</u>, but otherwise follow the same 
steps in the ADFS guide above.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Using Kerberos" desc="CData JDBC Driver for Avro - RSBAvro -  Using Kerberos: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Using Kerberos</h1>
       

    <div class="chapter_content" id="pg_kerberos">

<p>
<h3>Using Kerberos</h3>

Authenticating to Avro via Kerberos requires you to define authentication properties and to choose how Kerberos should retrieve authentication tickets.
</p>

<p>
<h4>Retrieve Kerberos Tickets</h4>

Kerberos tickets are used to authenticate the requester's identity. The use of tickets 
instead of formal logins/passwords eliminates the need to store passwords locally or send 
them over a network. Users are reauthenticated (tickets are refreshed) whenever they log 
in at their local computer or enter <var>kinit USER</var> at the command prompt.</p>

<p>The driver provides three ways to retrieve the required Kerberos ticket, depending on 
whether or not the <b>KRB5CCNAME</b> and/or <u>KerberosKeytabFile</u> variables exist in your environment.
</p>

<p><b>MIT Kerberos Credential Cache File</b></p>

<p>This option enables you to use the MIT Kerberos Ticket Manager or <var>kinit</var> command to get tickets. With this option there is no need to set the <u>User</u> or <u>Password</u> connection properties.</p>

<p>This option requires that <b>KRB5CCNAME</b> has been created in your system.</p>

<p>To enable ticket retrieval via MIT Cerberos Credential Cache Files:
<ol><li>Ensure that the <b>KRB5CCNAME</b> variable is present in your environment.</li><li>Set <b>KRB5CCNAME</b> to a path that points to your credential cache file. (For example, <var>C:\krb_cache\krb5cc_0</var> or <var>/tmp/krb5cc_0</var>.) The credential cache file is created when you use the MIT Kerberos Ticket Manager to generate your ticket.</li><li>To obtain a ticket:
<ol><li>Open the MIT Kerberos Ticket Manager application.</li><li>Click <b>Get Ticket</b>.</li><li>Enter your principal name and password.</li><li>Click <b>OK</b>. </li></ol>

<p>If the ticket is successfully obtained, the ticket information appears in Kerberos Ticket Manager and is stored in the 
credential cache file.</p>
</li></ol></p>

<p>The driver uses the cache file to obtain the Kerberos ticket to connect to Avro.</p>

<p><b>Note:</b> If you would prefer not to edit <b>KRB5CCNAME</b>, you can use the <u>KerberosTicketCache</u> property to set the file path manually. After this is set, the driver uses the specified cache file to obtain the Kerberos ticket to connect to Avro. 
</p>

<p><b>Keytab File</b></p>

<p>If your environment lacks the <b>KRB5CCNAME</b> environment variable, you can retrieve a Kerberos ticket using a Keytab File.</p>

<p>To use this method, set the <u>User</u> property to the desired username, and set the <u>KerberosKeytabFile</u> property to a file path pointing to the keytab file associated with the user.

</p>

<p><b>User and Password</b></p>

<p>If your environment lacks the <b>KRB5CCNAME</b> environment variable and the <u>KerberosKeytabFile</u> property has not been set, you can retrieve a ticket using a user and password combination. </p>

<p>To use this method, set the <u>User</u> and <u>Password</u> properties to the user/password combination that you use to authenticate with Avro.
</p>

<p>
<h4>Enabling Cross-Realm Authentication</h4>

More complex Kerberos environments can require cross-realm authentication where multiple realms and KDC servers are used. For example, they might use one realm/KDC for user authentication, and another realm/KDC for obtaining the service ticket.</p>

<p>To enable this kind of cross-realm authentication, set the <u>KerberosRealm</u> and <u>KerberosKDC</u> properties to the values required for user authentication.  Also, set the  <u>KerberosServiceRealm</u> and <u>KerberosServiceKDC</u> properties 
to the values required to obtain the service ticket.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Changelog" desc="CData JDBC Driver for Avro - RSBAvro -  Changelog: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Changelog</h1>
       

    <div class="chapter_content" id="pg_changelog">

<p>
<h2>General Changes</h2>
</p>

<p></p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Date</b></td><td><b>Build<br>Number</b></td><td><b>Change<br>Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">11/29/2023</td><td>8733</td><td>General</td><td><b>Changed</b><br><ul><li>The ROUND function doesn't accept the negative precision values anymore.</li></ul><br><b>Changed</b><br><ul><li>The returning types of the FDMonth, FDQuarter, FDWeek, LDMonth, LDQuarter, LDWeek functions are changed from Timestamp to Date.</li><li>The return type of the ABS function will be consistent with the parameter value type.</li></ul>



</td></tr><tr><td style="white-space:nowrap">10/27/2023</td><td>8700</td><td>jdbc</td><td><b>Changed</b><br><ul><li>Added support for Connection.abort() method.</li></ul>


</td></tr><tr><td style="white-space:nowrap">06/20/2023</td><td>8571</td><td>General</td><td><b>Added</b><br><ul><li>Added the new sys_lastresultinfo system table.</li></ul>




</td></tr><tr><td style="white-space:nowrap">04/25/2023</td><td>8515</td><td>General</td><td><b>Removed</b><br><ul><li>Removed support for the SELECT INTO CSV statement. The core code doesn't support it anymore.</li></ul>


</td></tr><tr><td style="white-space:nowrap">12/14/2022</td><td>8383</td><td>General</td><td><b>Changed</b><br><ul><li>Added the Default column to the sys_procedureparameters table.</li></ul>




</td></tr><tr><td style="white-space:nowrap">09/30/2022</td><td>8308</td><td>General</td><td><b>Changed</b><br><ul><li>Added the IsPath column to the sys_procedureparameters table.</li></ul>


</td></tr><tr><td style="white-space:nowrap">08/30/2022</td><td>8277</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for uploading server-side encrypted objects for Amazon S3 storage source via ServerSideEncryption connection property.</li></ul>


</td></tr><tr><td style="white-space:nowrap">06/21/2022</td><td>8207</td><td>Avro</td><td><b>Changed</b><br><ul><li>Return empty table list instead of throwing an error when a folder is devoid of Avro files.</li></ul>
</td></tr><tr><td style="white-space:nowrap">06/11/2022</td><td>8197</td><td>jdbc</td><td><b>Changed</b><br><ul><li>The method GetJDBCMinorVersion() and GetJDBCMajorVersion() return 4.2 as the supported JDBC major / minor version.</li></ul>

</td></tr><tr><td style="white-space:nowrap">05/27/2022</td><td>8182</td><td>Avro</td><td><b>Added</b><br><ul><li>Added the ConnectionType connection property to determine the storage type of specified URI.</li></ul>



</td></tr><tr><td style="white-space:nowrap">04/28/2022</td><td>8153</td><td>jdbc</td><td><b>Changed</b><br><ul><li>Removed support for JRE 1.6. JRE 1.8 and above is now required.</li></ul>



</td></tr><tr><td style="white-space:nowrap">03/10/2022</td><td>8104</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for Apache HDFS (webhdfs://) as a storage source.</li></ul>
</td></tr><tr><td style="white-space:nowrap">03/09/2022</td><td>8103</td><td>Avro</td><td><b>Changed</b><br><ul><li>Changed the default method for submitting client_credentials grants with OAuth. Before, client_credentials would submit OAuthClientId and OAuthClientSecret using the HTTP Authorization header. Now the OAuthPasswordGrantType controls this setting and it defaults to OAuthPasswordGrantType=Post. The previous behavior is still available by setting OAuthPasswordGrantType=Basic.</li></ul>

</td></tr><tr><td style="white-space:nowrap">02/25/2022</td><td>8091</td><td>jdbc</td><td><b>Changed</b><br><ul><li>The method DatabaseMetaData.getTypeInfo() now returns all of the data types that the driver supports. Previously, it was returning only a portion of the data types. The types include: tinyint, smallint, int, bigint, float, double, numeric, decimal, bit, date, datetime, time, varchar, binary, uuid.</li></ul>
</td></tr><tr><td style="white-space:nowrap">02/24/2022</td><td>8090</td><td>jdbc</td><td><b>Changed</b><br><ul><li>Corrected the return value of method DatabaseMetaData.supportsOuterJoins(), which used to return an incorrect value.</li></ul>

</td></tr><tr><td style="white-space:nowrap">01/13/2022</td><td>8048</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for IBM Cloud Object Storage(ibmobjectstorage://) as a storage source.</li></ul>







</td></tr><tr><td style="white-space:nowrap">10/27/2021</td><td>7970</td><td>jdbc</td><td><b>Changed</b><br><ul><li>Added support for JDK 17</li></ul>
</td></tr><tr><td style="white-space:nowrap">10/07/2021</td><td>7950</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for excluding files based on the ExcludeFiles connection property.</li><li>Added support for datetime filters in IncludeFiles and ExcludeFiles connection properties. We currently support CreatedDate and ModifiedDate. Ex: <br/><pre lang="">ExcludeFiles="TXT,CreatedDate&lt;='2020-11-26T07:39:34-05:00'" 
ExcludeFiles="TXT,ModifiedDate&lt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 50, 000)"
ExcludeFiles="ModifiedDate&gt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 49, 000),ModifiedDate&lt;=CURRENT_TIMESTAMP()" </pre> </li><li>Only the following storage sources will have support for filtering by CreatedDate:
<ul><li>Box (box://)</li><li>GCloudStorage (gs://)</li><li>GoogleDriveStorageSource (gdrive://)</li><li>OneDrive (onedrive://)</li><li>SharePoint (sp://)</li><li>SharePointREST (sprest://)</li></ul></li></ul>

</td></tr><tr><td style="white-space:nowrap">09/12/2021</td><td>7925</td><td>jdbc</td><td><b>Removed</b><br><ul><li>Removed the IS_READONLY, IS_KEY, NUMERIC_PRECISION, and DECIMAL_DIGITS columns from DatabaseMetadata.GetColumns(), as they are not part of the JDBC Specification. This information is still available via other metadata calls.</li></ul>
</td></tr><tr><td style="white-space:nowrap">09/02/2021</td><td>7915</td><td>General</td><td><b>Added</b><br><ul><li>Added support for the STRING_SPLIT table-valued function in the CROSS APPLY clause.</li></ul>
</td></tr><tr><td style="white-space:nowrap">08/07/2021</td><td>7889</td><td>General</td><td><b>Changed</b><br><ul><li>Added the KeySeq column to the sys_foreignkeys table.</li></ul>
</td></tr><tr><td style="white-space:nowrap">08/06/2021</td><td>7888</td><td>General</td><td><b>Changed</b><br><ul><li>Added the new sys_primarykeys system table.</li></ul>


</td></tr><tr><td style="white-space:nowrap">07/23/2021</td><td>7874</td><td>General</td><td><b>Changed</b><br><ul><li>Updated the Literal Function Names for relative date/datetime functions. Previously, relative date/datetime functions resolved to a different value when used in the projection as opposed to the predicate. For example: SELECT LAST_MONTH() AS lm, Col FROM Table WHERE Col &gt; LAST_MONTH(). Formerly, the two LAST_MONTH() methods would resolve to different datetimes. Now, they will match.</li><li>As a replacement for the previous behavior, the relative date/datetime functions in the criteria may have an 'L' appended to them. For example: WHERE col &gt; L_LAST_MONTH(). This will continue to resolve to the same values that were previously calculated in the criteria. Note that the "L_" prefix will only work in the predicate - it not available for the projection.</li></ul>

</td></tr><tr><td style="white-space:nowrap">07/22/2021</td><td>7873</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for Create Table, Batch Insert and Drop Table.</li></ul>





</td></tr><tr><td style="white-space:nowrap">06/24/2021</td><td>7845</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for the GOOGLEJSONBLOB JWT certificate type. This works like the existing GOOGLEJSON certificate type except that the certificate is provided as JSON text instead of as a file path.</li></ul>

</td></tr><tr><td style="white-space:nowrap">06/08/2021</td><td>7829</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for the AzureServicePrinciple authentication scheme, which will support both using an OAuthClientSecret, or alternatively using a JWT cert.</li></ul>

</td></tr><tr><td style="white-space:nowrap">06/05/2021</td><td>7826</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support to authenticate submitting JWT certs instead of the OAuthClientSecret for the AzureAD authentication scheme.</li></ul>







</td></tr><tr><td style="white-space:nowrap">04/23/2021</td><td>7783</td><td>General</td><td><b>Changed</b><br><ul><li>Updated how display sizes are determined for varchar primary key and foreign key columns so they will match the reported length of the column.</li></ul>
</td></tr><tr><td style="white-space:nowrap">04/19/2021</td><td>7779</td><td>Avro</td><td><b>Added</b><br><ul><li>Added support for parsing Snappy and deflate codec.</li></ul><br><b>Deprecated</b><br><ul><li>SSODomain will not be used anymore for OKTA, OneLogin and ADFS. Instead, Domain should be specified.</li><li>The AzureAccount connection property is deprecated. Instead, AzureStorageAccount should be used.</li></ul>



</td></tr><tr><td style="white-space:nowrap">04/16/2021</td><td>7776</td><td>General</td><td><b>Changed</b><br><ul><li>Reduced the length to 255 for varchar primary key and foreign key columns.</li></ul><br><b>Changed</b><br><ul><li>Updated index naming convention to avoid duplicates.</li></ul>
</td></tr><tr><td style="white-space:nowrap">04/16/2021</td><td>7776</td><td>General</td><td><b>Changed</b><br><ul><li>Updated implicit and metadata caching to improve performance and support for multiple connections. Old metadata caches are not compatible - you need to generate new metadata caches if you are currently using CacheMetadata.</li></ul>




</td></tr><tr><td style="white-space:nowrap">04/15/2021</td><td>7775</td><td>General</td><td><b>Changed</b><br><ul><li>Kerberos authentication is updated to use TCP by default, but will fall back to UDP if a TCP connection cannot be established.</li></ul>


</td></tr></table></center><p /></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Modeling Avro Data" desc="CData JDBC Driver for Avro - RSBAvro - Modeling Avro Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Modeling Avro Data</h1>
       

    <div class="chapter_content" id="pg_jsondatabase">

<p>In this section we will show how to control the various schemes that the driver offers to bridge the gap with relational SQL and nested Avro services. The CData JDBC Driver for Avro provides a managed way for you to use the two prevailing techniques for dealing with nested Avro data:
<ul><li>Parsing the data structure and building a relational model based on the existing hierarchy.</li><li>Drilling down into the nested arrays and objects using horizontal flattening. </li></ul>


<h2>Parsing Hierarchical Data</h2>
</p>

<p> 
By default, the driver automatically detects the rows in a document, so that you do not need to know the structure of the underlying data to query it with SQL. Set the <u>DataModel</u> property to choose a basic configuration of how the driver models object arrays into tables. Set the <u>FlattenObjects</u> and <u>FlattenArrays</u> properties to configure how nested data is flattened into columns. See <a href="#pg_NestedParsing">Parsing Hierarchical Data</a> for a guide.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Raw Data" desc="CData JDBC Driver for Avro - RSBAvro -  Raw Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Raw Data</h1>
       

    <div class="chapter_content" id="pg_rawjson">

<p>Below is the raw data used throughout this chapter. The data includes entries for people, the cars they own, and various maintenance services performed on those cars:
<br/><pre lang="">{
  "type": "record",
  "name": "People",
  "fields": [
    {
      "name": "personal",
      "type": [
        "null",
        {
          "type": "record",
          "name": "Personal",
          "namespace": "root",
          "fields": [
            {
              "name": "name",
              "type": [
                "null",
                {
                  "type": "record",
                  "name": "Name",
                  "namespace": "root.personal",
                  "fields": [
                    {
                      "name": "last",
                      "type": ["null", "string"]
                    },
                    {
                      "name": "first",
                      "type": ["null",  "string"]
                    }
                  ]
                }
              ]
            },
            {
              "name": "gender",
              "type": ["null", "string"]
            },
            {
              "name": "age",
              "type": ["null", "long"]
            }
          ]
        }
      ]
    },
    {
      "name": "vehicles",
      "type": {
        "type": "array",
        "items": {
          "type": "record",
          "name": "Vehicles",
          "namespace": "root",
          "fields": [
            {
              "name": "insurance",
              "type": [
                "null",
                {
                  "type": "record",
                  "name": "Insurance",
                  "namespace": "root.vehicles",
                  "fields": [
                    {
                      "name": "policy_num",
                      "type": ["null", "long"]
                    },
                    {
                      "name": "company",
                      "type": ["null", "string"]
                    }
                  ]
                }
              ]
            },
            {
              "name": "maintenance",
              "type": {
                "type": "array",
                "items": {
                  "type": "record",
                  "name": "Maintenance",
                  "namespace": "root.vehicles",
                  "fields": [
                    {
                      "name": "desc",
                      "type": ["null", "string"]
                    },
                    {
                      "name": "date",
                      "type": ["null", "string"]
                    }
                  ]
                }
              }
            },
            {
              "name": "model",
              "type": ["null", "string"]
            },
            {
              "name": "type",
              "type": ["null", "string"]
            }
          ]
        }
      }
    },
    {
      "name": "source",
      "type": ["null", "string"]
    }
  ]
}</pre> 
</p>

<p>The following is the sample data set for the "People" table: 
<br/><pre lang="">{
  "people": [
    {
      "personal": {
        "age": 20,
        "gender": "M",
        "name": {
          "first": "John",
          "last": "Doe"
        }
      },
      "vehicles": [
        {
          "type": "car",
          "model": "Honda Civic",
          "insurance": {
            "company": "ABC Insurance",
            "policy_num": "12345"
          },
          "maintenance": [
            {
              "date": "07-17-2017",
              "desc": "oil change"
            },
            {
              "date": "01-03-2018",
              "desc": "new tires"
            }
          ]
        },
        {
          "type": "truck",
          "model": "Dodge Ram",
          "insurance": {
            "company": "ABC Insurance",
            "policy_num": "12345"
          },
          "maintenance": [
            {
              "date": "08-27-2017",
              "desc": "new tires"
            },
            {
              "date": "01-08-2018",
              "desc": "oil change"
            }
          ]
        }
      ],
      "source": "internet"
    },
    {
      "personal": {
        "age": 24,
        "gender": "F",
        "name": {
          "first": "Jane",
          "last": "Roberts"
        }
      },
      "vehicles": [
        {
          "type": "car",
          "model": "Toyota Camry",
          "insurance": {
            "company": "Car Insurance",
            "policy_num": "98765"
          },
          "maintenance": [
            {
              "date": "05-11-2017",
              "desc": "tires rotated"
            },
            {
              "date": "11-03-2017",
              "desc": "oil change"
            }
          ]
        },
        {
          "type": "car",
          "model": "Honda Accord",
          "insurance": {
            "company": "Car Insurance",
            "policy_num": "98765"
          },
          "maintenance": [
            {
              "date": "10-07-2017",
              "desc": "new air filter"
            },
            {
              "date": "01-13-2018",
              "desc": "new brakes"
            }
          ]
        }
      ],
      "source": "phone"
    }
  ]
}</pre>

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Automatic Schema Discovery" desc="CData JDBC Driver for Avro - RSBAvro -  Automatic Schema Discovery: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Automatic Schema Discovery</h1>
       

    <div class="chapter_content" id="pg_AutomaticDiscovery">

<p>By default, the driver automatically infers a relational schema by inspecting the Avro data. This section describes the connection properties available to configure these dynamic schemas.


<h3>Detecting Columns</h3>
</p>

<p>The columns identified during the discovery process depend on the <u>FlattenArrays</u> and <u>FlattenObjects</u> properties. If <u>FlattenObjects</u> is set (this is the default), nested objects will be flattened into a series of columns.


<h3>Example Data Set</h3>
</p>

<p>To provide an example of how these options work, consider the following schema:
<br/><pre lang="">{
  "type" : "record",
  "name" : "Root",
  "fields" : [ {
    "name" : "id",
    "type" : [ "null", "long" ]
  }, {
    "name" : "name",
    "type" : [ "null", "string" ]
  }, {
    "name" : "annual_revenue",
    "type" : [ "null", "long" ]
  }, {
    "name" : "offices",
    "type" : {
      "type" : "array",
      "items" : "string"
    }
  }, {
    "name" : "address",
    "type" : [ "null", {
      "type" : "record",
      "name" : "Address",
      "namespace" : "root",
      "fields" : [ {
        "name" : "city",
        "type" : [ "null", "string" ]
      }, {
        "name" : "state",
        "type" : [ "null", "string" ]
      }, {
        "name" : "street",
        "type" : [ "null", "string" ]
      } ]
    } ]
  }]
}</pre></p>

<p>Also consider the following example data for the above schema:
<br/><pre lang="">{
  "id": 12,
  "name": "Lohia Manufacturers Inc.",
  "annual_revenue": 35600000,
  "offices": [
    "Chapel Hill",
    "London",
    "New York"
  ],
  "address": {
    "city": "Chapel Hill",
    "state": "NC",
    "street": "Main Street"
  }
}</pre>


<h2>Using FlattenObjects</h2>
</p>

<p>If <u>FlattenObjects</u> is set, all nested objects will be flattened into a series of columns.
The above example will be represented by the following columns: 
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Example Value</b></td></tr><tr><td style="white-space:nowrap">id</td><td>Integer</td><td>12</td></tr><tr><td style="white-space:nowrap">name</td><td>String</td><td>Lohia Manufacturers Inc.</td></tr><tr><td style="white-space:nowrap">address.street</td><td>String</td><td>Main Street</td></tr><tr><td style="white-space:nowrap">address.city</td><td>String</td><td>Chapel Hill</td></tr><tr><td style="white-space:nowrap">address.state</td><td>String</td><td>NC</td></tr><tr><td style="white-space:nowrap">offices</td><td>String</td><td>["Chapel Hill", "London", "New York"]</td></tr><tr><td style="white-space:nowrap">annual_revenue</td><td>Double</td><td>35,600,000</td></tr></table></center><p /></p>

<p>If <u>FlattenObjects</u> is not set, then the address.street, address.city, and address.state columns will not be broken apart. The address column of type string will instead represent the entire object. Its value would be the following:
  <br/><pre lang="plain">    {street: "Main Street", city: "Chapel Hill", state: "NC"}
  </pre></p>

<p>

<h2>Using FlattenArrays</h2>
</p>

<p>The <u>FlattenArrays</u> property can be used to flatten array values into columns of their own. This is only recommended for arrays that are expected to be short, for example the coordinates below:
<br/><pre lang="">"coord": [ -73.856077, 40.848447 ]</pre>

The <u>FlattenArrays</u> property can be set to 2 to represent the array above as follows:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Example Value</b></td></tr><tr><td style="white-space:nowrap">coord.0</td><td>Float</td><td>-73.856077</td></tr><tr><td style="white-space:nowrap">coord.1</td><td>Float</td><td>40.848447</td></tr></table></center><p /></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Parsing Hierarchical Data" desc="CData JDBC Driver for Avro - RSBAvro -  Parsing Hierarchical Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Parsing Hierarchical Data</h1>
       

    <div class="chapter_content" id="pg_NestedParsing">

<p>The driver offers three basic configurations to model object arrays as tables, described in the following sections. The driver will parse the document and identify the object arrays.
<ul><li><a href="#pg_FlattenedDocumentsDataModel">Flattened Documents Model</a>: Implicitly join nested object arrays into a single table.</li><li><a href="#pg_RelationalDataModel">Relational Model</a>: Model object arrays as individual tables containing a primary key and a foreign key that links to the parent document. </li><li><a href="#pg_DocumentDataModel">Top-Level Document Model</a>: Model a top-level view of a document. Nested object arrays are returned as strings.</li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Flattened Documents Model" desc="CData JDBC Driver for Avro - RSBAvro -  Flattened Documents Model: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Flattened Documents Model</h1>
       

    <div class="chapter_content" id="pg_FlattenedDocumentsDataModel">

<p> 
For users who simply need access to the entirety of their Avro data, flattening the data into a single table is the best option. The driver will use streaming and only parses the data once per query in this mode. 


<h2>Joining Object Arrays into a Single Table</h2>
</p>

<p>With <u>DataModel</u> set to "FlattenedDocuments" values will act in the same manner as a SQL JOIN. Any nested sibling values (child paths at the same height) will be treated as a SQL CROSS JOIN. 


<h2>Example</h2>
</p>

<p>Below is a sample query and the results, based on the sample document in <a href="#pg_rawjson">Raw Data</a>. This implicitly JOINs the people collection with the vehicles collection and implicitly JOINs the vehicles collection with the maintenance collection.


<h3>Connection String</h3>
</p>

<p>Use the following connection string to query the <a href="#pg_rawjson">Raw Data</a> in this example. 

<br/><pre lang="plain">URI=C:\people.avro;DataModel=FlattenedDocuments;</pre>


<h3>Query</h3>
</p>

<p>The following query drills into the nested elements in each people object. 
<br/><pre lang="sql">SELECT
  [personal.age] AS age,
  [personal.gender] AS gender,
  [personal.name.first] AS name_first,
  [personal.name.last] AS name_last,
  [source],
  [type],
  [model],
  [insurance.company] AS ins_company,
  [insurance.policy_num] AS ins_policy_num,
  [date] AS maint_date,
  [desc] AS maint_desc
FROM
  [people]</pre>


<h3>Results</h3>
</p>

<p>With horizontal and vertical flattening based on the described paths, each vehicle object is implicitly JOINed to its parent people object and each maintenance object is implicitly JOINed to its parent vehicle object. 
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>age</b></td><td><b>gender</b></td><td><b>first_name</b></td><td><b>last_name</b></td><td><b>source</b></td><td><b>type</b></td><td><b>model</b></td><td><b>ins_company</b></td><td><b>ins_policy_num</b></td><td><b>maint_date</b></td><td><b>maint_desc</b>
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>car</td><td>Honda Civic</td><td>ABC Insurance</td><td>12345</td><td>2017-07-17</td><td>oil change
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>car</td><td>Honda Civic</td><td>ABC Insurance</td><td>12345</td><td>2018-01-03</td><td>new tires
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>truck</td><td>Dodge Ram</td><td>ABC Insurance</td><td>12345</td><td>2017-08-27</td><td>new tires
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>truck</td><td>Dodge Ram</td><td>ABC Insurance</td><td>12345</td><td>2018-01-08</td><td>oil change
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Toyota Camry</td><td>Car Insurance</td><td>98765</td><td>2017-05-11</td><td>tires rotated
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Toyota Camry</td><td>Car Insurance</td><td>98765</td><td>2017-11-03</td><td>oil change
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Honda Accord</td><td>Car Insurance</td><td>98765</td><td>2017-10-07</td><td>new air filter
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Honda Accord</td><td>Car Insurance</td><td>98765</td><td>2018-01-13</td><td>new brakes
</td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Top-Level Document Model" desc="CData JDBC Driver for Avro - RSBAvro -  Top-Level Document Model: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Top-Level Document Model</h1>
       

    <div class="chapter_content" id="pg_DocumentDataModel">

<p>Using a top-level document view of the data provides ready access to top-level elements. The driver returns nested elements in aggregate, as single columns. </p>

<p>One aspect to consider is performance. You forgo the time and resources to process and parse nested elements -- the driver parses the returned data once, using streaming to read the data. Another consideration is your need to access any data stored in nested parent elements, and the ability of your tool or application to process the data. </p>

<p>


<h2>Modeling a Top-Level Document View</h2>
</p>

<p>With <u>DataModel</u> set to "Document" (the default), the driver scans only a single object array, the top-level object array by default. The top-level object elements are available as columns due to the default object flattening. Nested object arrays are returned as aggregated strings. 


<h2>Example</h2>
</p>

<p> Below is a sample query and the results, based on the sample document in <a href="#pg_rawjson">Raw Data</a>. The query results in a single "people" table.


<h3>Connection String</h3>
</p>

<p>Set the <u>DataModel</u> connection property to "Document" to perform the following query and see the example result set.
<br/><pre lang="plain">URI=C:\people.avro;DataModel=Document;</pre>


<h3>Query</h3>
</p>

<p>The following query pulls the top-level object elements and the vehicles array into the results. 
<br/><pre lang="sql">SELECT
  [personal.age] AS age,
  [personal.gender] AS gender,
  [personal.name.first] AS name_first,
  [personal.name.last] AS name_last,
  [source],
  [vehicles]
FROM
  [people]
  </pre>


<h3>Results</h3>
</p>

<p>With a document view of the data, the personal object is flattened into 4 columns and the source and vehicles elements are returned as individual columns, resulting in a table with 6 columns.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>age</b></td><td><b>gender</b></td><td><b>name_first</b></td><td><b>name_last</b></td><td><b>source</b></td><td><b>vehicles</b>
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td><br/><pre lang="plain">[{"type":"car","model":"Honda Civic","insurance":{"company":"ABC Insurance","policy_num":"12345"},"maintenance":[{"date":"07-17-2017","desc":"oil change"},{"date":"01-03-2018","desc":"new tires"}]},{"type":"truck","model":"Dodge Ram","insurance":{"company":"ABC Insurance","policy_num":"12345"},"maintenance":[{"date":"08-27-2017","desc":"new tires"},{"date":"01-08-2018","desc":"oil change"}]}]</pre>
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td><br/><pre lang="plain">[{"type":"car","model":"Toyota Camry","insurance":{"company":"Car Insurance","policy_num":"98765"},"maintenance":[{"date":"05-11-2017","desc":"tires rotated"},{"date":"11-03-2017","desc":"oil change"}]},{"type":"car","model":"Honda Accord","insurance":{"company":"Car Insurance","policy_num":"98765"},"maintenance":[{"date":"10-07-2017","desc":"new air filter"},{"date":"01-13-2018","desc":"new brakes"}]}]</pre>
</td></tr></table></center><p /></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Relational Model" desc="CData JDBC Driver for Avro - RSBAvro -  Relational Model: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Relational Model</h1>
       

    <div class="chapter_content" id="pg_RelationalDataModel">

<p>The CData JDBC Driver for Avro can be configured to create a relational model of the data, treating nested object arrays as individual tables containing a primary key and a foreign key that links to the parent document. This is particularly useful if you need to work with your data in existing BI, reporting, and ETL tools that expect a relational data model. 


<h2>Joining Nested Arrays as Tables</h2>
</p>

<p>With <u>DataModel</u> set to "Relational", any JOINs are controlled by the query. Any time you perform a JOIN query, the file or source will be queried once for each table (nested array) included in the query. 


<h2>Example</h2>
</p>

<p>Below is a sample query against the sample document in <a href="#pg_rawjson">Raw Data</a>, using a relational model.


<h3>Connecting String</h3>

<br/><pre lang="plain">URI=C:\people.avro;DataModel=Relational;'</pre>


<h3>Query</h3>
</p>

<p>The following query explicitly JOINs the people, vehicles, and maintenance tables. 
<br/><pre lang="sql">SELECT 
  [people].[personal.age] AS age, 
  [people].[personal.gender] AS gender, 
  [people].[personal.name.first] AS first_name, 
  [people].[personal.name.last] AS last_name, 
  [people].[source], 
  [vehicles].[type], 
  [vehicles].[model], 
  [vehicles].[insurance.company] AS ins_company, 
  [vehicles].[insurance.policy_num] AS ins_policy_num, 
  [maintenance].[date] AS maint_date, 
  [maintenance].[desc] AS maint_desc
FROM 
  [people]
JOIN 
  [vehicles] 
ON 
  [people].[_id] = [vehicles].[people_id]
JOIN 
  [maintenance] 
ON 
  [vehicles].[_id] = [maintenance].[vehicles_id]</pre>

  
<h3>Results</h3>
</p>

<p>  In the example query, each maintenance object is JOINed to its parent vehicle object, which is JOINed to its parent people object to produce a table with 8 rows (2 maintenance entries for each of 2 vehicles each for 2 people).
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>age</b></td><td><b>gender</b></td><td><b>first_name</b></td><td><b>last_name</b></td><td><b>source</b></td><td><b>type</b></td><td><b>model</b></td><td><b>ins_company</b></td><td><b>ins_policy_num</b></td><td><b>maint_date</b></td><td><b>maint_desc</b>
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>car</td><td>Honda Civic</td><td>ABC Insurance</td><td>12345</td><td>2017-07-17</td><td>oil change
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>car</td><td>Honda Civic</td><td>ABC Insurance</td><td>12345</td><td>2018-01-03</td><td>new tires
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>truck</td><td>Dodge Ram</td><td>ABC Insurance</td><td>12345</td><td>2017-08-27</td><td>new tires
</td></tr><tr><td style="white-space:nowrap"></td><td>20</td><td>M</td><td>John</td><td>Doe</td><td>internet</td><td>truck</td><td>Dodge Ram</td><td>ABC Insurance</td><td>12345</td><td>2018-01-08</td><td>oil change</td><td></td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Toyota Camry</td><td>Car Insurance</td><td>98765</td><td>2017-05-11</td><td>tires rotated
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Toyota Camry</td><td>Car Insurance</td><td>98765</td><td>2017-11-03</td><td>oil change</td><td></td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Honda Accord</td><td>Car Insurance</td><td>98765</td><td>2017-10-07</td><td>new air filter
</td></tr><tr><td style="white-space:nowrap"></td><td>24</td><td>F</td><td>Jane</td><td>Roberts</td><td>phone</td><td>car</td><td>Honda Accord</td><td>Car Insurance</td><td>98765</td><td>2018-01-13</td><td>new brakes
</td></tr></table></center><p /></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Using JDBC" desc="CData JDBC Driver for Avro - RSBAvro - Using JDBC: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Using JDBC</h1>
       

    <div class="chapter_content" id="pg_usagej">

<p>This section provides a walk-through of writing data access code to Avro in JDBC. </p>

<p>See <a href="#pg_datamodel">Data Model</a> for more information on the available API objects and how to query them with SQL. 
See <a href="#pg_overview">SQL Compliance</a> for the SQL syntax.


<h2>Connecting from Code</h2>
</p>

<p>See <a href="#pg_connectionj">Establishing a Connection</a> for the prerequisite information you need to deploy the driver and configure the connection to Avro. <a href="#pg_JDBCconnectcode">Connecting from Code</a> shows how to connect with the DriverManager or AvroDataSource classes.


<h3>Executing SQL</h3>
</p>

<p>Use the Statement and PreparedStatement classes to execute SQL to Avro:
<ul><li>See <a href="#pg_JDBCqueries">Executing Statements</a> to execute Statements and iterate over the returned ResultSets. </li><li>See <a href="#pg_JDBCupdates">Using Prepared Statements</a> to execute parameterized statements. The PreparedStatement class provides a means to efficiently execute queries more than once and to mitigate SQL injection attacks.</li><li>
<p>See <a href="#pg_JDBCbatch">Batch Processing</a> to take advantage of the Avro bulk processing functionality.  The driver converts the JDBC batch commands into a single request to Avro. </p>
</li></ul></p>

<p> 

<h3>Executing Stored Procedures</h3>
</p>

<p>You can execute stored procedures as parameterized statements (with the CallableStatement class) or SQL statements (with the EXECUTE syntax): see <a href="#pg_storedprocedurej">Calling Stored Procedures</a>.


<h3>Connection Pooling</h3>
</p>

<p>Instantiate pooled connections with AvroDataSource objects: see <a href="#pg_connectionpoolingjdbc">Connection Pooling</a> to create and configure the pool.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Installed Files" desc="CData JDBC Driver for Avro - RSBAvro -  Installed Files: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Installed Files</h1>
       

    <div class="chapter_content" id="pg_jars">

<p>The CData JDBC Driver for Avro ships the following files, located in the lib subfolder of the installation directory:
<ul><li>cdata.jdbc.avro.jar: Pure Java Type 4/5 JDBC Driver, compiled with JDK 1.8.</li><li>cdata.jdbc.avro.lic: This is the license file and must be placed in same folder as the JAR.</li><li>cdata.jdbc.avro.remoting.ini: This is the configuration file for <a href="#pg_remotingintroj">JDBC Remoting</a>.</li></ul>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connecting from Code" desc="CData JDBC Driver for Avro - RSBAvro -  Connecting from Code: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connecting from Code</h1>
       

    <div class="chapter_content" id="pg_JDBCconnectcode">

<p>This section describes how to connect with the JDBC DriverManager or AvroDataSource interfaces.


<h2>Connecting with the DriverManager</h2>
</p>

<p>When connecting with the DriverManager class, the CData JDBC Driver for Avro follows the JDBC convention: First, load the Avro driver class. Then, make a connection.


<h3>Load the Driver</h3>

The following step is optional per the JDBC 4.0 specification.
<br/><pre lang="">Class.forName("cdata.jdbc.avro.AvroDriver");</pre>


<h3>Establish a Connection</h3>
</p>

<p>Provide the connection string with the getConnection method of the static DriverManager class. Start the connection string with "jdbc:avro:". A typical connection string is the following:
<br/><pre lang="">Connection conn = DriverManager.getConnection("jdbc:avro:URI=C:\folder\table.avro;");</pre>

Alternatively, you can prepare the connection options using a Properties object. Pass the Properties object to the DriverManager.
<br/><pre lang="">prop.setProperty("<u>URI</u>","C:\folder\table.parquet");

Connection conn = DriverManager.getConnection("jdbc:avro:",prop);</pre>


<h2>Connecting with the AvroDataSource Class</h2>
</p>

<p>You can use the AvroDataSource class to create pooled connections, as shown in the following example. See <a href="#pg_connectionpoolingjdbc">Connection Pooling</a> for more information.</p>

<p>The following example instantiates a pooled Connection object:
<br/><pre lang="java">AvroDataSource ds = new AvroDataSource("jdbc:avro:UseConnectionPooling=true;URI=C:\folder\table.avro;"); 
Connection conn = ds.getConnection();</pre> 
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Executing Statements" desc="CData JDBC Driver for Avro - RSBAvro -  Executing Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Executing Statements</h1>
       

    <div class="chapter_content" id="pg_JDBCqueries">

<p>After <a href="#pg_JDBCconnectcode">Connecting from Code</a>, you can execute SQL statements with the Statement class. See <a href="#pg_JDBCupdates">Using Prepared Statements</a> to execute parameterized statements.</p>

<p>
<h2>Select</h2>
</p>

<p>To execute SQL statements that return data, use the Statement class' generic execute method or the executeQuery method. To return the results of a query, call the getResultSet method of the Statement. </p>

<p>The following example calls the execute method and iterates over the results returned:
<br/><pre lang="">Statement stat = conn.createStatement();
boolean ret = stat.execute("SELECT Id, Column1 FROM SampleTable_1");
if (ret) {
  ResultSet rs=stat.getResultSet();
  while(rs.next()) {
    for(int i=1;i&lt;=rs.getMetaData().getColumnCount();i++) {
      System.out.println(rs.getMetaData().getColumnLabel(i) +"="+rs.getString(i));
    }
  }
}</pre>

 

 
 

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Using Prepared Statements" desc="CData JDBC Driver for Avro - RSBAvro -  Using Prepared Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Using Prepared Statements</h1>
       

    <div class="chapter_content" id="pg_JDBCupdates">

<p>The PreparedStatement object represents a precompiled SQL statement. A PreparedStatement can be used multiple times and mitigates SQL injection attacks. A PreparedStatement can be a SELECT, INSERT, UPDATE, or DELETE statement. 
</p>

<p>To execute a prepared statement, you can use the generic execute method of the Statement class. This section describes how to execute a prepared statement.
<ol><li>
<p>Instantiate a PreparedStatement object with the prepareStatement method of the Connection class.</p>


<p>See <a href="#pg_JDBCconnectcode">Connecting from Code</a> to create the connection.</p>
</li><li>Declare parameters by calling the PreparedStatement's corresponding setter method. Note that the parameter indices start from one.</li><li>Call the PreparedStatement's execute method to execute the statement.</li><li>Call the PreparedStatement's getResultSet method to pull the results into a ResultSet object.</li><li>Call ResultSet.next to iterate over the result set. Use the ResultSetMetaData class to obtain column information about the result set. To instantiate a ResultSetMetaData object, call the ResultSet's getMetaData method.</li></ol>


<h2>Select</h2>
</p>

<p>The following example shows how to execute a SELECT prepared statement: 
<br/><pre lang="">String query = "SELECT * FROM SampleTable_1 WHERE Id=? AND Column1=?";
PreparedStatement pstmt = conn.prepareStatement(query);
pstmt.setString(1, "XXX");
pstmt.setString(2, "YYY");
boolean ret = pstmt.execute();
if (ret) {
  ResultSet rs=pstmt.getResultSet();
  while(rs.next()) {
    for(int i=1;i&lt;=rs.getMetaData().getColumnCount();i++) {
      System.out.println(rs.getMetaData().getColumnLabel(i) +"="+rs.getString(i));
    }
  }
} </pre> 

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Batch Processing" desc="CData JDBC Driver for Avro - RSBAvro -  Batch Processing: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Batch Processing</h1>
       

    <div class="chapter_content" id="pg_JDBCbatch">

<p>The CData JDBC Driver for Avro enables you to take advantage of the bulk load support in Avro through the JDBC batch API. You can use the batch API to execute related SQL data manipulation statements simultaneously.


<h2>Using the JDBC Batch API</h2>
</p>

<p>The following examples show how to execute bulk operations with the PreparedStatement class. 


<h3>Bulk Insert</h3>
</p>

<p>To perform a bulk insert with a PreparedStatement, call addBatch for each set of parameters you want to execute as part of the bulk insert. After adding all the sets of parameters to the batch, you can execute the bulk insert by calling executeBatch.</p>

<p><b>Note:</b> For bulk INSERT in Avro, first create a new table using <a href="#pg_createtable">CREATE TABLE Statements</a>. The new table would be created in the directory specified using the <u>URI</u> connection property. Currently, bulk INSERT works only if URI points to a local file or a local directory.</p>

<p>The executeBatch method returns an array that contains the update counts for each statement. For example:

<br/><pre lang="">String query = "INSERT INTO SampleTable_1 (Column1) VALUES (?)"; 
PreparedStatement pstmt = conn.prepareStatement(query);

pstmt.setString(1, "Jon Doe"); 
pstmt.addBatch();

pstmt.setString(1, "John"); 
pstmt.addBatch();

int[] r = pstmt.executeBatch();
for(int i: r)
  System.out.println(i);
</pre>


<h2>Setting the Batch Size</h2>
</p>

<p>Setting the maximum batch size can be necessary when the server has limitations on the size of the request that can be submitted. Set the <u>BatchSize</u> property to split the entire batch into batches of the specified value. Each batch is submitted to the server individually.</p>

<p>Or, set <u>BatchSize</u> to 0 to submit the entire batch.

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connection Pooling" desc="CData JDBC Driver for Avro - RSBAvro -  Connection Pooling: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connection Pooling</h1>
       

    <div class="chapter_content" id="pg_connectionpoolingjdbc">

<p>The driver implements a standard JDBC connection pool. Set <u>UseConnectionPooling</u> to enable the pool. The following sections show how to configure and use them.


<h2>Working with Pooled Connections</h2>
</p>

<p>Just as you would interact with a non-pooled connection, you use standard JDBC objects to get and close connections. But, in this case, the Connection object retrieved is a handle for the physical connection owned by the connection pool. When the connection is closed, instead of the connection being destroyed, the handle is returned to the pool, where it is available for the next connection request.</p>

<p>You must explicitly close the connection for it to be returned to the pool.  


</p>

<p>
<h2>Configuring the Connection Pool</h2>
</p>

<p>In addition to <u>UseConnectionPooling</u>, set the following connection properties to control the connection pool:
<ul><li><u>PoolMaxSize</u>: Define the maximum number of connections that can be open at any given time.</li><li><u>PoolIdleTimeout</u>: Set a limit to how long connections can remain idle in the connection pool. If this limit is exceeded, the connection is removed from the pool.</li><li><u>PoolWaitTime</u>: Set a limit to how long new connection requests should wait for a connection to become available. If this limit is exceeded, the request returns an error. By default, connection requests wait forever for a connection to become available. </li></ul>


<h3>Connection Pooling with  avroDataSource</h3>
</p>

<p>To use the default method for pooling connections, instantiate the AvroDataSource with <u>UseConnectionPooling</u>:
<br/><pre lang="java">AvroDataSource avroDataSource = new AvroDataSource();
avroDataSource.setURL("jdbc:avro:UseConnectionPooling=true;URI=C:\folder\table.avro;");</pre>


<h3>JDBC Connection Pooling</h3>
</p>

<p>If you would like to establish a pooled connection using the the JDBC ConnectionPoolDataSource interface, instantiate the AvroConnectionPoolDataSource with <u>UseConnectionPooling</u>:
<br/><pre lang="java">AvroConnectionPoolDataSource avroPoolDataSource = new AvroConnectionPoolDataSource();
avroPoolDataSource.setURL("jdbc:avro:UseConnectionPooling=true;URI=C:\folder\table.avro;");</pre>

<h2>Closing the Connection Pool</h2>
</p>

<p>On JRE 1.3 or higher, the connection pool itself automatically closes when the application stops running. You can manually close the connection pool by invoking the close method of the DataSource object.</p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  JNDI" desc="CData JDBC Driver for Avro - RSBAvro -  JNDI: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> JNDI</h1>
       

    <div class="chapter_content" id="pg_jndipooling">

<p>
<h2>Connection Pooling with JNDI</h2>
</p>

<p>The Java Naming and Directory Service (JNDI) is an API which allows distributed application to look up services. JNDI can be used to easily set up connection pools.</p>

<p>To set up a connection pool using JNDI, you will need to initialize the JNDI File System Service Provider, as shown in the example code below. To run the example, you need to add the fscontext.jar and providerutil.jar files to your classpath. You can download these files from the Oracle Java Archive: Under the Java SE section, select <b>Java Platform Technologies &gt; Java Naming and Directory Interface</b>.
<br/><pre lang="java"> 
Hashtable env = new Hashtable();
env.put(Context.INITIAL_CONTEXT_FACTORY,
    "com.sun.jndi.fscontext.RefFSContextFactory");
env.put(Context.PROVIDER_URL, "file:///tmp");

Context ctx = new InitialContext(env); 
DataSource ds = null;
Connection conn = null;</pre>
The following code registers the AvroDataSource with the JNDI naming service, gets an instance of the DataSource from the service, and creates pooled connections from that instance.
<br/><pre lang="java">try {
  AvroConnectionPoolDataSource avroDataSource = new AvroConnectionPoolDataSource();
  avroDataSource.setURL("jdbc:avro:UseConnectionPooling=true;URI=C:\folder\table.avro;");
  ctx.bind("jdbc/avro", avroDataSource);
  ds = (DataSource) ctx.lookup("jdbc/avro");

  conn = ds.getConnection();
  Statement stat = conn.createStatement();
  boolean ret = stat.execute("SELECT 1");
  ResultSet rs=stat.getResultSet(); 
} catch(Exception ex) { } finally {
  if(conn != null) conn.close();
}</pre>
</p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Calling Stored Procedures" desc="CData JDBC Driver for Avro - RSBAvro -  Calling Stored Procedures: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Calling Stored Procedures</h1>
       

    <div class="chapter_content" id="pg_storedprocedurej">

<p>Use CallableStatement objects to execute parameterized stored procedure calls. Use Statement objects to execute stored procedures as SQL statements with the EXEC syntax.



<h2>Using Callable Statement Objects</h2>
</p>

<p>You can use the generic execute method of the CallableStatement class to execute any stored procedure as a parameterized query. </p>

<p>To return the stored procedure's results, call getResultSet. To return a count of updated rows, call getUpdateCount.</p>

<p>The following example shows how to execute the GetOAuthAccessToken stored procedure:

<br/><pre lang="">CallableStatement cstmt = conn.prepareCall("GetOAuthAccessToken");
cstmt.setString("CallbackURL", "http://localhost");
boolean ret = cstmt.execute();   
if (!ret) {
  int count=cstmt.getUpdateCount();
  if (count!=-1) {
    System.out.println("Affected rows: "+count);
  }
}
else {
  ResultSet rs=cstmt.getResultSet();
  while(rs.next()){
    for(int i=1;i&lt;=rs.getMetaData().getColumnCount();i++) {
      System.out.println(rs.getMetaData().getColumnLabel(i) +"="+rs.getString(i));
    }
  }
}</pre>


<h2>Using Statement Objects</h2>
</p>

<p>You can use the execute method of the Statement class to execute any stored procedure as an SQL statement. </p>

<p>To return the stored procedure's results, call getResultSet. To return a count of updated rows, call getUpdateCount.</p>

<p>The following example shows how to execute the GetOAuthAccessToken stored procedure:  (See <a href="#pg_exec">EXECUTE Statements</a> for more on the syntax.) 
<br/><pre lang="">Statement stmt = conn.createStatement();
boolean ret = stmt.execute("EXEC GetOAuthAccessToken CallbackURL = 'http://localhost'");

if (!ret) {
  int count=stmt.getUpdateCount();
  if (count!=-1) {
    System.out.println("Affected rows: "+count);
  }
}
else {
  ResultSet rs=stmt.getResultSet();
  while(rs.next()) {
    for(int i=1;i&lt;=rs.getMetaData().getColumnCount();i++) {
      System.out.println(rs.getMetaData().getColumnLabel(i) +"="+rs.getString(i));
    }
  }
}</pre></p>

<p>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Using from Tools" desc="CData JDBC Driver for Avro - RSBAvro - Using from Tools: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Using from Tools</h1>
       

    <div class="chapter_content" id="pg_jdbctoolsintro">

<p>The CData JDBC Driver for Avro provides the standard JDBC connection process in analytics tools and other applications.


<h2>JDBC Integration Quickstarts</h2>
</p>

<p>The CData JDBC Driver for Avro provides the standard JDBC connection process in applications ranging from business intelligence tools to IDEs. The following sections show how to create and start querying Avro JDBC data sources, walking through data access in JDBC from several popular database tools.

<ul><li><a href="#pg_jdbcdbvisualizer">DbVisualizer</a>
  </li><li><a href="#pg_jdbcsquirrel">SQuirreL SQL</a>
  </li><li><a href="#pg_jdbcdbeaver">DBeaver</a>
  </li><li><a href="#pg_jdbctableau">Tableau</a></li></ul>


<h2>Complete List of Avro Integration Quickstarts</h2>
</p>

<p>See <a href="https://www.cdata.com/kb/tech/avro-article-list.rst">Avro integration guides</a> for information on connecting from other applications.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  DbVisualizer" desc="CData JDBC Driver for Avro - RSBAvro -  DbVisualizer: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> DbVisualizer</h1>
       

    <div class="chapter_content" id="pg_jdbcdbvisualizer">

<p>This section shows how to establish a connection to data in DbVisualizer, use the table editor to edit and save data, and execute SQL.

<h2>Add the JDBC Driver for Avro</h2>
</p>

<p>Complete the following steps to add the driver .jar file in a driver definition:
<ol><li>In the DbVisualizer toolbar, select <b>Tools &gt; Driver Manager</b>.
  </li><li>Click the "<b>+</b>" button in the top-left corner of the Driver Manager window and select <b>Custom</b>.
  </li><li>Enter a name for the driver.
  </li><li>Enter the following in the URL Format box: <br/><pre lang="">jdbc:avro:</pre>
  </li><li>In the <b>Driver artifacts and jar files</b> section, click the "<b>+</b>" button on the right and select <b>Add Files</b>... to browse for the driver .jar file, <b>cdata.jdbc.avro.jar</b>. By default, this is located in the <b>lib</b> subfolder of the installation directory. Note that the .lic file in this folder must be located in the same folder as the .jar file.
  </li><li>In the Driver Class menu, select the AvroDriver class, <b>cdata.jdbc.avro.AvroDriver</b>.</li></ol>

<h2>Create a Database Connection for Avro</h2>
</p>

<p>Complete the following steps to select the Avro driver and build the JDBC URL to create the JDBC data source:
<ol><li>    
<p>In the DbVisualizer toolbar, select <b>Database &gt; Create Database Connection</b>. The <b>Driver Name</b> selector will then appear. </p>

<p><b>Note:</b> If this option is greyed out, you may need to first select the <b>Connections</b> root element of the tree view, found in the <b>Databases</b> tab of the left-hand pane. 
  </p>
</li><li>Double-click the name of the JDBC driver you defined in the section above.
  </li><li>Set <b>Settings Format</b> to <b>Database URL</b> if it isn't already set to that value.
  </li><li>Set <b>Driver Type</b> to the name you defined for your JDBC driver, if it doesn't default to that name.
  </li><li>Set <b>Database URL</b> to the full JDBC URL. The syntax of the JDBC URL is <b>jdbc:avro:</b> followed by the connection properties in a semicolon-separated list of name-value pairs.
    
<p>A typical connection string is below:<br/><pre lang="plain">jdbc:avro:URI=C:\folder\table.avro;</pre>
  </p>
</li><li>Click <b>Connect</b>.
  </li><li>If the connection succeeds, set the <b>Database Type</b> to <b>Generic</b>.</li></ol>


<h2>Discover Schemas and Query Avro Data</h2>
</p>

<p>You can now browse data and execute SQL in the following ways:
<ul><li>To access the available tables, from the <b>Databases</b> tab, expand the nodes for the connection, database, schema, and table or view.
  </li><li>To browse through table data and metadata, right-click a table and click <b>Open in Tab</b> or <b>Open in New Tab</b>.
  </li><li>To execute SQL queries, select <b>SQL Commander &gt; New SQL Commander</b>. Select the Database Connection, Database, and Schema from the available menus.</li></ul></p>

<p>See <a href="#pg_datamodel">Data Model</a> for information on querying specific tables. See <a href="#pg_overview">SQL Compliance</a> for more information on the SQL syntax.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  DBeaver" desc="CData JDBC Driver for Avro - RSBAvro -  DBeaver: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> DBeaver</h1>
       

    <div class="chapter_content" id="pg_jdbcdbeaver">

<p>This section describes how to connect to Avro following the standard JDBC connection process in DBeaver: Add the driver JAR, provide the driver class name, and provide any Avro-specific parameters in the JDBC URL.

<h2>Add the JDBC Driver for Avro</h2>
</p>

<p>Complete the following steps to add the driver .jar file:
<ol><li>Open the DBeaver application and, in the Database menu, select the <b>Driver Manager</b> option. Click <b>New</b> to open the Create New Driver form.
  </li><li>In the Driver Name box, enter a user-friendly name for the driver.
  </li><li>
<p>To add the .jar file, click <b>Add File</b> on the Libraries tab. Select the cdata.jdbc.avro.jar file, located in the lib subfolder of the installation directory.</p>
  
<p>  Note that the.lic file must be located in the same folder as the .jar file.
  </p>
</li><li>Click <b>Find Class</b>, and in the list select, "cdata.jdbc.avro.AvroDriver".
  </li><li>In the URL Template field, enter <i>jdbc:avro:</i>.</li></ol>

<h2>Create the JDBC Data Source</h2>
</p>

<p>Complete the following steps to select the Avro driver and build the JDBC URL to create the JDBC data source:
<ol><li>In the main DBeaver window, click <b>Database &gt; New Connection</b>.
  </li><li>Select the driver definition you created in the dialog that is displayed.
  </li><li>On the next page of the wizard, click the <b>Driver Properties</b> tab.
  </li><li>    
<p>Enter any connection properties required to connect to Avro. 
    </p>

<p>Here is a typical connection string:<br/><pre lang="">jdbc:avro:URI=C:\folder\table.avro;</pre> 
    See <a href="#pg_connectionj">Establishing a Connection</a> for a connection and authentication guide.
  </p>
</li><li>Finish creating the connection with the default settings or configure advanced network settings -- proxy, firewall, and SSH.</li></ol>

<h2>Discover Schemas and Query Avro Data</h2>
</p>

<p>Complete the following steps to query information from the tables exposed by the connection:
<ol><li>Expand the node for the connection to access the database metadata. </li><li>Browse the table metadata and edit the table data by right-clicking a Table and then clicking <b>Edit Table</b>.</li></ol>
</p>

<p>To execute an SQL query, select <b>SQL Editor &gt; New SQL Editor</b> and select the Avro connection you created. You can then enter queries using code completion.

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  SQuirreL SQL" desc="CData JDBC Driver for Avro - RSBAvro -  SQuirreL SQL: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> SQuirreL SQL</h1>
       

    <div class="chapter_content" id="pg_jdbcsquirrel">

<p>This section describes how to create a JDBC data source for Avro data and execute queries.

<h2>Add the JDBC Driver for Avro</h2>
</p>

<p>Complete the following steps to add the driver .jar file: 
<ol><li>In the Drivers pane, click the plus icon to open the Add Driver wizard. 
  </li><li>In the Name box, enter a user-friendly name for the driver; for example, CData JDBC Driver for Avro.
  </li><li>In the Example URL box, enter <i>jdbc:avro:</i>
  </li><li>In the Extra Class Path tab, click <b>Add</b>.
  </li><li>In the file explorer that opens, select the .jar file for the driver, located in the lib subfolder of the installation directory.
  </li><li>Click <b>List Drivers</b> to populate the Class Name menu with the class name for the driver, cdata.jdbc.avro.AvroDriver.</li></ol>

<h2>Create the JDBC Data Source</h2>
</p>

<p>Complete the following steps to select the Avro driver you created and build the JDBC URL to create the JDBC data source:
<ol><li>In the Aliases pane, click the plus icon.
  </li><li>    
<p>In the Add Alias wizard that opens, provide values for the following fields:
    <ul><li><b>Name</b>: Enter a name for the alias; for example, CData Avro Source.
      </li><li><b>Driver</b>: Select the driver definition you created. 
      </li><li><b>URL</b>: Enter <i>jdbc:avro:</i>
      </li><li><b>User Name</b>: If needed, enter a user name for authentication, which is added to the JDBC URL.
      </li><li><b>Password</b>: If needed, enter a password for authentication, which is added to the JDBC URL.
    </li></ul>
  </p>
</li><li>If you want to define any additional properties, add them to the JDBC URL in a semicolon-separated list.
    
<p>The following is a typical connection string:<br/><pre lang="">jdbc:avro:URI=C:\folder\table.avro;</pre>
    See <a href="#pg_connectionj">Establishing a Connection</a> for a connection and authentication guide.
    </p>
</li></ol>
    Or, follow these steps to add the properties in the Driver Properties dialog:
    <ol><li>Select the <b>Use Driver Properties</b> check box.
  </li><li>In the Specify column, select the check boxes for the required connection properties and specify the corresponding values.
  </li><li>In the dialog that appears after you click OK, click <b>Connect</b> to test the connection.</li></ol>

<h2>Discover Schemas and Query Avro Data</h2>
</p>

<p>To connect to the data source, right-click the alias on the Aliases pane and then click <b>Connect</b>. After the metadata has loaded, a new tab for the Avro data source is displayed. On the Objects subtab, you can discover schema information, such as the available tables and views.</p>

<p>To view table data and metadata, select the table on the Objects tab. Access the table data on the Content tab.</p>

<p>To execute an SQL query, enter the query on the SQL tab and then click <b>Run SQL</b> (the runner icon). 
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Tableau" desc="CData JDBC Driver for Avro - RSBAvro -  Tableau: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Tableau</h1>
       

    <div class="chapter_content" id="pg_jdbctableau">

<p>This section describes how to connect and start querying data from Tableau.


<h2>Add the CData JDBC Driver for Avro</h2>

</p>

<p><b>Note:</b> Before starting Tableau on <b>Windows</b>, make sure that you have placed the .jar file in the C:\Program Files\Tableau\Drivers folder. Before starting Tableau on <b>macOS</b>, make sure that you have placed the .jar file in the ~/Library/Tableau/Drivers folder.

 </p>

<p>To add the driver .jar file:
   <ol><li>Start Tableau.</li><li>Under <b>To a Server</b>, select <b>More</b>.</li><li>Select <b>Other Databases (JDBC)</b>.</li><li>Enter the JDBC connection string in the URL field. See <b>Building the JDBC URL for Avro</b> below for more information.</li><li>Select <b>Sign in</b>.</li></ol>


<h2 id="jdbcurl">Building the JDBC URL for Avro</h2>
</p>

<p>Connection strings provide information about a data source and how to connect to that data source. The driver comes with a connection string builder that makes it easier to create and manage the contents of connection strings.
</p>

<p>After downloading and installing the driver, double-click the .jar file in the lib folder. You can also manually run the .jar file, as shown in the following examples.
</p>

<p>From Windows:

<br/><pre lang="">java -jar 'C:\Program Files\CData\CData JDBC Driver for Avro 2023\lib\cdata.jdbc.avro.jar'</pre>
</p>

<p>From macOS:

<br/><pre lang="">java -jar cdata.jdbc.avro.jar</pre>
</p>

<p>Running the .jar file opens the <b>Connection Properties</b> dialog box. You can use this dialog box to build and test a connection string. Click <b>Test Connection</b> to test and validate the entered connection properties. Click <b>Copy to Clipboard</b> to copy the connection string for use within the application where the JDBC driver is being used. See the help documentation for more information about the connection string options.


<h2>Discover Schemas and Query Data</h2>
</p>

<p>To query data:

<ol><li>Select <b>CData</b> from the <b>Database</b> pull-down menu.</li><li>Select <b>Odata</b> from the <b>Schema</b> pull-down menu.</li><li>Drag the table onto the join area. You can include multiple tables.</li><li>Select <b>Update Now</b> or <b>Automatically Update</b>. Update Now lets you preview the first 10,000 rows of the data source (or enter the number of rows you want to see in the <b>Rows</b> text box). Automatically Update automatically reflects the changes in the preview area.</li><li>In the Connection menu, select the <b>Live</b> option, so that you skip loading a copy of the data into Tableau and instead work on real-time data.</li><li>Click the tab for your worksheet. Columns are listed as Dimensions and Measures, depending on the data type.</li></ol>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Schema Discovery" desc="CData JDBC Driver for Avro - RSBAvro - Schema Discovery: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Schema Discovery</h1>
       

    <div class="chapter_content" id="pg_systemtablesintro">

<p>The driver supports schema discovery using JDBC classes or using SQL queries to the available system tables. The JDBC classes enable access to schema information, connection property information, and information on the columns returned.</p>

<p>Through SQL queries to the available <a href="#pg_allsystables">System Tables</a>, you can access schema and connection property information as well as information on data source functionality and statistics on update operations.
</p>

<p>

<h2>Using JDBC Interfaces</h2>
</p>

<p>You can use JDBC interfaces to access schema information, connection property metadata, and result set metadata. The driver implements the standard interfaces as defined in the JDBC 4.0 specification. 


<h3>Retrieving Schema Information</h3>
</p>

<p>The DatabaseMetaData class provides information on the following: 
<ul><li><a href="#pg_systemtablesj">Tables</a></li><li><a href="#pg_systemcolumnsj">Columns</a></li><li><a href="#pg_spmetadataj">Procedures</a></li><li><a href="#pg_spmetadataparamj">Procedure Parameters</a></li><li><a href="#pg_primarykeysjdbc">Primary Keys</a></li></ul>


<h3>Retrieving Connection Property Information</h3>
</p>

<p>The Driver class, returned by DriverManager, provides information about <a href="#pg_connmetadatajava">Connection Properties</a>.


<h3>Retrieving Result Set Column Information</h3>
</p>

<p>The ResultSetMetaData class provides information about the columns returned in <a href="#pg_resultsetmetadatajdbc">Result Sets</a>.


<h2>Using SQL</h2>
</p>

<p>You can query the <a href="#pg_allsystables">System Tables</a> to access any metadata surfaced through the driver.


</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Tables" desc="CData JDBC Driver for Avro - RSBAvro -  Tables: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Tables</h1>
       

    <div class="chapter_content" id="pg_systemtablesj">

<p>You can use the getTables method of the DatabaseMetaData interface to retrieve a list of tables:
<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
DatabaseMetaData table_meta = conn.getMetaData();
ResultSet rs=table_meta.getTables(null, null, "%", null);  
while(rs.next()){
  System.out.println(rs.getString("TABLE_NAME"));
}</pre> 
The getTables method returns the following columns:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">TABLE_CAT</td><td>String</td><td>The table catalog.</td></tr><tr><td style="white-space:nowrap">TABLE_SCHEM</td><td>String</td><td>The table schema.</td></tr><tr><td style="white-space:nowrap">TABLE_NAME</td><td>String</td><td>The table name.</td></tr><tr><td style="white-space:nowrap">TABLE_TYPE</td><td>String</td><td>The table type.</td></tr><tr><td style="white-space:nowrap">REMARKS</td><td>String</td><td>The table description.</td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Columns" desc="CData JDBC Driver for Avro - RSBAvro -  Columns: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Columns</h1>
       

    <div class="chapter_content" id="pg_systemcolumnsj">

<p>You can use the getColumns method of the DatabaseMetaData interface to retrieve column information.
You can restrict the results by the table name. 
The code example below retrieves the column names for the SampleTable_1 table:

<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
DatabaseMetaData table_meta = conn.getMetaData();
ResultSet rs = table_meta.getColumns(null,null,"SampleTable_1", null);
while(rs.next()){
  System.out.println(rs.getString("COLUMN_NAME")); 
}</pre>

The getColumns method returns the following columns:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">TABLE_CAT</td><td>String</td><td>The database name.</td></tr><tr><td style="white-space:nowrap">TABLE_SCHEM</td><td>String</td><td>The table schema.</td></tr><tr><td style="white-space:nowrap">TABLE_NAME</td><td>String</td><td>The table name.</td></tr><tr><td style="white-space:nowrap">COLUMN_NAME</td><td>String</td><td>The column name.</td></tr><tr><td style="white-space:nowrap">DATA_TYPE</td><td>int</td><td>The data type identified by the value of a constant defined in java.sql.Types.</td></tr><tr><td style="white-space:nowrap">TYPE_NAME</td><td>String</td><td>The data type name used by the driver.</td></tr><tr><td style="white-space:nowrap">COLUMN_SIZE</td><td>int</td><td>The length in characters of the column or the numeric precision.</td></tr><tr><td style="white-space:nowrap">BUFFER_LENGTH</td><td>int</td><td>The buffer length.</td></tr><tr><td style="white-space:nowrap">DECIMAL_DIGITS</td><td>int</td><td>The column scale or number of digits to the right of the decimal point.</td></tr><tr><td style="white-space:nowrap">NUM_PREC_RADIX</td><td>int</td><td>The radix, or base.</td></tr><tr><td style="white-space:nowrap">NULLABLE</td><td>int</td><td>Whether the column can contain null as defined by the following JDBC DatabaseMetaData constants: columnNoNulls (0) or columnNullable (1).</td></tr><tr><td style="white-space:nowrap">REMARKS</td><td>String</td><td>The column description.</td></tr><tr><td style="white-space:nowrap">COLUMN_DEF</td><td>String</td><td>The default value for the column.</td></tr><tr><td style="white-space:nowrap">SQL_DATA_TYPE</td><td>int</td><td>Reserved by the specification.</td></tr><tr><td style="white-space:nowrap">SQL_DATETIME_SUB</td><td>int</td><td>Reserved by the specification.</td></tr><tr><td style="white-space:nowrap">CHAR_OCTET_LENGTH</td><td>int</td><td>The maximum length of binary and character-based columns.</td></tr><tr><td style="white-space:nowrap">ORDINAL_POSITION</td><td>int</td><td>The column index, starting at 1.</td></tr><tr><td style="white-space:nowrap">IS_NULLABLE</td><td>String</td><td>Whether a null value is allowed: YES or NO.</td></tr><tr><td style="white-space:nowrap">SCOPE_CATALOG</td><td>String</td><td>The table catalog that is the scope of a reference attribute.</td></tr><tr><td style="white-space:nowrap">SCOPE_SCHEMA</td><td>String</td><td>The table schema that is the scope of a reference attribute.</td></tr><tr><td style="white-space:nowrap">SCOPE_TABLE</td><td>String</td><td>The table name that is the scope of a reference attribute.</td></tr><tr><td style="white-space:nowrap">SOURCE_DATA_TYPE</td><td>int</td><td>The source type of a distinct type. Or, a user-generated Ref type. If DATA_TYPE is not DISTINCT, this value is null. If a user-generated Ref, this value is null.</td></tr><tr><td style="white-space:nowrap">IS_AUTOINCREMENT</td><td>String</td><td>Whether the column value is assigned by Avro in fixed increments.</td></tr><tr><td style="white-space:nowrap">IS_GENERATEDCOLUMN</td><td>String</td><td>Whether the column is generated: YES or NO.</td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Procedures" desc="CData JDBC Driver for Avro - RSBAvro -  Procedures: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Procedures</h1>
       

    <div class="chapter_content" id="pg_spmetadataj">

<p>You can use the DatabaseMetaData interface to retrieve stored procedure information. The getProcedures method returns descriptions of the available stored procedures. 
</p>

<p>The following code retrieves the names of the available stored procedures:
<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
DatabaseMetaData meta = conn.getMetaData();
ResultSet rs = meta.getProcedures(null, null, "%");
while(rs.next()){
  System.out.println(rs.getString("PROCEDURE_NAME"));
}</pre>
The getProcedures method returns the following columns:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">PROCEDURE_CAT</td><td>String</td><td>The catalog the procedure belongs to.</td></tr><tr><td style="white-space:nowrap">PROCEDURE_SCHEM</td><td>String</td><td>The schema the procedure belongs to.</td></tr><tr><td style="white-space:nowrap">PROCEDURE_NAME</td><td>String</td><td>The stored procedure name.</td></tr><tr><td style="white-space:nowrap">REMARKS</td><td>String</td><td>The description of the stored procedure.</td></tr><tr><td style="white-space:nowrap">PROCEDURE_TYPE</td><td>short</td><td>Returns 2 if the procedure returns a result. Returns 1 if the procedure does not return a result. Returns 0 if unknown.</td></tr><tr><td style="white-space:nowrap">SPECIFIC_NAME</td><td>String</td><td>The name that uniquely identifies the stored procedure within its schema.</td></tr></table></center><p />

  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Procedure Parameters" desc="CData JDBC Driver for Avro - RSBAvro -  Procedure Parameters: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Procedure Parameters</h1>
       

    <div class="chapter_content" id="pg_spmetadataparamj">

<p>You can use the DatabaseMetaData interface to retrieve stored procedure information. The getProcedureColumns method returns descriptions of stored procedure parameters.
You can restrict the results by the stored procedure name.</p>

<p>The following code example outputs information about the parameters of the GetOAuthAccessToken stored procedure:
<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
DatabaseMetaData meta = conn.getMetaData();
ResultSet rs=meta.getProcedureColumns(null, null, "GetOAuthAccessToken", null);  
while(rs.next()) {   
  for(int i=1;i&lt;=rs.getMetaData().getColumnCount();i++)  {
    System.out.println(rs.getMetaData().getColumnName(i) +"="+rs.getString(i));
  }
}</pre>

The getProcedureColumns method returns the following columns:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">PROCEDURE_CAT</td><td>String</td><td>The catalog that the procedure belongs to.</td></tr><tr><td style="white-space:nowrap">PROCEDURE_SCHEM</td><td>String</td><td>The schema that the procedure belongs to.</td></tr><tr><td style="white-space:nowrap">PROCEDURE_NAME</td><td>String</td><td>The name of the stored procedure.</td></tr><tr><td style="white-space:nowrap">COLUMN_NAME</td><td>String</td><td>The name of the procedure column.</td></tr><tr><td style="white-space:nowrap">COLUMN_TYPE</td><td>String</td><td>The type of procedure column as defined by the following DatabaseMetaData constants: procedureColumnIn (1), procedureColumnInOut (2), procedureColumnResult (3), procedureColumnOut (4), and procedureColumnReturn (5).</td></tr><tr><td style="white-space:nowrap">DATA_TYPE</td><td>int</td><td>The data type name as defined in java.sql.Types.</td></tr><tr><td style="white-space:nowrap">TYPE_NAME</td><td>String</td><td>The driver-defined data type name.</td></tr><tr><td style="white-space:nowrap">PRECISION</td><td>int</td><td>The number of digits allowed for numeric data.</td></tr><tr><td style="white-space:nowrap">LENGTH</td><td>int</td><td>The number of characters allowed for character data. The number of digits allowed for numeric data.</td></tr><tr><td style="white-space:nowrap">SCALE</td><td>short</td><td>The number of digits to the right of the decimal point in numeric data.</td></tr><tr><td style="white-space:nowrap">RADIX</td><td>short</td><td>The radix, or base.</td></tr><tr><td style="white-space:nowrap">NULLABLE</td><td>short</td><td>Whether the parameter can contain null as defined by the following DatabaseMetaData constants: parameterNoNulls (0), parameterNullable (1), and parameterNullableUnknown (2).</td></tr><tr><td style="white-space:nowrap">REMARKS</td><td>String</td><td>The description of the parameter.</td></tr><tr><td style="white-space:nowrap">COLUMN_DEF</td><td>String</td><td>The default value for the parameter.</td></tr><tr><td style="white-space:nowrap">SQL_DATA_TYPE</td><td>int</td><td>Reserved in the specification.</td></tr><tr><td style="white-space:nowrap">SQL_DATETIME_SUB</td><td>int</td><td>Reserved in the specification.</td></tr><tr><td style="white-space:nowrap">CHAR_OCTET_LENGTH</td><td>int</td><td>The maximum length of binary-based and character-based columns. Null for other data types.</td></tr><tr><td style="white-space:nowrap">ORDINAL_POSITION</td><td>int</td><td>The index of the output parameter.</td></tr><tr><td style="white-space:nowrap">IS_NULLABLE</td><td>String</td><td>Whether the column can include null: YES or NO.</td></tr><tr><td style="white-space:nowrap">SPECIFIC_NAME</td><td>String</td><td>The name that uniquely identifies the stored procedure within its schema.</td></tr></table></center><p />



  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Primary Keys" desc="CData JDBC Driver for Avro - RSBAvro -  Primary Keys: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Primary Keys</h1>
       

    <div class="chapter_content" id="pg_primarykeysjdbc">

<p>You can use the getPrimaryKeys method to return information about the primary keys for Avro tables. You can restrict the results by the table name.</p>

<p>The following code example outputs the column or columns composing the primary key for the SampleTable_1 table:
<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
ResultSet rs = conn.getMetaData().getPrimaryKeys(null,null,"SampleTable_1");
while(rs.next()){
  System.out.println(rs.getString("COLUMN_NAME"));
}</pre></p>

<p>The getPrimaryKeys method returns the following columns:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">TABLE_CAT</td><td>String</td><td>The table catalog</td></tr><tr><td style="white-space:nowrap">TABLE_SCHEM</td><td>String</td><td>The table schema.</td></tr><tr><td style="white-space:nowrap">TABLE_NAME</td><td>String</td><td>The table name.</td></tr><tr><td style="white-space:nowrap">COLUMN_NAME</td><td>String</td><td>The column name.</td></tr><tr><td style="white-space:nowrap">KEY_SEQ</td><td>short</td><td>The sequence number, or column index starting from 1, within the foreign key.</td></tr><tr><td style="white-space:nowrap">PK_NAME</td><td>String</td><td>The primary key name.</td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Connection Properties" desc="CData JDBC Driver for Avro - RSBAvro -  Connection Properties: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Connection Properties</h1>
       

    <div class="chapter_content" id="pg_connmetadatajava">

<p>The available connection properties can be retrieved with the getPropertyInfo method of the Driver class. This method returns an array with elements of type DriverPropertyInfo. 
<br/><pre lang="">String connectionString = "jdbc:URI=C:\folder\table.avro;:";

Driver driver = DriverManager.getDriver(connectionString);
Properties info = new Properties();
DriverPropertyInfo[] attr = driver.getPropertyInfo(connectionString,info);
for(int i=0;i&lt;attr.length;i++){
  System.out.println(attr[i].name);
  System.out.println(attr[i].description);
  System.out.println(attr[i].required);
  System.out.println(attr[i].value);
  String[] c = attr[i].choices;
  if(c != null) {
    for(String s: c)
      System.out.println(s);
  }
}</pre></p>

<p>The DriverPropertyInfo class has the following properties:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Property Name</b></td><td><b>Data Type</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap">Name</td><td>String</td><td>The name of the connection property.</td></tr><tr><td style="white-space:nowrap">Description</td><td>String</td><td>The description for the connection property.</td></tr><tr><td style="white-space:nowrap">Required</td><td>boolean</td><td>Whether the connection property must be set to connect to Avro.</td></tr><tr><td style="white-space:nowrap">Choices</td><td>String[]</td><td>An array of the allowed values for the connection property.</td></tr><tr><td style="white-space:nowrap">Value</td><td>String</td><td>The current value of the connection property or the default value if one is not set by the user.</td></tr></table></center><p />

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Result Sets" desc="CData JDBC Driver for Avro - RSBAvro -  Result Sets: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Result Sets</h1>
       

    <div class="chapter_content" id="pg_resultsetmetadatajdbc">

<p>You can use ResultSetMetaData to retrieve metadata about the results of a query. 
</p>

<p>The query can contain any of the following:
<ul><li>Aliases</li><li>Fully qualified names</li><li>Generated columns</li></ul></p>

<p>You can instantiate a ResultSetMetaData object by invoking the getMetaData method of the Statement class. A ResultSetMetaData instance is populated with data after the statement has been executed. The following query prints out the columns in the result of the query:
<br/><pre lang="">String connectionString = "jdbc:avro:URI=C:\folder\table.avro;";

Connection conn = DriverManager.getConnection(connectionString);
PreparedStatement pstmt = conn.prepareStatement("SELECT Id, Column1 AS My_Column1, GETDATE() FROM SampleTable_1 WHERE Column2 = 'Bob'");
pstmt.executeQuery();
ResultSetMetaData rs = pstmt.getMetaData();
for(int i=1;i&lt;=rs.getColumnCount();i++) {
  System.out.println(rs.getColumnName(i));
}</pre>


</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Advanced Features" desc="CData JDBC Driver for Avro - RSBAvro - Advanced Features: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Advanced Features</h1>
       

    <div class="chapter_content" id="pg_advancedfeatures">

<p>This section details a selection of advanced features of the Avro driver.

</p>

<p>
<h2>User Defined Views</h2>
 </p>

<p>The driver allows you to define virtual tables, called <i>user defined views</i>, whose contents are decided by a pre-configured query.  
These views are useful when you cannot directly control
queries being issued to the drivers. See <a href="#pg_userviews">User Defined Views</a> for an overview of creating and configuring custom views.


<h2>SSL Configuration</h2>
</p>

<p>Use <a href="#pg_advancedssl">SSL Configuration</a> to adjust how driver handles TLS/SSL certificate negotiations. You can choose from various certificate formats; 
see the <u>SSLServerCert</u> property under "Connection String Options" for more information.</p>

<p>
<h2>Firewall and Proxy</h2>
</p>

<p>Configure the driver for compliance with <a href="#pg_advancedproxy">Firewall and Proxy</a>, including Windows proxies and HTTP proxies. You can also set up tunnel connections.</p>

<p>

<h2>JDBC Remoting</h2>
</p>

<p>Configure <a href="#pg_remotingintroj">JDBC Remoting</a> to connect to the driver from remote machines. You can choose between remoting via CLI and using a configuration file. 





</p>

<p>
<h2>Caching Data</h2>
</p>

<p><a href="#pg_caching">Caching Data</a> enables faster access to data and reduces the number of API calls, improving performance. 
The connector supports a simple caching model where multiple connections can also share the cache over time.
When configuring the cache connection, you can specify automatic or explicit data caching. 


<h2>Query Processing</h2>
</p>

<p>The driver offloads as much of the SELECT statement processing as possible to Avro and then processes the rest of the query in memory (client-side).</p>

<p>See <a href="#pg_advancedqueryproc">Query Processing</a> for more information.


<h2>Logging</h2>
</p>

<p>See <a href="#pg_advancedlogging">Logging</a> for an overview of configuration settings that can be used to refine CData logging. For basic logging, you only need to set two 
connection properties, but there are numerous features that support more refined logging, where you can select subsets of information to be logged using the <u>LogModules</u> connection
 property. </p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  User Defined Views" desc="CData JDBC Driver for Avro - RSBAvro -  User Defined Views: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> User Defined Views</h1>
       

    <div class="chapter_content" id="pg_userviews">

<p>The CData JDBC Driver for Avro allows you to define a virtual table whose contents are decided by a pre-configured query. These are called <i>User Defined Views</i>, which  are useful in situations where you cannot directly control the query being issued to the driver, e.g. when using the driver from a tool. 

The User Defined Views can be used to define predicates that are always applied. If you specify additional predicates in the query to the view, they are combined with the query already defined as part of the view.</p>

<p>There are two ways to create user defined views:
<ul><li>Create a JSON-formatted configuration file defining the views you want. </li><li>DDL statements.</li></ul></p>

<p>

<h2>Defining Views Using a Configuration File</h2>

User Defined Views are defined in a JSON-formatted configuration file called <var>UserDefinedViews.json</var>. The driver automatically detects the views specified in this file. </p>

<p>You can also have multiple view definitions and control them using the <u>UserDefinedViews</u> connection property. When you use this property, only the specified views are seen by the driver.</p>

<p>This User Defined View configuration file is formatted as follows:
<ul><li>Each root element defines the name of a view.</li><li>Each root element contains a child element, called <b>query</b>, which contains the custom SQL query for the view.</li></ul></p>

<p>For example:
<br/><pre lang="">{
	"MyView": {
		"query": "SELECT * FROM SampleTable_1 WHERE MyColumn = 'value'"
	},
	"MyView2": {
		"query": "SELECT * FROM MyTable WHERE Id IN (1,2,3)"
	}
}</pre>

Use the <u>UserDefinedViews</u> connection property to specify the location of your JSON configuration file. For example:
<br/><pre lang="">"UserDefinedViews", "C:\\Users\\yourusername\\Desktop\\tmp\\UserDefinedViews.json"</pre>
</p>

<p>
<h2>Defining Views Using DDL Statements</h2>
</p>

<p>The driver is also capable of creating and altering the schema via DDL Statements such as CREATE LOCAL VIEW, ALTER LOCAL VIEW, and DROP LOCAL VIEW.</p>

<p>
<h3>Create a View</h3>
</p>

<p>To create a new view using DDL statements, provide the view name and query as follows:
<br/><pre lang="">CREATE LOCAL VIEW [MyViewName] AS SELECT * FROM Customers LIMIT 20;</pre></p>

<p>If no JSON file exists, the above code creates one. The view is then created in the JSON configuration file and is now discoverable. The JSON file location is specified by the <u>UserDefinedViews</u> connection property. 


<h3>Alter a View</h3>
</p>

<p>To alter an existing view, provide the name of an existing view alongside the new query you would like to use instead:
<br/><pre lang="">ALTER LOCAL VIEW [MyViewName] AS SELECT * FROM Customers WHERE TimeModified &gt; '3/1/2020';</pre></p>

<p>The view is then updated in the JSON configuration file.

<h3>Drop a View</h3>
</p>

<p>To drop an existing view, provide the name of an existing schema alongside the new query you would like to use instead.
<br/><pre lang="">DROP LOCAL VIEW [MyViewName]</pre></p>

<p>This removes the view from the JSON configuration file. It can no longer be queried.
</p>

<p>
<h2>Schema for User Defined Views</h2>

User Defined Views are exposed in the <b>UserViews</b> schema by default. This is done to avoid the view's name clashing with an actual entity in the data model. You can change the name of the schema used for UserViews by setting the <u>UserViewsSchemaName</u> property.



<h2>Working with User Defined Views</h2>

For example, a SQL statement with a User Defined View called <var>UserViews.RCustomers</var> only lists customers in Raleigh:

<br/><pre lang="">SELECT * FROM Customers WHERE City = 'Raleigh';</pre>

An example of a query to the driver:

<br/><pre lang="">SELECT * FROM UserViews.RCustomers WHERE Status = 'Active';</pre> 

Resulting in the effective query to the source:

<br/><pre lang="">SELECT * FROM Customers WHERE City = 'Raleigh' AND Status = 'Active';</pre>

That is a very simple example of a query to a User Defined View that is effectively a combination of the view query and the view definition. It is possible to compose these queries in much more complex patterns. All SQL operations are allowed in both queries and are combined when appropriate.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  SSL Configuration" desc="CData JDBC Driver for Avro - RSBAvro -  SSL Configuration: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> SSL Configuration</h1>
       

    <div class="chapter_content" id="pg_advancedssl">

<p>
<h2>Customizing the SSL Configuration</h2>

</p>

<p>By default, the driver attempts to negotiate SSL/TLS by checking the server's certificate against the system's trusted certificate store.</p>

<p>To specify another certificate, see the <u>SSLServerCert</u> property for the available formats to do so. </p>

<p>
<h2>Client SSL Certificates</h2>
</p>

<p>The Avro driver also supports setting client certificates. Set the following to connect using a client certificate.
<ul><li><u>SSLClientCert</u>: The name of the certificate store for the client certificate.</li><li><u>SSLClientCertType</u>: The type of key store containing the TLS/SSL client certificate.</li><li><u>SSLClientCertPassword</u>: The password for the TLS/SSL client certificate.</li><li><u>SSLClientCertSubject</u>: The subject of the TLS/SSL client certificate.</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Firewall and Proxy" desc="CData JDBC Driver for Avro - RSBAvro -  Firewall and Proxy: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Firewall and Proxy</h1>
       

    <div class="chapter_content" id="pg_advancedproxy">

<p>
<h2>Connecting Through a Firewall or Proxy</h2>


<h3>HTTP Proxies</h3>

</p>

<p>To connect through the Windows system proxy, you do not need to set any additional connection properties. To connect to other proxies, set <u>ProxyAutoDetect</u> to false.
</p>

<p>In addition, to authenticate to an HTTP proxy, set <u>ProxyAuthScheme</u>, <u>ProxyUser</u>, and <u>ProxyPassword</u>, in addition to <u>ProxyServer</u> and <u>ProxyPort</u>. 


<h3>Other Proxies</h3>

</p>

<p>Set the following properties: 

<ul><li>To use a proxy-based firewall, set <u>FirewallType</u>, <u>FirewallServer</u>, and <u>FirewallPort</u>.</li><li>To tunnel the connection, set <u>FirewallType</u> to TUNNEL.</li><li>To authenticate, specify <u>FirewallUser</u> and <u>FirewallPassword</u>. </li><li>To authenticate to a SOCKS proxy, additionally set <u>FirewallType</u> to SOCKS5.</li></ul></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  JDBC Remoting" desc="CData JDBC Driver for Avro - RSBAvro -  JDBC Remoting: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> JDBC Remoting</h1>
       

    <div class="chapter_content" id="pg_remotingintroj">

<p>The JDBC remoting feature allows you to connect to the JDBC driver from remote machines. The remoting feature is a daemon process that listens for database queries and responds to them. The driver supports the MySQL protocol for remoting.</p>

<p>JDBC remoting will allow any MySQL client (ODBC drivers, programming languages like PHP, Perl, Python, tools like MySQL workbench, and many other applications) to easily connect to Avro.

<h2>Configuring the Driver for Remoting</h2>
</p>

<p>Remoting can be configured through either a Command Line Interface or an INI-formatted configuration file.

<h3>Remoting via CLI</h3>
</p>

<p>The MySQL daemon can be started directly from the command line. This can be accomplish by invoking the JAR and specifying the necessary <a href="#pg_cli">CLI Options</a>.

<h3>Remoting with a Configuration File</h3>
</p>

<p>If you prefer not to provide every configuration property directly in the command line, a <a href="#pg_conf">Configuration File</a> can be defined, which will explicitly list all properties. Once defined, the daemon can be started with a single reference to this file in the CLI.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  CLI Options" desc="CData JDBC Driver for Avro - RSBAvro -  CLI Options: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> CLI Options</h1>
       

    <div class="chapter_content" id="pg_cli">

<p>You can start the MySQL daemon from the command line, as shown below:
<br/><pre lang="">java -jar cdata.jdbc.avro.jar [ options ]</pre>
The following command-line options are available:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>Option</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap"></td><td>-h, --help</td><td>Display help for available options and exit.</td></tr><tr><td style="white-space:nowrap"></td><td>-f, --config-file</td><td>The configuration file for the daemon.</td></tr><tr><td style="white-space:nowrap"></td><td>-u, --user</td><td>The user allowed to connect. Use a configuration file to configure multiple users. If a user is specified on the command line, then only that user is given access.</td></tr><tr><td style="white-space:nowrap"></td><td>-p, --password</td><td>The password for the user specified with the user option. If both user and password are set on the command line, the users section in the config file is ignored.</td></tr><tr><td style="white-space:nowrap"></td><td>-d, --database</td><td>The database that clients will use to connect. If multiple databases are specified in the config file, connections are allowed to only the database specified on the command line.</td></tr><tr><td style="white-space:nowrap"></td><td>-c, --connection</td><td>The connection string used to connect to the data source being surfaced.  If no connection string is specified on the command line, the connection string is read from the config file.</td></tr><tr><td style="white-space:nowrap"></td><td>-P, --port</td><td>The port number to use to listen for TCP/IP connections. The default port is 3306.</td></tr><tr><td style="white-space:nowrap"></td><td>-m, --max-connections</td><td>The maximum number of allowed TCP/IP connections. The default value is 25 connections.</td></tr><tr><td style="white-space:nowrap"></td><td>    --session-timeout</td><td>The session timeout time in seconds. The default timeout is 20 seconds.</td></tr><tr><td style="white-space:nowrap"></td><td>-t, --protocol</td><td>The protocol used for remoting. The default value is MySQL.</td></tr><tr><td style="white-space:nowrap"></td><td>-g, --logfile</td><td>The full path of the log file.</td></tr><tr><td style="white-space:nowrap"></td><td>-F, --logrotationscheme</td><td>The interval at which to truncate the logs. The options are 1 (daily in the format [MyFileName]_2016_3_21.txt), 2 (weekly in the format [MyFileName]_Week_5.txt, where 5 is the fifth week in the  year), and 3 (monthly in the format [MyFileName]_2016_3_21.txt).</td></tr><tr><td style="white-space:nowrap"></td><td>-v, --verbosity</td><td>The verbosity of the log. 1 is informational. Levels up to 5 add the following subsequent details: (2) HTTP headers,  (3) the HTTP body, (4) transport-level communication including SSL, and (5) interface commands and other data source communication.  </td></tr><tr><td style="white-space:nowrap"></td><td>    --test</td><td>The database to test the connection with. If this property is not specified, the default database is used.</td></tr><tr><td style="white-space:nowrap"></td><td>    --ssl-cert</td><td>The path to the SSL certificate.</td></tr><tr><td style="white-space:nowrap"></td><td>    --ssl-subject</td><td>The subject of the SSL certificate.</td></tr><tr><td style="white-space:nowrap"></td><td>    --ssl-password</td><td>The password of the SSL certificate.</td></tr><tr><td style="white-space:nowrap"></td><td>-n, --nodeid</td><td>Displays the NodeId of this machine.</td></tr><tr><td style="white-space:nowrap"></td><td>-l, --license</td><td>Installs the license on this machine. This option will prompt you for the type of license and other details.</td></tr></table></center><p />
Options specified on the command line take precedence over options specified in the config file. You can pass in command-line options to specify a restricted subset of the options allowed in the <a href="#pg_conf">Configuration File</a>.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Configuration File" desc="CData JDBC Driver for Avro - RSBAvro -  Configuration File: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Configuration File</h1>
       

    <div class="chapter_content" id="pg_conf">

<p>You can save configuration settings for MySQL remoting in a config file. The file must be structured in the INI file format. Specify this file with the -f command-line option. The config file can have the following sections:


<h2>[mysqld]</h2>
</p>

<p>In the mysqld section, use the following properties to configure the MySQL daemon:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>Name</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap"></td><td>port</td><td>The port number to use to listen for TCP/IP connections. The default port is 3306.</td></tr><tr><td style="white-space:nowrap"></td><td>max-connections</td><td>The maximum number of allowed TCP/IP connections. 25 is the default.</td></tr><tr><td style="white-space:nowrap"></td><td>session-timeout</td><td>The session timeout time in seconds. The default timeout is 20 seconds.</td></tr><tr><td style="white-space:nowrap"></td><td>logfile</td><td>The full path of the log file.</td></tr><tr><td style="white-space:nowrap"></td><td>verbosity</td><td>The verbosity of the log. 1 is informational. Levels up to 5 add the following subsequent details: (2) HTTP headers,  (3) the HTTP body, (4) transport-level communication including SSL, and (5) interface commands and other data source communication.</td></tr><tr><td style="white-space:nowrap"></td><td>logrotationscheme</td><td>The interval at which to truncate the logs. The options are 1 (daily in the format [MyFileName]_2016_3_21.txt), 2 (weekly in the format [MyFileName]_Week_5.txt, where 5 is the fifth week in the  year), and 3 (monthly in the format [MyFileName]_2016_3_21.txt).

<p>The default is 2.</p>
</td></tr><tr><td style="white-space:nowrap"></td><td>ssl-cert</td><td>The path to the SSL certificate.</td></tr><tr><td style="white-space:nowrap"></td><td>ssl-subject</td><td>The subject of the SSL certificate.</td></tr><tr><td style="white-space:nowrap"></td><td>ssl-password</td><td>The password of the SSL certificate.</td></tr></table></center><p />


<h2>[databases]</h2>
</p>

<p>In the databases section, define keys that map the MySQL database to Avro connection strings. Clients connect to the MySQL database defined here.  To connect to Avro, the driver uses the connection string that corresponds to this key. 
<br/><pre lang="">[databases]
Avro = "URI=C:\folder\table.avro;"</pre>


<h2>[users]</h2>
</p>

<p>In the users section, define the usernames and passwords of the users of the server. If the acl section is not defined, all users have access to all databases.


<h2>[mysql_vars]</h2>
</p>

<p>In the mysql_vars section, define system variables for the MySQL server. The standard variables are supported. Below are several examples:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"></td><td><b>Name</b></td><td><b>Description</b></td></tr><tr><td style="white-space:nowrap"></td><td>version_comment</td><td>This value is hard-coded as CData JDBC Driver for Avro (MySQL Remoting).</td></tr><tr><td style="white-space:nowrap"></td><td>character_set_client</td><td>The character_set used in statements sent by the client.</td></tr></table></center><p />


<h2>[acl]</h2>
</p>

<p>In the acl section, allow users to access Avro databases. Databases must be defined in the databases section. Users must be defined in the users section. Use commas to separate users authorized to access the specified database.


<h2>Example Config File</h2>
</p>

<p>Below is an example config file. The example includes all properties required to configure the server. It also shows how to configure access control for several users and Avro instances.

<br/><pre lang="">[mysqld]
port = 3306
max-connections = 25
session-timeout = 20
logfile = AvroRemotingLog.txt
verbosity = 2
ssl-cert = "CData.JDBC.Avro.Remoting.pfx"
ssl-subject = &lt;subject&gt;
ssl-password = &lt;password&gt;

[databases]
Avro = "URI=C:\folder\table.avro;"
Avro_ReadOnly = "URI=C:\folder\table.avro;ReadOnly=True"

[users]
root = &lt;password&gt;
test = &lt;password&gt;

[mysql_vars]
version_comment =  "CData JDBC Driver for Avro (MySQL Remoting)"

[acl]
Avro = root
Avro_ReadOnly = root, test</pre></p>

<p>You can further restrict the allowed options by passing in options on the command line. See <a href="#pg_cli">CLI Options</a> for more information.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Caching Data" desc="CData JDBC Driver for Avro - RSBAvro -  Caching Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Caching Data</h1>
       

    <div class="chapter_content" id="pg_caching">

<p>
<h2>Caching Data</h2>

</p>

<p>Caching data provides several benefits, including faster access to data and reducing the number of API calls, which improve performance. The connector supports a simple caching model where multiple connections can also share the cache over time. You can enable and configure caching features by setting the necessary connection properties. 


<h2>Contents</h2>

</p>

<p>The sections in this chapter detail the driver's caching functionality and link to the corresponding connection properties, as well as SQL statements.  


<h3>Configuring the Cache Connection</h3>
</p>

<p><a href="#pg_workings">Configuring the Cache Connection</a> describes the properties that you can set when configuring the cache database. 


<h3>Caching Metadata</h3>
</p>

<p><a href="#pg_cachingMetadata">Caching Metadata</a> describes the <u>CacheMetadata</u> property. This property determines whether or not to cache the table metadata to a file store.


<h3>Automatically Caching Data</h3>
</p>

<p><a href="#pg_cacheAutomatically">Automatically Caching Data</a> describes how the driver automatically refreshes the cache when the <u>AutoCache</u> property is set.


<h3>Explicitly Caching Data</h3>
</p>

<p><a href="#pg_cacheExplicitly">Explicitly Caching Data</a> describes how you can decide what data is stored in the cache and when it is updated.


<h3>Data Type Mapping</h3>
</p>

<p><a href="#pg_cachedatatypemapping">Data Type Mapping</a> shows the mappings between the data types configured in the schema and the data types in the database.


  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Configuring the Cache Connection" desc="CData JDBC Driver for Avro - RSBAvro - Configuring the Cache Connection: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Configuring the Cache Connection</h1>
       

    <div class="chapter_content" id="pg_workings">

<p>
<h2>Configuring the Caching Database</h2>

</p>

<p>This section describes the properties for caching data to the persistent store of your choice. 


<h3>CacheLocation</h3>

</p>

<p>The <u>CacheLocation</u> property species the path to a file-system-based database. When caching is enabled, a file-system-based database is used by default. If <u>CacheLocation</u> is not specified, this database is stored at the path in <u>Location</u>. If neither of these connection properties are specified, the driver uses a platform-dependent default location.


<h3>CacheConnection</h3>

</p>

<p>The <u>CacheConnection</u> property specifies a database driver and the connection string to the caching database.



<h3>CacheDriver</h3>
</p>

<p>The <u>CacheDriver</u> property specifies a database driver and the connection string to the caching database.


  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Caching Metadata" desc="CData JDBC Driver for Avro - RSBAvro - Caching Metadata: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Caching Metadata</h1>
       

    <div class="chapter_content" id="pg_cachingMetadata">

<p>This section describes how to enable caching metadata and how to update the metadata cache.
</p>

<p>Before being able to query data, the connector requires relevant metadata to be retrieved. By default, metadata is cached in memory and shared across connections. But if you want to persist across processes, or if metadata requests are expensive, the solution is to cache the metadata to disk.


<h2>Enable Caching Metadata</h2>

</p>

<p>To enable caching of metadata, set <u>CacheMetadata</u> = true and see <a href="#pg_workings">Configuring the Cache Connection</a> for instructions on how to configure your connection string. The driver caches the metadata the first time it is needed and uses the metadata cache for subsequent requests.


<h2>Update the Metadata Cache</h2>

</p>

<p>Because metadata is cached, changes to metadata on the live source, for example, adding or removing a column or attribute, are not automatically reflected in the metadata cache. To get updates to the live metadata, you need to delete or drop the cached data.


<h2>Cache Metadata from Code</h2>

</p>

<p>The following code can be used to build the metadata cache. This is especially useful when using the Object-Relational Mapping Framework (for example, Hibernate).

<br/><pre lang="">Connection conn = DriverManager.getConnection("jdbc:avro:Cache Location=C:\\cdata.avro.db;AutoCache=True;URI=C:\folder\table.avro;");
DatabaseMetaData table_meta = conn.getMetaData();

ResultSet rs=table_meta.getTables(null, null, "%", null); 

while (rs.next()) {
  String tableName = rs.getString("TABLE_NAME");
  System.out.println("Cached metadata for table: "+tableName);
  ResultSet cols = table_meta.getColumns(null, null, tableName, null);
  while(rs.next()){
  }
}
System.out.println();
System.out.println("All tables cached.");
conn.close();</pre>
  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Automatically Caching Data" desc="CData JDBC Driver for Avro - RSBAvro - Automatically Caching Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Automatically Caching Data</h1>
       

    <div class="chapter_content" id="pg_cacheAutomatically">

<p>Automatically caching data is useful when you do not want to rebuild the cache for each query. When you query data for the first time, the driver automatically initializes and builds a cache in the background. When <u>AutoCache</u> = true, the driver uses the cache for subsequent query executions, resulting in faster response times.
</p>

<p> 


<h2>Configuring Automatic Caching</h2>
</p>

<p>

<h2>Caching the SampleTable_1 Table</h2>
</p>

<p>The following example caches the SampleTable_1 table in the file specified by the <u>CacheLocation</u> property of the connection string. 


<br/><pre lang="">String connectionString = "jdbc:avro:Cache Location=C:\\cache.db;" +
                          "AutoCache=true;" +
                          "URI=C:\folder\table.avro;";
Connection connection = DriverManager.getConnection(connectionString);
Statement stat = connection.createStatement();
boolean ret = stat.execute("SELECT Id, Column1 FROM SampleTable_1 WHERE Column2 = 'Bob'");
ResultSet rs=stat.getResultSet();
while(rs.next()){
  System.out.println("Read and cached the row with Id "+rs.getString("Id"));
}
connection.close();</pre>




<h2>Common Use Case</h2>
</p>

<p>A common use for automatically caching data is to improve driver performance when making repeated requests to a live data source, such as building a report or creating a visualization. With auto caching enabled, repeated requests to the same data may be executed in a short period of time, but within an allowable tolerance (CacheTolerance) of what is considered "live" data.
  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Explicitly Caching Data" desc="CData JDBC Driver for Avro - RSBAvro - Explicitly Caching Data: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Explicitly Caching Data</h1>
       

    <div class="chapter_content" id="pg_cacheExplicitly">

<p>With explicit caching (<u>AutoCache</u> = false), you decide exactly what data is cached and when to query the cache instead of the live data. Explicit caching gives you full control over the cache contents by using <a href="#pg_cache">CACHE Statements</a>. This section describes some strategies to use the caching features offered by the driver.


<h2>Creating the Cache</h2>

</p>

<p>To load data in the cache, issue the following statement.

<br/><pre lang="">CACHE SELECT * FROM tableName WHERE ...</pre>
</p>

<p>Once the statement is issued, any matching data in tableName is loaded into the corresponding table.


<h2>Updating the Cache</h2>
</p>

<p>This section describes two ways to update the cache.


<h3>Updating with the SELECT Statement</h3>

</p>

<p>The following example shows a statement that can update modified rows and add missing rows in the cached table. However, this statement does not delete extra rows that are already in the cache. This statement only merges the new rows or updates the existing rows. 


<br/><pre lang="">String cmd = "CACHE SELECT * FROM SampleTable_1 WHERE Column2 = 'Bob'", connection";
stat.execute(cmd);
connection.close();</pre>


<h3>Updating with the TRUNCATE Statement</h3>

</p>

<p>The following example shows a statement that can update modified rows and add missing rows in the cached table. This statement can also delete rows in the cache table that are not present in the live data source.


<br/><pre lang="">String cmd = "CACHE WITH TRUNCATE SELECT * FROM SampleTable_1 WHERE Column2 = 'Bob'";
stat.execute(cmd);
connection.close();</pre>



<h2>Query the Data in Online or Offline Mode</h2>
</p>

<p>This section describes how to query the data in online or offline mode.


<h3>Online: Select Cached Tables</h3>
</p>

<p>You can use the tableName#CACHE syntax to explicitly execute queries to the cache while still online, as shown in the following example.
<br/><pre lang="plain">SELECT * FROM SampleTable_1#CACHE</pre>


<h3>Offline: Select Cached Tables</h3>
</p>

<p>With <u>Offline</u> = true, SELECT statements always execute against the local cache database, regardless of whether you explicitly specify the cached table or not. Modification of the cache is disabled in <u>Offline</u> mode to prevent accidentally updating only the cached data. Executing a DELETE/UPDATE/INSERT statement while in <u>Offline</u> mode results in an exception. 
</p>

<p>The following example selects from the local cache but not the live data source because <u>Offline</u> = true.


<br/><pre lang="">Connection connection = DriverManager.getConnection("jdbc:avro:URI=C:\folder\table.avro;Offline=true;Cache Location=C:\\cache.db;");
Statement stat = connection.createStatement();
String query = "SELECT * FROM SampleTable_1 WHERE Column2='Bob' ORDER BY Column1 ASC";
stat.execute(query);
connection.close();</pre>


<h2>Delete Data from the Cache</h2>

</p>

<p>You can delete data from the cache by building a direct connection to the database. Note that the driver does not support manually deleting data from the cache.



<h2>Common Use Case</h2>

</p>

<p>A common use for caching is to have an application always query the cached data and only update the cache at set intervals, such as once every day or every two hours. There are two ways in which this can be implemented:

<ul><li><u>AutoCache</u> = false and <u>Offline</u> = false. All queries issued by the application explicitly reference the tableName#CACHE table. When the cache needs to be updated, the application executes a tableName#CACHE ... statement to bring the cached data up to date.</li><li><u>Offline</u> = true. Caching is transparent to the application. All queries are executed against the table as normal, so most application code does not need to be aware that caching is done. To update the cached data, simply create a separate connection with <u>Offline</u> = false and execute a tableName#CACHE ... statement.</li></ul>
  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Data Type Mapping" desc="CData JDBC Driver for Avro - RSBAvro - Data Type Mapping: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Data Type Mapping</h1>
       

    <div class="chapter_content" id="pg_cachedatatypemapping">

<p>The driver maps types from the data source to the corresponding data type available in the chosen cache database. The following table shows the mappings between the data types configured in the schema and the data types in the database. Some schema types have synonyms which are all listed in the <b>Schema</b> column.


<h2>Data Type Mapping</h2>

</p>

<p><b>Note:</b> String columns can map to different data types depending on their length.
</p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Schema</b>                        </td><td><b>.NET</b>         </td><td><b>JDBC</b>           </td><td><b>SQL Server</b> </td><td><b>Derby</b>  </td><td><b>MySQL</b>  </td><td><b>Oracle</b> </td><td><b>SQLite</b>   </td><td><b>Access</b></td></tr><tr><td style="white-space:nowrap">int, integer, int32                  </td><td>Int32               </td><td>int                   </td><td>int               </td><td>INTEGER       </td><td>INT           </td><td>NUMBER        </td><td>integer         </td><td>LONG</td></tr><tr><td style="white-space:nowrap">smallint, short, int16               </td><td>Int16               </td><td>short                 </td><td>smallint          </td><td>SMALLINT      </td><td>SMALLINT      </td><td>NUMBER        </td><td>integer         </td><td>SHORT</td></tr><tr><td style="white-space:nowrap">double, float, real                  </td><td>Double              </td><td>double                </td><td>float             </td><td>DOUBLE        </td><td>DOUBLE        </td><td>NUMBER        </td><td>double          </td><td>DOUBLE</td></tr><tr><td style="white-space:nowrap">date                                 </td><td>DateTime            </td><td>java.sql.Date         </td><td>date              </td><td>DATE          </td><td>DATE          </td><td>DATE          </td><td>date            </td><td>DATETIME</td></tr><tr><td style="white-space:nowrap">datetime, timestamp                  </td><td>DateTime            </td><td>java.sql.Date         </td><td>datetime          </td><td>TIMESTAMP     </td><td>DATETIME      </td><td>TIMESTAMP     </td><td>datetime        </td><td>DATETIME</td></tr><tr><td style="white-space:nowrap">time, timespan                       </td><td>TimeSpan            </td><td>java.sql.Time         </td><td>time              </td><td>TIME          </td><td>TIME          </td><td>TIMESTAMP     </td><td>datetime        </td><td>DATETIME</td></tr><tr><td style="white-space:nowrap">string, varchar                      </td><td>String              </td><td>java.lang.String      </td><td>If length &gt; 4000: nvarchar(max), Otherwise: nvarchar(length)</td><td>If length &gt; 32672: LONG VARCHAR, Otherwise VARCHAR(length)</td><td>If length &gt; 255: LONGTEXT, Otherwise: VARCHAR(length)</td><td>If length &gt; 4000: CLOB, Otherwise: VARCHAR2(length)</td><td>nvarchar(length)</td><td>If length &gt; 255: LONGTEXT, Otherwise: VARCHAR(length)</td></tr><tr><td style="white-space:nowrap">long, int64, bigint                  </td><td>Int64               </td><td>long                  </td><td>bigint            </td><td>BIGINT        </td><td>BIGINT        </td><td>NUMBER        </td><td>bigint          </td><td>LONG</td></tr><tr><td style="white-space:nowrap">boolean, bool                        </td><td>Boolean             </td><td>boolean               </td><td>tinyint           </td><td>SMALLINT      </td><td>BIT           </td><td>NUMBER        </td><td>tinyint         </td><td>BIT</td></tr><tr><td style="white-space:nowrap">decimal, numeric                     </td><td>Decimal             </td><td>java.math.BigDecimal  </td><td>decimal           </td><td>DECIMAL       </td><td>DECIMAL       </td><td>DECIMAL       </td><td>decimal         </td><td>CURRENCY</td></tr><tr><td style="white-space:nowrap">uuid                                 </td><td>Guid                </td><td>java.util.UUID        </td><td>nvarchar(length) </td><td>VARCHAR(length)</td><td>VARCHAR(length) </td><td>VARCHAR2(length)</td><td>nvarchar(length) </td><td>VARCHAR(length)</td></tr><tr><td style="white-space:nowrap">binary, varbinary, longvarbinary     </td><td>byte[]              </td><td>byte[]                </td><td>binary(1000) or varbinary(max) after SQL Server 2000, image otherwise </td><td>BLOB </td><td>LONGBLOB </td><td>BLOB </td><td>BLOB </td><td>LONGBINARY</td></tr></table></center><p />

  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Query Processing" desc="CData JDBC Driver for Avro - RSBAvro -  Query Processing: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Query Processing</h1>
       

    <div class="chapter_content" id="pg_advancedqueryproc">

<p>
<h2>Query Processing</h2>

CData has a client-side SQL engine built into the driver library. This enables support for the full capabilities that SQL-92 offers, including filters, aggregations, functions, etc. </p>

<p>
For sources that do not support SQL-92, the driver offloads as much of SQL statement processing as possible to Avro and then processes the rest of the query in memory (client-side). This results in optimal performance.</p>

<p> 

For data sources with limited query capabilities, the driver handles transformations of the SQL query to make it simpler for the driver.
The goal is to make smart decisions based on the query capabilities of the data source to push down as much of the computation as possible. The Avro Query Evaluation component examines SQL queries and returns information indicating what parts of the query the driver is not capable of executing natively.</p>

<p>
The Avro Query Slicer component is used in more specific cases to separate a single query into multiple independent queries. The client-side Query Engine makes decisions about simplifying queries, breaking queries into multiple queries, and pushing down or computing aggregations on the client-side while minimizing the size of the result set.</p>

<p>
There's a significant trade-off in evaluating queries, even partially, client-side. There are always queries that are impossible to execute efficiently in this model, and some can be particularly expensive to compute in this manner. CData always pushes down as much of the query as is feasible for the data source to generate the most efficient query possible and provide the most flexible query capabilities.</p>

<p>

<h2>More Information</h2>


For a full discussion of how CData handles query processing, see <a href="https://www.cdata.com/blog/data_connectivity/20181213-cdata-architecture-query-execution">CData Architecture: Query Execution</a>.
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Logging" desc="CData JDBC Driver for Avro - RSBAvro -  Logging: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Logging</h1>
       

    <div class="chapter_content" id="pg_advancedlogging">

<p>Capturing driver logging can be very helpful when diagnosing error messages or other unexpected behavior.

<h2>Basic Logging</h2>
</p>

<p>You will simply need to set two connection properties to begin capturing driver logging.
<ul><li><u>Logfile</u>: A filepath which designates the name and location of the log file. </li><li><u>Verbosity</u>: This is a numerical value (1-5) that determines the amount of detail in the log. See the page in the Connection Properties section for an explanation of the five levels.</li><li><u>MaxLogFileSize</u>: When the limit is hit, a new log is created in the same folder with the date and time appended to the end. The default limit is 100 MB. Values lower than 100 kB will use 100 kB as the value instead.</li><li><u>MaxLogFileCount</u>: A string specifying the maximum file count of log files. When the limit is hit, a new log is created in the same folder with the date and time appended to the end and the oldest log file will be deleted. Minimum supported value is 2. A value of 0 or a negative value indicates no limit on the count.</li></ul></p>

<p>Once this property is set, the driver will populate the log file as it carries out various tasks, such as when authentication is performed or queries are executed. If the specified file doesn't already exist, it will be created.</p>

<p>
<h2>Log Verbosity</h2>
</p>

<p>The verbosity level determines the amount of detail that the driver reports to the <u>Logfile</u>. <u>Verbosity</u> levels from 1 to 5 are supported. These are described in the following list:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">1</td><td>Setting <u>Verbosity</u> to 1 will log the query, the number of rows returned by it, the start of execution and the time taken, and any errors.</td></tr><tr><td style="white-space:nowrap">2</td><td>Setting <u>Verbosity</u> to 2 will log everything included in <u>Verbosity</u> 1, cache queries, and additional information about the request.</td></tr><tr><td style="white-space:nowrap">3</td><td>Setting <u>Verbosity</u> to 3 will additionally log HTTP headers, as well as the body of the request and the response.</td></tr><tr><td style="white-space:nowrap">4</td><td>Setting <u>Verbosity</u> to 4 will additionally log transport-level communication with the data source. This includes SSL negotiation.</td></tr><tr><td style="white-space:nowrap">5</td><td>Setting <u>Verbosity</u> to 5 will additionally log communication with the data source and additional details that may be helpful in troubleshooting problems. This includes interface commands.</td></tr></table></center><p />
</p>

<p>The <u>Verbosity</u> should not be set to greater than 1 for normal operation. Substantial amounts of data can be logged at higher verbosities, which can delay execution times.</p>

<p>To refine the logged content further by showing/hiding specific categories of information, see <u>LogModules</u>.


<h2>Sensitive Data</h2>


Verbosity levels 3 and higher may capture information that you do not want shared outside of your organization. The following lists information of concern for each level:</p>

<p><ul><li>Verbosity 3: The full body of the request and the response, which includes all the data returned by the driver</li><li>Verbosity 4: SSL certificates</li><li>Verbosity 5: Any extra transfer data not included at Verbosity 3, such as non human-readable binary transfer data</li></ul>
</p>

<p><b>Best Practices for Data Security</b></p>

<p>Although we mask sensitive values, such as passwords, in the connection string and any request in the log, it is always best practice to review the logs for any sensitive information before sharing outside your organization.</p>

<p>
<h2>Java Logging</h2>
</p>

<p>When Java logging is enabled in <u>Logfile</u>, the <u>Verbosity</u> will instead map to the following logging levels.
<ul><li>0: Level.WARNING</li><li>1: Level.INFO</li><li>2: Level.CONFIG</li><li>3: Level.FINE</li><li>4: Level.FINER</li><li>5: Level.FINEST</li></ul></p>

<p>
<h2>Advanced Logging</h2>
</p>

<p>You may want to refine the exact information that is recorded to the log file. This can be accomplished using the <u>LogModules</u> property.</p>

<p>This property allows you to filter the logging using a semicolon-separated list of logging modules.</p>

<p>All modules are four characters long. <b>Please note that modules containing three letters have a required trailing blank space</b>. The available modules are:
<ul><li><b>EXEC</b>: Query Execution. Includes execution messages for original SQL queries, parsed SQL queries, and normalized SQL queries. Query and page success/failure messages appear here as well.</li><li><b>INFO</b>: General Information. Includes the connection string, driver version (build number), and initial connection messages.</li><li><b>HTTP</b>: HTTP Protocol messages. Includes HTTP requests/responses (including POST messages), as well as Kerberos related messages.</li><li><b>SSL </b>: SSL certificate messages.</li><li><b>OAUT</b>: OAuth related failure/success messages.</li><li><b>SQL </b>: Includes SQL transactions, SQL bulk transfer messages, and SQL result set messages.</li><li><b>META</b>: Metadata cache and schema messages.</li><li><b>TCP </b>: Incoming and Ongoing raw bytes on TCP transport layer messages.</li></ul>
An example value for this property would be.
<br/><pre lang="">LogModules=INFO;EXEC;SSL ;SQL ;META;</pre></p>

<p>Note that these modules refine the information as it is pulled after taking the <u>Verbosity</u> into account.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SQL Compliance" desc="CData JDBC Driver for Avro - RSBAvro - SQL Compliance: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SQL Compliance</h1>
       

    <div class="chapter_content" id="pg_overview">

<p>




<h2>SELECT Statements</h2>
</p>

<p></p>

<p>See <a href="#pg_select">SELECT Statements</a> for a syntax reference and examples. </p>

<p>See <a href="#pg_datamodel">Data Model</a> for information on the capabilities of the Avro API. 


<h2>CACHE Statements</h2>
</p>

<p>CACHE statements allow granular control over the driver's caching functionality. For a syntax reference and examples, see <a href="#pg_cache">CACHE Statements</a>.</p>

<p>For more information on the caching feature, see <a href="#pg_caching">Caching Data</a>. 

<h2>EXECUTE Statements</h2>
</p>

<p>Use EXECUTE or EXEC statements to execute stored procedures. See <a href="#pg_exec">EXECUTE Statements</a> for a syntax reference and examples.

<h2>Names and Quoting</h2>
</p>

<p><ul><li>Table and column names are considered identifier names; as such, they are restricted to the following characters: [A-Z, a-z, 0-9, _:@]. 
  </li><li>To use a table or column name with characters not listed above, the name must be quoted using square brackets 
      ([name]) in any SQL statement.
  </li><li>Parameter names can optionally start with the @ symbol (e.g., @p1 or @CustomerName) and cannot be quoted. 
  </li><li>Strings must be quoted using single quotes (e.g., 'John Doe').</li></ul>



</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  SQL Functions" desc="CData JDBC Driver for Avro - RSBAvro -  SQL Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> SQL Functions</h1>
       

    <div class="chapter_content" id="pg_sqlfunctions">

<p>The driver provides functions that are similar to those that are available with most standard databases. These functions are implemented in the CData provider engine and thus are available across all data sources with the same consistent API. Three categories of functions are available: string, date, and math.</p>

<p>The driver interprets all SQL function inputs as either strings or column identifiers, so you need to escape all literals as strings, with single quotes. For example, contrast the SQL Server syntax and driver syntax for the <b>DATENAME</b> function: 
  <ul><li><b>SQL Server</b>: <br/><pre lang="">SELECT DATENAME(yy,GETDATE())</pre>
  </li><li><b>driver</b>: <br/><pre lang="">SELECT DATENAME('yy',GETDATE())</pre>
  </li></ul>

</p>

<p>
<h2>String Functions</h2>
</p>

<p>These functions perform string manipulations and return a string value. See <a href="#pg_sqlstringfunctions">STRING Functions</a> for more details.
</p>

<p>
<h2>Date Functions</h2>
</p>

<p>These functions perform date and date time manipulations. See <a href="#pg_sqldatefunctions">DATE Functions</a> for more details.
</p>

<p>
<h2>Math Functions</h2>
</p>

<p>These functions provide mathematical operations. See <a href="#pg_sqlmathfunctions">MATH Functions</a> for more details.
</p>

<p></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  STRING Functions" desc="CData JDBC Driver for Avro - RSBAvro -  STRING Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> STRING Functions</h1>
       

    <div class="chapter_content" id="pg_sqlstringfunctions">

<p>
<h2>ASCII(character_expression)</h2>
</p>

<p>                Returns the ASCII code value of the left-most character of the character expression.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ASCII('0');
                      --  Result: 48
                    </pre>
                
<h2>CHAR(integer_expression)</h2>
</p>

<p>                Converts the integer ASCII code to the corresponding character.</p>

<p>                    <ul><li><b>integer_expression</b>: The integer from 0 through 255.
                    </li></ul>
                    <br/><pre lang="">                      SELECT CHAR(48);
                      -- Result: '0'
                    </pre>
                
<h2>CHARINDEX(expressionToFind ,expressionToSearch [,start_location ])</h2>
</p>

<p>                Returns the starting position of the specified expression in the character string.</p>

<p>                    <ul><li><b>expressionToFind</b>: The character expression to find.
                        </li><li><b>expressionToSearch</b>: The character expression, typically a column, to search.
                        </li><li><b>start_location</b>: The optional character position to start searching for expressionToFind in expressionToSearch.
                    </li></ul>
                    <br/><pre lang="">                      SELECT CHARINDEX('456', '0123456');
                      -- Result: 4

                      SELECT CHARINDEX('456', '0123456', 5);
                      -- Result: -1
                    </pre>
				
<h2>CHAR_LENGTH(character_expression),</h2>
</p>

<p>				Returns the number of UTF-8 characters present in the expression.</p>

<p>					<ul><li><b>character_expression</b>: The set of characters to be be evaluated for length.
					</li></ul>
					
				<br/><pre lang="">				 SELECT CHAR_LENGTH('sample text') FROM Account LIMIT 1
				 -- Result: 11			
				</pre>
                
<h2>CONCAT(string_value1, string_value2 [, string_valueN])</h2>
</p>

<p>                Returns the string that is the concatenation of two or more string values.</p>

<p>                    <ul><li><b>string_value1</b>: The first string to be concatenated.
                        </li><li><b>string_value2</b>: The second string to be concatenated.
                        </li><li><b>*</b>: The optional additional strings to be concatenated.
                    </li></ul>
                    <br/><pre lang="">                      SELECT CONCAT('Hello, ', 'world!');
                      -- Result: 'Hello, world!'
                    </pre>
                
<h2>CONTAINS(expressionToSearch, expressionToFind)</h2>
</p>

<p>                Returns 1 if expressionToFind is found within expressionToSearch; otherwise, 0.</p>

<p>                    <ul><li><b>expressionToSearch</b>: The character expression, typically a column, to search.
                        </li><li><b>expressionToFind</b>: The character expression to find.
                    </li></ul>
                    <br/><pre lang="">                      SELECT CONTAINS('0123456', '456');
                      -- Result: 1

                      SELECT CONTAINS('0123456', 'Not a number');
                      -- Result: 0
                    </pre>
                
<h2>ENDSWITH(character_expression, character_suffix)</h2>
</p>

<p>                Returns 1 if character_expression ends with character_suffix; otherwise, 0.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                        </li><li><b>character_suffix</b>: The character suffix to search for.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ENDSWITH('0123456', '456');
                      -- Result: 1

                      SELECT ENDSWITH('0123456', '012');
                      -- Result: 0
                    </pre>
				
<h2>FILESIZE(uri)</h2>
</p>

<p>				Returns the number of bytes present in the file at the specified file path.
					<ul><li><b>uri</b>: The path of the file to read the size from.
					</li></ul>
				<br/><pre lang="">				SELECT FILESIZE('C:/Users/User1/Desktop/myfile.txt');
				-- Result: 23684
				</pre>
                
<h2>FORMAT(value [, parseFormat], format )</h2>
</p>

<p>                Returns the value formatted with the specified format.</p>

<p>                    <ul><li><b>value</b>: The string to format.
                        </li><li><b>format</b>: The string specifying the output syntax of the date or numeric format.
                        </li><li><b>parseFormat</b>: The string specifying the input syntax of the date value. Not applicable to numeric types.
                    </li></ul>
                    <br/><pre lang="">                      SELECT FORMAT(12.34, '#');
                      -- Result: 12

                      SELECT FORMAT(12.34, '#.###');
                      -- Result: 12.34

                      SELECT FORMAT(1234, '0.000E0');
                      -- Result: 1.234E3
                      
                      SELECT FORMAT('2019/01/01', 'yyyy-MM-dd');
                      -- Result: 2019-01-01
                      
                      SELECT FORMAT('20190101', 'yyyyMMdd', 'yyyy-MM-dd');
                      -- Result: '2019-01-01'
                    </pre>
                
<h2>HASHBYTES(algorithm, value)</h2>
</p>

<p>                Returns the hash of the input value as a byte array using the given algorithm. The supported algorithms are MD5, SHA1, SHA2_256, SHA2_512, SHA3_224, SHA3_256, SHA3_384, and SHA3_512.</p>

<p>                    <ul><li><b>algorithm</b>: The algorithm to use for hashing. Must be one of MD5, SHA1, SHA2_256, SHA2_512, SHA3_224, SHA3_256, SHA3_384, or SHA3_512.
                        </li><li><b>value</b>: The value to hash. Must be either a string or byte array.
                    </li></ul>
                    <br/><pre lang="">                      SELECT HASHBYTES('MD5', 'Test');
                      -- Result (byte array): 0x0CBC6611F5540BD0809A388DC95A615B
                    </pre>  
                
<h2>INDEXOF(expressionToSearch, expressionToFind [,start_location ])</h2>
</p>

<p>                Returns the starting position of the specified expression in the character string.</p>

<p>                    <ul><li><b>expressionToSearch</b>: The character expression, typically a column, to search.
                        </li><li><b>expressionToFind</b>: The character expression to find.
                        </li><li><b>start_location</b>: The optional character position to start searching for expressionToFind in expressionToSearch.
                    </li></ul>
                    <br/><pre lang="">                      SELECT INDEXOF('0123456', '456');
                      -- Result: 4

                      SELECT INDEXOF('0123456', '456', 5);
                      -- Result: -1
                    </pre>
				
                
<h2>JSON_EXTRACT(json, jsonpath)</h2>
</p>

<p>                Selects any value in a JSON array or object. The path to the array is specified in the jsonpath argument.  Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to extract.
                        </li><li><b>jsonpath</b>: The XPath used to select the nodes. The JSONPath must be a string constant. The values of the nodes selected will be returned in a token-separated list.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_EXTRACT('{"test": {"data": 1}}', '$.test');
                      -- Result: '{"data":1}'

                      SELECT JSON_EXTRACT('{"test": {"data": 1}}', '$.test.data');
                      -- Result: 1

                      SELECT JSON_EXTRACT('{"test": {"data": [1, 2, 3]}}', '$.test.data[1]');
                      -- Result: 2
                    </pre>
				
                
<h2>LEFT ( character_expression , integer_expression )</h2>
</p>

<p>                Returns the specified number of characters counting from the left of the specified string.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                        </li><li><b>integer_expression</b>: The positive integer that specifies how many characters will be returned counting from the left of character_expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LEFT('1234567890', 3);
                      -- Result: '123'
                    </pre>
                
<h2>LEN(string_expression)</h2>
</p>

<p>                Returns the number of characters of the specified string expression.</p>

<p>                    <ul><li><b>string_expression</b>: The string expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LEN('12345');
                      -- Result: 5
                    </pre>
				
<h2>LOCATE(substring,string)</h2>
</p>

<p>				Returns an integer representing how many characters into the string the substring appears.
					<ul><li><b>substring</b>: The substring to find inside larger string.
						</li><li><b>string</b>: The larger string that will be searched for the substring.
					</li></ul>
				<br/><pre lang="">				SELECT LOCATE('sample','XXXXXsampleXXXXX');
				-- Result: 6
				</pre>
                
<h2>LOWER ( character_expression )</h2>
</p>

<p>                Returns the character expression with the uppercase character data converted to lowercase.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LOWER('MIXED case');
                      -- Result: 'mixed case'
                    </pre>
                
<h2>LTRIM(character_expression)</h2>
</p>

<p>                Returns the character expression with leading blanks removed.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LTRIM('     trimmed');
                      -- Result: 'trimmed'
                    </pre>
                
<h2>MASK(string_expression, mask_character [, start_index [, end_index ]])</h2>
</p>

<p>                Replaces the characters between start_index and end_index with the mask_character within the string.</p>

<p>                    <ul><li><b>string_expression</b>: The string expression to be searched.
                        </li><li><b>mask_character</b>: The character to mask with.
                        </li><li><b>start_index</b>: The optional number of characters to leave unmasked at beginning of string. Defaults to 0.
                        </li><li><b>end_index</b>: The optional number of characters to leave unmasked at end of string. Defaults to 0.
                    </li></ul>
                    <br/><pre lang="">                        SELECT MASK('1234567890','*',);
                        -- Result: '**********'
                        SELECT MASK('1234567890','*', 4);
                        -- Result: '1234******'
                        SELECT MASK('1234567890','*', 4, 2);
                        -- Result: '1234****90'  
                    </pre>
                
<h2>NCHAR(integer_expression)</h2>
</p>

<p>                Returns the Unicode character with the specified integer code as defined by the Unicode standard.</p>

<p>                    <ul><li><b>integer_expression</b>: The integer from 0 through 255. 
                    </li></ul>
				
<h2>OCTET_LENGTH(character_expression),</h2>
</p>

<p>				Returns the number of bytes present in the expression.</p>

<p>					<ul><li><b>character_expression</b>: The set of characters to be be evaluated.
					</li></ul>
					
				<br/><pre lang="">				 SELECT OCTET_LENGTH('text') FROM Account LIMIT 1
				 -- Result: 4
				</pre>
                
<h2>PATINDEX(pattern, expression)</h2>
</p>

<p>                Returns the starting position of the first occurrence of the pattern in the expression. Returns 0 if the pattern is not found.</p>

<p>                    <ul><li><b>pattern</b>: The character expression that contains the sequence to be found. The wild-card character % can be used only at the start or end of the expression.
                        </li><li><b>expression</b>: The expression, typically a column, to search for the pattern.
                    </li></ul>
                    <br/><pre lang="">                      SELECT PATINDEX('123%', '1234567890');
                      -- Result: 1

                      SELECT PATINDEX('%890', '1234567890');
                      -- Result: 8

                      SELECT PATINDEX('%456%', '1234567890');
                      -- Result: 4
                    </pre>
                
<h2>POSITION(expressionToFind IN expressionToSearch)</h2>
</p>

<p>                Returns the starting position of the specified expression in the character string.</p>

<p>                    <ul><li><b>expressionToFind</b>: The character expression to find.
                        </li><li><b>expressionToSearch</b>: The character expression, typically a column, to search.
                    </li></ul>
                    <br/><pre lang="">                      SELECT POSITION('456' IN '123456');
                      -- Result: 4

                      SELECT POSITION('x' IN '123456');
                      -- Result: 0
                    </pre>
                
<h2>QUOTENAME(character_string [, quote_character])</h2>
</p>

<p>                Returns a valid SQL Server-delimited identifier by adding the necessary delimiters to the specified Unicode string.</p>

<p>                    <ul><li><b>character_string</b>: The string of Unicode character data. The string is limited to 128 characters. Inputs greater than 128 characters return null.
                        </li><li><b>quote_character</b>: The optional single character to be used as the delimiter. Can be a single quotation mark, a left or right bracket, or a double quotation mark. If quote_character is not specified brackets are used.
                    </li></ul>
                    <br/><pre lang="">                      SELECT QUOTENAME('table_name');
                      -- Result: '[table_name]'

                      SELECT QUOTENAME('table_name', '"');
                      -- Result: '"table_name"'

                      SELECT QUOTENAME('table_name', '[');
                      -- Result: '[table_name]'
                    </pre>
                
<h2>REPLACE(string_expression, string_pattern, string_replacement)</h2>
</p>

<p>                Replaces all occurrences of a string with another string.</p>

<p>                    <ul><li><b>string_expression</b>: The string expression to be searched. Can be a character or binary data type.
                        </li><li><b>string_pattern</b>: The substring to be found. Cannot be an empty string.
                        </li><li><b>string_replacement</b>: The replacement string.
                    </li></ul>
                    <br/><pre lang="">                      SELECT REPLACE('1234567890', '456', '|');
                      -- Result: '123|7890'

                      SELECT REPLACE('123123123', '123', '.');
                      -- Result: '...'

                      SELECT REPLACE('1234567890', 'a', 'b');
                      -- Result: '1234567890'
                    </pre>
                
<h2>REPLICATE ( string_expression ,integer_expression ) </h2>
</p>

<p>                Repeats the string value the specified number of times.</p>

<p>                    <ul><li><b>string_expression</b>: The string to replicate.
                        </li><li><b>integer_expression</b>: The repeat count.
                    </li></ul>
                    <br/><pre lang="">                      SELECT REPLACE('x', 5);
                      -- Result: 'xxxxx'
                    </pre>
                
<h2>REVERSE ( string_expression )</h2>
</p>

<p>                Returns the reverse order of the string expression.</p>

<p>                    <ul><li><b>string_expression</b>: The string.
                    </li></ul>
                    <br/><pre lang="">                      SELECT REVERSE('1234567890');
                      -- Result: '0987654321'
                    </pre>
                
<h2>RIGHT ( character_expression , integer_expression )</h2>
</p>

<p>                Returns the right part of the string with the specified number of characters.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                        </li><li><b>integer_expression</b>: The positive integer that specifies how many characters of the character expression will be returned.
                    </li></ul>
                    <br/><pre lang="">                      SELECT RIGHT('1234567890', 3);
                      -- Result: '890'
                    </pre>
                
<h2>RTRIM(character_expression)</h2>
</p>

<p>                Returns the character expression after it removes trailing blanks.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT RTRIM('trimmed     ');
                      -- Result: 'trimmed'
                    </pre>
                
<h2>SOUNDEX(character_expression)</h2>
</p>

<p>                Returns the four-character Soundex code, based on how the string sounds when spoken.</p>

<p>                    <ul><li><b>character_expression</b>: The alphanumeric expression of character data.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SOUNDEX('smith');
                      -- Result: 'S530'
                    </pre>
                
<h2>SPACE(repeatcount)</h2>
</p>

<p>                Returns the string that consists of repeated spaces.</p>

<p>                    <ul><li><b>repeatcount</b>: The number of spaces.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SPACE(5);
                      -- Result: '     '
                    </pre>
                
<h2>SPLIT(string, delimiter, offset)</h2>
</p>

<p>                Returns a section of the string between to delimiters.</p>

<p>                    <ul><li><b>string</b>: The string to split.
                        </li><li><b>delimiter</b>: The character to split the string with.
                        </li><li><b>offset</b>: The number of the split to return. Positive numbers are treated as offsets from the left, and negative numbers are treated as offsets from the right.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SPLIT('a/b/c/d', '/', 1);
                      -- Result: 'a'
                      SELECT SPLIT('a/b/c/d', '/', -2);
                      -- Result: 'c'
                    </pre>
                
<h2>STARTSWITH(character_expression, character_prefix)</h2>
</p>

<p>                Returns 1 if character_expression starts with character_prefix; otherwise, 0.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                        </li><li><b>character_prefix</b>: The character prefix to search for.
                    </li></ul>
                    <br/><pre lang="">                      SELECT STARTSWITH('0123456', '012');
                      -- Result: 1

                      SELECT STARTSWITH('0123456', '456');
                      -- Result: 0
                    </pre>
                
<h2>STR ( float_expression [ , integer_length [ , integer_decimal ] ] )</h2>
</p>

<p>                Returns the character data converted from the numeric data. For example, STR(123.45, 6, 1) returns 123.5.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression.
                        </li><li><b>length</b>: The optional total length to return. This includes decimal point, sign, digits, and spaces. The default is 10.
                        </li><li><b>decimal</b>: The optional number of places to the right of the decimal point. The decimal must be less than or equal to 16.
                    </li></ul>
                    <br/><pre lang="">                      SELECT STR('123.456');
                      -- Result: '123'

                      SELECT STR('123.456', 2);
                      -- Result: '**'

                      SELECT STR('123.456', 10, 2);
                      -- Result: '123.46'
                    </pre>
                
<h2>STUFF(character_expression , integer_start , integer_length , replaceWith_expression)</h2>
</p>

<p>                Inserts a string into another string. It deletes the specified length of characters in the first string at the start position and then inserts the second string into the first string at the start position.</p>

<p>                    <ul><li><b>character_expression</b>: The string expression.
                        </li><li><b>start</b>: The integer value that specifies the location to start deletion and insertion. If start or length is negative, null is returned. If start is longer than the string to be modified, character_expression, null is returned.
                        </li><li><b>length</b>: The integer that specifies the number of characters to delete. If length is longer than character_expression, deletion occurs up to the last character in replaceWith_expression.
                        </li><li><b>replaceWith_expression</b>: The expression of character data that will replace length characters of character_expression beginning at the start value.
                    </li></ul>
                    <br/><pre lang="">                      SELECT STUFF('1234567890', 3, 2, 'xx');
                      -- Result: '12xx567890'
                    </pre>
                
<h2>SUBSTRING(string_value FROM start FOR length)</h2>
</p>

<p>                Returns the part of the string with the specified length; starts at the specified index.</p>

<p>                    <ul><li><b>string_value</b>: The character string.
                        </li><li><b>start</b>: The positive integer that specifies the start index of characters to return.
                        </li><li><b>length</b>: Optional. The positive integer that specifies how many characters will be returned.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SUBSTRING('1234567890' FROM 3 FOR 2);
                      -- Result: '34'

                      SELECT SUBSTRING('1234567890' FROM 3);
                      -- Result: '34567890'
                    </pre>
                
<h2>TOSTRING(string_value1)</h2>
</p>

<p>                Converts the value of this instance to its equivalent string representation.</p>

<p>                    <ul><li><b>string_value1</b>: The string to be converted.
                    </li></ul>
                    <br/><pre lang="">                      SELECT TOSTRING(123);
                      -- Result: '123'

                      SELECT TOSTRING(123.456);
                      -- Result: '123.456'

                      SELECT TOSTRING(null);
                      -- Result: ''
                    </pre>
                
<h2>TRIM(trimspec trimchar FROM string_value)</h2>
</p>

<p>                Returns the character expression with leading and/or trailing blanks removed.</p>

<p>                    <ul><li><b>trimspec</b>: Optional. If included must be one of the keywords <b>BOTH</b>, <b>LEADING</b> or <b>TRAILING</b>.
                        </li><li><b>trimchar</b>: Optional. If included should be a one-character string value.
                        </li><li><b>string_value</b>: The string value to trim.
                    </li></ul>
                    <br/><pre lang="">                      SELECT TRIM('     trimmed     ');
                      -- Result: 'trimmed'

                      SELECT TRIM(LEADING FROM '     trimmed     ');
                      -- Result: 'trimmed     '

                      SELECT TRIM('-' FROM '-----trimmed-----');
                      -- Result: 'trimmed'

                      SELECT TRIM(BOTH '-' FROM '-----trimmed-----');
                      -- Result: 'trimmed'

                      SELECT TRIM(TRAILING '-' FROM '-----trimmed-----');
                      -- Result: '-----trimmed'
                    </pre>
                
<h2>UNICODE(ncharacter_expression)</h2>
</p>

<p>                Returns the integer value defined by the Unicode standard of the first character of the input expression.</p>

<p>                    <ul><li><b>ncharacter_expression</b>: The Unicode character expression.
                    </li></ul>
                
<h2>UPPER ( character_expression )</h2>
</p>

<p>                Returns the character expression with lowercase character data converted to uppercase.</p>

<p>                    <ul><li><b>character_expression</b>: The character expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT UPPER('MIXED case');
                      -- Result: 'MIXED CASE'
                    </pre>
                
<h2>XML_EXTRACT(xml, xpath [, separator])</h2>
</p>

<p>                Extracts an XML document using the specified XPath to flatten the XML. A comma is used to separate the outputs by default, but this can be changed by specifying the third parameter.</p>

<p>                    <ul><li><b>xml</b>: The XML document to extract.
                        </li><li><b>xpath</b>: The XPath used to select the nodes. The nodes selected will be returned in a token-separated list.
                        </li><li><b>separator</b>: The optional token used to separate the items in the flattened response. If this is not specified, the separator will be a comma.
                    </li></ul>
                    <br/><pre lang="">                      SELECT XML_EXTRACT('&lt;vowels&gt;&lt;ch&gt;a&lt;/ch&gt;&lt;ch&gt;e&lt;/ch&gt;&lt;ch&gt;i&lt;/ch&gt;&lt;ch&gt;o&lt;/ch&gt;&lt;ch&gt;u&lt;/ch&gt;&lt;/vowels&gt;', '/vowels/ch');
                      -- Result: 'a,e,i,o,u'

                      SELECT XML_EXTRACT('&lt;vowels&gt;&lt;ch&gt;a&lt;/ch&gt;&lt;ch&gt;e&lt;/ch&gt;&lt;ch&gt;i&lt;/ch&gt;&lt;ch&gt;o&lt;/ch&gt;&lt;ch&gt;u&lt;/ch&gt;&lt;/vowels&gt;', '/vowels/ch', ';');
                      -- Result: 'a;e;i;o;u'
                    </pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  MATH Functions" desc="CData JDBC Driver for Avro - RSBAvro -  MATH Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> MATH Functions</h1>
       

    <div class="chapter_content" id="pg_sqlmathfunctions">

<p>
<h2>ABS ( numeric_expression )</h2>
</p>

<p>                Returns the absolute (positive) value of the specified numeric expression.</p>

<p>                    <ul><li><b>numeric_expression</b>: The expression of an indeterminate numeric data type except for the bit data type.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ABS(15);
                      -- Result: 15

                      SELECT ABS(-15);
                      -- Result: 15
                    </pre>
                
<h2>ACOS ( float_expression )</h2>
</p>

<p>                Returns the arc cosine, the angle in radians whose cosine is the specified float expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression that specifies the cosine of the angle to be returned. Values outside the range from -1 to 1 return null.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ACOS(0.5);
                      -- Result: 1.0471975511966
                    </pre>
                
<h2>ASIN ( float_expression )</h2>
</p>

<p>                Returns the arc sine, the angle in radians whose sine is the specified float expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression that specifies the sine of the angle to be returned. Values outside the range from -1 to 1 return null.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ASIN(0.5);
                      -- Result: 0.523598775598299
                    </pre>
                
<h2>ATAN ( float_expression )</h2>
</p>

<p>                Returns the arc tangent, the angle in radians whose tangent is the specified float expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression that specifies the tangent of the angle to be returned.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ATAN(10);
                      -- Result: 1.47112767430373
                    </pre>
                
<h2>ATN2 ( float_expression1 , float_expression2 )</h2>
</p>

<p>                Returns the angle in radians between the positive x-axis and the ray from the origin to the point (y, x) where x and y are the values of the two specified float expressions.</p>

<p>                    <ul><li><b>float_expression1</b>: The float expression that is the y-coordinate.
                        </li><li><b>float_expression2</b>: The float expression that is the x-coordinate.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ATN2(1, 1);
                      -- Result: 0.785398163397448
                    </pre>
                
<h2>CEILING ( numeric_expression ) or CEIL( numeric_expression )</h2>
</p>

<p>                Returns the smallest integer greater than or equal to the specified numeric expression.</p>

<p>                    <ul><li><b>numeric_expression</b>: The expression of an indeterminate numeric data type except for the bit data type.
                    </li></ul>
                    <br/><pre lang="">                      SELECT CEILING(1.3);
                      -- Result: 2

                      SELECT CEILING(1.5);
                      -- Result: 2

                      SELECT CEILING(1.7);
                      -- Result: 2
                    </pre>
                
<h2>COS ( float_expression )</h2>
</p>

<p>                Returns the trigonometric cosine of the specified angle in radians in the specified expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression of the specified angle in radians.
                    </li></ul>
                    <br/><pre lang="">                      SELECT COS(1);
                      -- Result: 0.54030230586814
                    </pre>
                
<h2>COT ( float_expression )</h2>
</p>

<p>                Returns the trigonometric cotangent of the angle in radians specified by float_expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression of the angle in radians.
                    </li></ul>
                    <br/><pre lang="">                      SELECT COT(1);
                      -- Result: 0.642092615934331
                    </pre>
                
<h2>DEGREES ( numeric_expression )</h2>
</p>

<p>                Returns the angle in degrees for the angle specified in radians.</p>

<p>                    <ul><li><b>numeric_expression</b>: The angle in radians, an expression of an indeterminate numeric data type except for the bit data type.
                    </li></ul>
                    <br/><pre lang="">                      SELECT DEGREES(3.1415926);
                      -- Result: 179.999996929531
                    </pre>
                
<h2>EXP ( float_expression )</h2>
</p>

<p>                Returns the exponential value of the specified float expression. For example, EXP(LOG(20)) is 20.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT EXP(2);
                      -- Result: 7.38905609893065
                    </pre>
                
<h2>EXPR ( expression )</h2>
</p>

<p>                Evaluates the expression.</p>

<p>                    <ul><li><b>expression</b>: The expression. Operators allowed are +, -, *, /, ==, !=, &gt;, &lt;, &gt;=, and &lt;=.
                    </li></ul>
                    <br/><pre lang="">                      SELECT EXPR('1 + 2 * 3');
                      -- Result: 7

                      SELECT EXPR('1 + 2 * 3 == 7');
                      -- Result: true
                    </pre>
                
<h2>FLOOR ( numeric_expression )</h2>
</p>

<p>                Returns the largest integer less than or equal to the numeric expression.</p>

<p>                    <ul><li><b>numeric_expression</b>: The expression of an indeterminate numeric data type except for the bit data type.
                    </li></ul>
                    <br/><pre lang="">                      SELECT FLOOR(1.3);
                      -- Result: 1

                      SELECT FLOOR(1.5);
                      -- Result: 1

                      SELECT FLOOR(1.7);
                      -- Result: 1
                    </pre>
				
<h2>GREATEST(int1,int2,....)</h2>
</p>

<p>				Returns the greatest of the supplied integers.
				<br/><pre lang="">				SELECT GREATEST(3,5,8,10,1)
				-- Result: 10			
				</pre>
				
<h2>HEX(value)</h2>
</p>

<p>				Returns a the equivalent hex for the input value.
					<ul><li><b>value</b>: A string or numerical value to be converted into hex.
					</li></ul>
				<br/><pre lang="">				SELECT HEX(866849198);
				-- Result: 33AB11AE
				
				SELECT HEX('Sample Text');
				-- Result: 53616D706C652054657874
				</pre>
								
                
<h2>JSON_AVG(json, jsonpath)</h2>
</p>

<p>                Computes the average value of a JSON array within a JSON object. The path to the array is specified in the jsonpath argument. Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to compute.
                        </li><li><b>jsonpath</b>: The JSONPath used to select the nodes. [x], [2..], [..8], or [1..12] are accepted. [x] selects all nodes.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_AVG('[1,2,3,4,5]', '$[x]');
                      -- Result: 3

                      SELECT JSON_AVG('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[x]');
                      -- Result: 3

                      SELECT JSON_AVG('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[3..]');
                      -- Result: 4.5
                    </pre>
                
<h2>JSON_COUNT(json, jsonpath)</h2>
</p>

<p>                Returns the number of elements in a JSON array within a JSON object. The path to the array is specified in the jsonpath argument. Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to compute.
                        </li><li><b>jsonpath</b>: The JSONPath used to select the nodes. [x], [2..], [..8], or [1..12] are accepted. [x] selects all nodes.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_COUNT('[1,2,3,4,5]', '$[x]');
                      -- Result: 5

                      SELECT JSON_COUNT('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[x]');
                      -- Result: 5

                      SELECT JSON_COUNT('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[3..]');
                      -- Result: 2
                    </pre>
                
<h2>JSON_MAX(json, jsonpath)</h2>
</p>

<p>                Gets the maximum value in a JSON array within a JSON object. The path to the array is specified in the jsonpath argument. Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to compute.
                        </li><li><b>jsonpath</b>: The JSONPath used to select the nodes. [x], [2..], [..8], or [1..12] are accepted. [x] selects all nodes.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_MAX('[1,2,3,4,5]', '$[x]');
                      -- Result: 5

                      SELECT JSON_MAX('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[x]');
                      -- Result: 5

                      SELECT JSON_MAX('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[..3]');
                      -- Result: 4
                    </pre>
                
<h2>JSON_MIN(json, jsonpath)</h2>
</p>

<p>                Gets the minimum value in a JSON array within a JSON object. The path to the array is specified in the jsonpath argument. Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to compute.
                        </li><li><b>jsonpath</b>: The JSONPath used to select the nodes. [x], [2..], [..8], or [1..12] are accepted. [x] selects all nodes.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_MIN('[1,2,3,4,5]', '$[x]');
                      -- Result: 1

                      SELECT JSON_MIN('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[x]');
                      -- Result: 1

                      SELECT JSON_MIN('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[3..]');
                      -- Result: 4
                    </pre>
                
<h2>JSON_SUM(json, jsonpath)</h2>
</p>

<p>                Computes the summary value in JSON according to the JSONPath expression. Return value is numeric or null.</p>

<p>                    <ul><li><b>json</b>: The JSON document to compute.
                        </li><li><b>jsonpath</b>: The JSONPath used to select the nodes. [x], [2..], [..8], or [1..12] are accepted. [x] selects all nodes.
                    </li></ul>
                    <br/><pre lang="">                      SELECT JSON_SUM('[1,2,3,4,5]', '$[x]');
                      -- Result: 15

                      SELECT JSON_SUM('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[x]');
                      -- Result: 15

                      SELECT JSON_SUM('{"test": {"data": [1,2,3,4,5]}}', '$.test.data[3..]');
                      -- Result: 9
                    </pre>
				
				
<h2>LEAST(int1,int2,....)</h2>
</p>

<p>				Returns the least of the supplied integers.
				<br/><pre lang="">				SELECT LEAST(3,5,8,10,1)
				-- Result: 1			
				</pre>
                
<h2>LOG ( float_expression [, base ] )</h2>
</p>

<p>                Returns the natural logarithm of the specified float expression.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression.
                        </li><li><b>base</b>: The optional integer argument that sets the base for the logarithm.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LOG(7.3890560);
                      -- Result: 1.99999998661119
                    </pre>
                
<h2>LOG10 ( float_expression )</h2>
</p>

<p>                Returns the base-10 logarithm of the specified float expression.</p>

<p>                    <ul><li><b>float_expression</b>: The expression of type float.
                    </li></ul>
                    <br/><pre lang="">                      SELECT LOG10(10000);
                      -- Result: 4
                    </pre>
				
<h2>MOD(dividend,divisor)</h2>
</p>

<p>				Returns the integer value associated with the remainder when dividing the dividend by the divisor.
					<ul><li><b>dividend</b>: The number to take the modulus of.
						</li><li><b>divisor</b>: The number to divide the dividend by when determining the modulus.
					</li></ul>
				<br/><pre lang="">				SELECT MOD(10,3);
				-- Result: 1
				</pre>
				
<h2>NEGATE(real_number)</h2>
</p>

<p>				Returns the opposite to the real number input.
					<ul><li><b>real_number</b>: The real number to find the opposite of.
					</li></ul>
				<br/><pre lang="">				SELECT NEGATE(10);
				-- Result: -10
				
				SELECT NEGATE(-12.4)
				--Result: 12.4
				</pre>
                
<h2>PI ( )</h2>
</p>

<p>                Returns the constant value of pi.
                <br/><pre lang="">                  SELECT PI()
                  -- Result: 3.14159265358979 
                </pre>
                
<h2>POWER ( float_expression , y )</h2>
</p>

<p>                Returns the value of the specified expression raised to the specified power.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression.
                        </li><li><b>y</b>: The power to raise float_expression to.
                    </li></ul>
                    <br/><pre lang="">                      SELECT POWER(2, 10);
                      -- Result: 1024

                      SELECT POWER(2, -2);
                      -- Result: 0.25
                    </pre>
                
<h2>RADIANS ( float_expression )</h2>
</p>

<p>                Returns the angle in radians of the angle in degrees.</p>

<p>                    <ul><li><b>float_expression</b>: The degrees of the angle as a float expression.
                    </li></ul>
                    <br/><pre lang="">                      SELECT RADIANS(180);
                      -- Result: 3.14159265358979
                    </pre>
                
<h2>RAND ( [ integer_seed ] )</h2>
</p>

<p>                Returns a pseudorandom float value from 0 through 1, exclusive.</p>

<p>                    <ul><li><b>seed</b>: The optional integer expression that specifies the seed value. If seed is not specified, a seed value at random will be assigned.
                    </li></ul>
                    <br/><pre lang="">                      SELECT RAND();
                      -- This result may be different, since the seed is randomized
                      -- Result: 0.873159630165044

                      SELECT RAND(1);
                      -- This result will always be the same, since the seed is constant
                      -- Result: 0.248668584157093
                    </pre>
                
<h2>ROUND ( numeric_expression [ ,integer_length] [ ,function ] )</h2>
</p>

<p>                Returns the numeric value rounded to the specified length or precision.</p>

<p>                    <ul><li><b>numeric_expression</b>: The expression of a numeric data type.
                        </li><li><b>length</b>: The optional precision to round the numeric expression to.  When this is ommitted, the default behavior will be to round to the nearest whole number.
                        </li><li><b>function</b>: The optional type of operation to perform. When the function parameter is omitted or has a value of 0 (default), numeric_expression is rounded. When a value other than 0 is specified, numeric_expression is truncated.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ROUND(1.3, 0);
                      -- Result: 1

                      SELECT ROUND(1.55, 1);
                      -- Result: 1.6

                      SELECT ROUND(1.7, 0, 0);
                      -- Result: 2

                      SELECT ROUND(1.7, 0, 1);
                      -- Result: 1
                      
                      SELECT ROUND (1.24);
                      -- Result: 1.0
                    </pre>
                
<h2>SIGN ( numeric_expression )</h2>
</p>

<p>                Returns the positive sign (1), 0, or negative sign (-1) of the specified expression.</p>

<p>                    <ul><li><b>numeric_expression</b>: The expression of an indeterminate data type except for the bit data type.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SIGN(0);
                      -- Result: 0

                      SELECT SIGN(10);
                      -- Result: 1

                      SELECT SIGN(-10);
                      -- Result: -1
                    </pre>
                
<h2>SIN ( float_expression )</h2>
</p>

<p>                Returns the trigonometric sine of the angle in radians.</p>

<p>                    <ul><li><b>float_expression</b>: The float expression specifying the angle in radians.
                    </li></ul>
                    <br/><pre lang="">                     SELECT SIN(1);
                     -- Result: 0.841470984807897
                    </pre>
                
<h2>SQRT ( float_expression )</h2>
</p>

<p>                Returns the square root of the specified float value.</p>

<p>                    <ul><li><b>float_expression</b>: The expression of type float.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SQRT(100);
                      -- Result: 10
                    </pre>
                
<h2>SQUARE ( float_expression )</h2>
</p>

<p>                Returns the square of the specified float value.</p>

<p>                    <ul><li><b>float_expression</b>: The expression of type float.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SQUARE(10);
                      -- Result: 100

                      SELECT SQUARE(-10);
                      -- Result: 100
                    </pre>
                
<h2>TAN ( float_expression )</h2>
</p>

<p>                Returns the tangent of the input expression.</p>

<p>                    <ul><li><b>float_expression</b>: The expression of type float.
                    </li></ul>
                    <br/><pre lang="">                      SELECT TAN(1);
                      -- Result: 1.5574077246549
                    </pre>
				
<h2>TRUNC(decimal_number,precision)</h2>
</p>

<p>				Returns the supplied decimal number truncated to have the supplied decimal precision.
					<ul><li><b>decimal_number</b>: The decimal value to truncate.
						</li><li><b>precision</b>: The number of decimal places to truncate the decimal number to.
					</li></ul>
				<br/><pre lang="">				SELECT TRUNC(10.3423,2);
				-- Result: 10.34
				</pre>
				
<h2>_ROW_NUMBER_()</h2>
</p>

<p>				Returns a row index as an additional column.
				<br/><pre lang="">				SELECT ColumnName, _ROW_NUMBER_() FROM TableName
				-- Result: ColumnData, 0
				ColumnData2, 1
				ColumnData3, 2
				</pre></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  DATE Functions" desc="CData JDBC Driver for Avro - RSBAvro -  DATE Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> DATE Functions</h1>
       

    <div class="chapter_content" id="pg_sqldatefunctions">

<p>
<h2>CURRENT_DATE()</h2>
</p>

<p>                Returns the current date value.
                <br/><pre lang="">                  SELECT CURRENT_DATE();
                  -- Result: 2018-02-01
                </pre>

                
<h2>CURRENT_TIMESTAMP()</h2>
</p>

<p>                Returns the current time stamp of the database system as a datetime value. This value is equal to GETDATE and SYSDATETIME, and is always in the local timezone.
                <br/><pre lang="">                  SELECT CURRENT_TIMESTAMP();
                  -- Result: 2018-02-01 03:04:05
                </pre>
                
<h2>DATEADD (datepart , integer_number , date [, dateformat])</h2>
</p>

<p>                Returns the datetime value that results from adding the specified number (a signed integer) to the specified date part of the date.</p>

<p>                    <ul><li><b>datepart</b>: The part of the date to add the specified number to. The valid values and abbreviations are year (yy, yyyy), quarter (qq, q), month (mm, m), dayofyear (dy, y), day (dd, d), week (wk, ww), weekday (dw), hour (hh), minute (mi, n), second (ss, s), and millisecond (ms).
                        </li><li><b>number</b>: The number to be added.
                        </li><li><b>date</b>: The expression of the datetime data type.
                        </li><li><b>dateformat</b>: The optional output date format.
                    </li></ul>
                <br/><pre lang="">                  SELECT DATEADD('d', 5, '2018-02-01');
                  -- Result: 2018-02-06

                  SELECT DATEADD('hh', 5, '2018-02-01 00:00:00');
                  -- Result: 2018-02-01 05:00:00
                </pre>
                
<h2>DATEDIFF ( datepart , startdate , enddate )</h2>
</p>

<p>                Returns the difference (a signed integer) of the specified time interval between the specified start date and end date.</p>

<p>                    <ul><li><b>datepart</b>: The part of the date that is the time interval of the difference between the start date and end date. The valid values and abbreviations are day (dd, d), hour (hh), minute (mi, n), second (ss, s), and millisecond (ms).
                        </li><li><b>startdate</b>: The datetime expression of the start date.
                        </li><li><b>enddate</b>: The datetime expression of the end date.
                    </li></ul>
                <br/><pre lang="">                  SELECT DATEDIFF('d', '2018-02-01', '2018-02-10');
                  -- Result: 9

                  SELECT DATEDIFF('hh', '2018-02-01 00:00:00', '2018-02-01 12:00:00');
                  -- Result: 12
                </pre>
				
<h2>DATE_FORMAT(date,format)</h2>
</p>

<p>				Returns the date or timestamp in the format specified. This function mirrors the <a href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-format">MySQL DATE_FORMAT function</a>.</p>

<p>				    <ul><li><b>date</b>: A date or timestamp string.
						</li><li><b>format</b>: The specifier string of the desired output format. The list of supported format specifiers comes from the MySQL DATE_FORMAT function (see link to MySQL documentation above).
					</li></ul>
				  <br/><pre lang="">					SELECT DATE_FORMAT('9/4/2021 3:11:53 AM','%h')
					-- Result: 03
				  </pre>
                
<h2>DATEFROMPARTS(integer_year, integer_month, integer_day)</h2>
</p>

<p>                Returns the datetime value for the specified year, month, and day.</p>

<p>                    <ul><li><b>year</b>: The integer expression specifying the year.
                        </li><li><b>month</b>: The integer expression specifying the month.
                        </li><li><b>day</b>: The integer expression specifying the day.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DATEFROMPARTS(2018, 2, 1);
                    -- Result: 2018-02-01
                  </pre>
                
<h2>DATENAME(datepart , date)</h2>
</p>

<p>                Returns the character string that represents the specified date part of the specified date.</p>

<p>                    <ul><li><b>datepart</b>: The part of the date to return. The valid values and abbreviations are year (yy, yyyy), quarter (qq, q), month (mm, m), dayofyear (dy, y), day (dd, d), week (wk, ww), weekday (dw), hour (hh), minute (mi, n), second (ss, s), millisecond (ms), microsecond (mcs), nanosecond (ns), and TZoffset (tz).
                        </li><li><b>date</b>: The datetime expression.
                    </li></ul>
                   <br/><pre lang="">                     SELECT DATENAME('yy', '2018-02-01');
                     -- Result: '2018'

                     SELECT DATENAME('dw', '2018-02-01');
                     -- Result: 'Thursday'
                   </pre>
                
<h2>DATEPART(datepart, date [,integer_datefirst])</h2>
</p>

<p>                Returns a character string that represents the specified date part of the specified date.</p>

<p>                    <ul><li><b>datepart</b>: The part of the date to return. The valid values and abbreviations are year (yy, yyyy), quarter (qq, q), month (mm, m), dayofyear (dy, y), day (dd, d), week (wk, ww), weekday (dw), hour (hh), minute (mi, n), second (ss, s), millisecond (ms), microsecond (mcs), nanosecond (ns), TZoffset (tz), ISODOW, ISO_WEEK (isoweek, isowk,isoww), and ISOYEAR.
                        </li><li><b>date</b>: The datetime string.
                        </li><li><b>datefirst</b>: The optional integer representing the first day of the week. The default is 7, Sunday.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DATEPART('yy', '2018-02-01');
                    -- Result: 2018

                    SELECT DATEPART('dw', '2018-02-01');
                    -- Result: 5
                  </pre>
                
<h2>DATETIMEFROMPARTS(integer_year, integer_month, integer_day, integer_hour, integer_minute, integer_seconds, integer_milliseconds)</h2>
</p>

<p>                Returns the datetime value for the specified date parts.</p>

<p>                    <ul><li><b>year</b>: The integer expression specifying the year.
                        </li><li><b>month</b>: The integer expression specifying the month.
                        </li><li><b>day</b>: The integer expression specifying the day.
                        </li><li><b>hour</b>: The integer expression specifying the hour.
                        </li><li><b>minute</b>: The integer expression specifying the minute.
                        </li><li><b>seconds</b>: The integer expression specifying the seconds.
                        </li><li><b>milliseconds</b>: The integer expression specifying the milliseconds.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DATETIMEFROMPARTS(2018, 2, 1, 1, 2, 3, 456);
                    -- Result: 2018-02-01 01:02:03.456
                  </pre>
                
<h2>DATETIME2FROMPARTS(integer_year, integer_month, integer_day, integer_hour, integer_minute, integer_seconds, integer_fractions, integer_precision)</h2>
</p>

<p>                Returns the datetime value for the specified date parts.</p>

<p>                    <ul><li><b>year</b>: The integer expression specifying the year.
                        </li><li><b>month</b>: The integer expression specifying the month.
                        </li><li><b>day</b>: The integer expression specifying the day.
                        </li><li><b>hour</b>: The integer expression specifying the hour.
                        </li><li><b>minute</b>: The integer expression specifying the minute.
                        </li><li><b>seconds</b>: The integer expression specifying the seconds.
                        </li><li><b>fractions</b>: The integer expression specifying the fractions of the second.
                        </li><li><b>precision</b>: The integer expression specifying the precision of the fraction.
                    </li></ul>
                  <br/><pre lang="">				    SELECT DATETIME2FROMPARTS(2018, 2, 1, 1, 2, 3, 456, 3);
                    -- Result: 2018-02-01 01:02:03.456
                  </pre>
				
<h2>DATE_TRUNC(date, datepart)</h2>
</p>

<p>                Truncates the date to the precision of the given date part. Modeled after the Oracle TRUNC function.
                    <ul><li><b>date</b>: The datetime string that specifies the date.
                        </li><li><b>datepart</b>: Refer to the  <a href="https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions230.htm#i1002084">Oracle documentation</a> for valid datepart syntax.    
                    </li></ul>
                  <br/><pre lang="">				    SELECT DATE_TRUNC('05-04-2005', 'YY');
                    -- Result: '1/1/2005'
					
                    SELECT DATE_TRUNC('05-04-2005', 'MM');
                    -- Result: '5/1/2005'                    
                  </pre>
                
<h2>DATE_TRUNC2(datepart, date, [weekday])</h2>
</p>

<p>                Truncates the date to the precision of the given date part. Modeled after the PostgreSQL date_trunc function.
                    <ul><li><b>datepart</b>: One of 'millennium', 'century', 'decade', 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute' or 'second'.
                        </li><li><b>date</b>: The datetime string that specifies the date.
                        </li><li><b>weekday</b>: The optional day of the week to use as the first day for 'week'. One of 'sunday', 'monday', etc.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DATE_TRUNC2('year', '2020-02-04');
                    -- Result: '2020-01-01'

                    SELECT DATE_TRUNC2('week', '2020-02-04', 'monday');
                    -- Result: '2020-02-02', which is the previous Monday
                  </pre>
                
<h2>DAY(date)</h2>
</p>

<p>                Returns the integer that specifies the day component of the specified date.</p>

<p>                    <ul><li><b>date</b>: The datetime string that specifies the date.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DAY('2018-02-01');
                    -- Result: 1
                  </pre>
				
<h2>DAYNAME(date)</h2>
</p>

<p>                Returns the name of the day of the week of the specified date.</p>

<p>                    <ul><li><b>date</b>: The datetime string that specifies the date.
                    </li></ul>
                  <br/><pre lang="">                    SELECT DAYNAME('8/18/2021');
                    -- Result: Wednesday
                  </pre>
				
<h2>DAYOFMONTH(date)</h2>

				Returns the day of the month of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT DAYOFMONTH('04/15/2000');
				  -- Result: 15
				  </pre>
				
<h2>DAYOFWEEK(date)</h2>

				Returns the day of the week of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT DAYOFWEEK('04/15/2000');
				  -- Result: 7
				  </pre>
				
<h2>DAYOFYEAR(date)</h2>

				Returns the day of the year of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT DAYOFYEAR('04/15/2000');
				  -- Result: 106
				  </pre>
                
<h2>EOMONTH(date [, integer_month_to_add ]) or LAST_DAY(date)</h2>
</p>

<p>                Returns the last day of the month that contains the specified date with an optional offset.</p>

<p>                    <ul><li><b>date</b>: The datetime expression specifying the date for which to return the last day of the month.
                        </li><li><b>integer_month_to_add</b>: The optional integer expression specifying the number of months to add to the date before calculating the end of the month.
                    </li></ul>
                <br/><pre lang="">                  SELECT EOMONTH('2018-02-01');
                  -- Result: 2018-02-28
                  
                  SELECT LAST_DAY('2018-02-01');
                  -- Result: 2018-02-28

                  SELECT EOMONTH('2018-02-01', 2);
                  -- Result: 2018-04-30
                </pre>
				
<h2>EXTRACT(date_part FROM date_column_name)</h2>
</p>

<p>                Returns the last day of the month that contains the specified date with an optional offset.</p>

<p>                    <ul><li><b>date_part</b>: One of the following date components: YEAR, MONTH, DAY, HOUR, MINUTE, SECOND.
						</li><li><b>date_column_name</b>: The name of a date column in a table.
                    </li></ul>
                <br/><pre lang="">                  SELECT EXTRACT(YEAR FROM DateColumn)
                  -- Result: 2021
                </pre>
				
<h2>FDWEEK(date)</h2>

				Returns the first day of the week of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT FDWEEK('02-08-2018');
				  -- Result: 2/4/2018
				  </pre>
				
<h2>FDMONTH(date)</h2>

				Returns the first day of the month of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT FDMONTH('02-08-2018');
				  -- Result: 2/1/2018
				  </pre>
				
<h2>FDQUARTER(date)</h2>

				Returns the first day of the quarter of the given date part.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				  <br/><pre lang="">				  SELECT FDQUARTER('05-08-2018');
				  -- Result: 4/1/2018
				  </pre>
				
<h2>FILEMODIFIEDTIME(uri)</h2>
</p>

<p>				Returns the time stamp associated with the Date Modified of the relevant file.
					<ul><li><b>uri</b>: An absolute path pointing to a file on the local file system.
					</li></ul>
			     <br/><pre lang="">				 SELECT FILEMODIFIEDTIME('C:/Documents/myfile.txt');
				 -- Result: 6/25/2019 10:06:58 AM
				 </pre>
				
<h2>FROM_DAYS(datevalue)</h2>
</p>

<p>				Returns a date derived from the number of days after 1582-10-15 (based upon the Gregorian calendar). This will be equivalent to the MYSQL FROM_DAYS function.
					<ul><li><b>datevalue</b>: A integer value representing the number of days since 1582-10-15.
					</li></ul>
				<br/><pre lang="">				SELECT FROM_DAYS(736000);
				-- Result: 2/6/2015
				</pre>
				 
<h2>FROM_UNIXTIME(time, issecond)</h2>
</p>

<p>                Returns a representation of the unix_timestamp argument as a value in YYYY-MM-DD HH:MM:SS expressed in the current time zone.</p>

<p>                    <ul><li><b>time</b>: The time stamp value from epoch time. Milliseconds are accepted.
                        </li><li><b>issecond</b>: Indicates the time stamp value is milliseconds to epoch time.
                    </li></ul>
                    <br/><pre lang="">                      SELECT FROM_UNIXTIME(1540495231, 1);
                      -- Result: 2018-10-25 19:20:31

                      SELECT FROM_UNIXTIME(1540495357385, 0);
                      -- Result: 2018-10-25 19:22:37
                    </pre>				
                
<h2>GETDATE()</h2>
</p>

<p>                Returns the current time stamp of the database system as a datetime value. This value is equal to CURRENT_TIMESTAMP and SYSDATETIME, and is always in the local timezone.
                <br/><pre lang="">                  SELECT GETDATE();
                  -- Result: 2018-02-01 03:04:05
                </pre>
                
<h2>GETUTCDATE()</h2>
</p>

<p>                Returns the current time stamp of the database system formatted as a UTC datetime value. This value is equal to SYSUTCDATETIME.
                <br/><pre lang="">                  SELECT GETUTCDATE();
                  -- For example, if the local timezone is Eastern European Time (GMT+2)
                  -- Result: 2018-02-01 05:04:05
                </pre>
				
<h2>HOUR(date)</h2>
</p>

<p>				Returns the hour component from the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT HOUR('02-02-2020 11:30:00');
				-- Result: 11
				</pre>
                
<h2>ISDATE(date, [date_format])</h2>
</p>

<p>                Returns 1 if the value is a valid date, time, or datetime value; otherwise, 0.</p>

<p>                    <ul><li><b>date</b>: The datetime string.
                        </li><li><b>date_format</b>: The optional datetime format.
                    </li></ul>
                    <br/><pre lang="">                      SELECT ISDATE('2018-02-01', 'yyyy-MM-dd');
                      -- Result: 1

                      SELECT ISDATE('Not a date');
                      -- Result: 0
                    </pre>
				
<h2>LAST_WEEK()</h2>
</p>

<p>				Returns a time stamp equivalent to exactly one week before the current date.
				<br/><pre lang="">				SELECT LAST_WEEK();	//Assume the date is 3/17/2020	
				-- Result: 3/10/2020
				</pre>
				
<h2>LAST_MONTH()</h2>
</p>

<p>				Returns a time stamp equivalent to exactly one month before the current date.
				<br/><pre lang="">				SELECT LAST_MONTH(); //Assume the date is 3/17/2020	
				-- Result: 2/17/2020
				</pre>
				
<h2>LAST_YEAR()</h2>
</p>

<p>				Returns a time stamp equivalent to exactly one year before the current date.
				<br/><pre lang="">				SELECT LAST_YEAR();	//Assume the date is 3/17/2020	
				-- Result: 3/10/2019
				</pre>
				
<h2>LDWEEK(date)</h2>
</p>

<p>				Returns the last day of the provided week.
					<ul><li><b>date</b>: The datetime string.
					</li></ul>
				<br/><pre lang="">				SELECT LDWEEK('02-02-2020');
				-- Result: 2/8/2020
				</pre>
				
				
<h2>LDMONTH(date)</h2>
</p>

<p>				Returns the last day of the provided month.
					<ul><li><b>date</b>: The datetime string.
					</li></ul>
				<br/><pre lang="">				SELECT LDMONTH('02-02-2020');
				-- Result: 2/29/2020
				</pre>
				
				
<h2>LDQUARTER(date)</h2>
</p>

<p>				Returns the last day of the provided quarter.
					<ul><li><b>date</b>: The datetime string.
					</li></ul>
				<br/><pre lang="">				SELECT LDQUARTER('02-02-2020');
				-- Result: 3/31/2020
				</pre>
				
        
<h2>MAKEDATE(year, days)</h2>
</p>

<p>        Returns a date value from a year and a number of days.
        <ul><li><b>year</b>: The year
          </li><li><b>days</b>: The number of days into the year. Value must be greater than 0.
        </li></ul>
        <br/><pre lang="">          SELECT MAKEDATE(2020, 1);
          -- Result: 2020-01-01
        </pre>
        
				
<h2>MINUTE(date)</h2>
</p>

<p>				Returns the minute component from the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT MINUTE('02-02-2020 11:15:00');
				-- Result: 15
				</pre>
				
				
<h2>MONTH(date)</h2>
</p>

<p>				Returns the month component from the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT MONTH('02-02-2020');
				-- Result: 2
				</pre>
				
				
<h2>QUARTER(date)</h2>
</p>

<p>				Returns the quarter associated with the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT QUARTER('02-02-2020');
				-- Result: 1
				</pre>
				
				
<h2>SECOND(date)</h2>
</p>

<p>				Returns the second component from the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT SECOND('02-02-2020 11:15:23');
				-- Result: 23
				</pre>
				
                
<h2>SMALLDATETIMEFROMPARTS(integer_year, integer_month, integer_day, integer_hour, integer_minute)</h2>
</p>

<p>                Returns the datetime value for the specified date and time.</p>

<p>                    <ul><li><b>year</b>: The integer expression specifying the year.
                        </li><li><b>month</b>: The integer expression specifying the month.
                        </li><li><b>day</b>: The integer expression specifying the day.
                        </li><li><b>hour</b>: The integer expression specifying the hour.
                        </li><li><b>minute</b>: The integer expression specifying the minute.
                    </li></ul>
                    <br/><pre lang="">                      SELECT SMALLDATETIMEFROMPARTS(2018, 2, 1, 1, 2);
                      -- Result: 2018-02-01 01:02:00
                    </pre>
					
				
<h2>STRTODATE(string,format)</h2>
</p>

<p>				Parses the provided string value and returns the corresponding datetime.
					<ul><li><b>string</b>: The string value to be converted to datetime format.
						</li><li><b>format</b>: A format string which describes how to interpret the first string input. Follows standard  <a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html">Oracle date format syntax</a>.  A few special formats are available as well, including UNIX, UNIXMILIS, TICKS, and FILETICKS.
					</li></ul>
				<br/><pre lang="">				SELECT STRTODATE('03*04*2020','dd*MM*yyyy');
				-- Result: 4/3/2020
				</pre>
				
                
<h2>SYSDATETIME()</h2>
</p>

<p>                Returns the current time stamp as a datetime value of the database system. It is equal to GETDATE and CURRENT_TIMESTAMP, and is always in the local timezone.
                <br/><pre lang="">                  SELECT SYSDATETIME();
                  -- Result: 2018-02-01 03:04:05
                </pre>
                
<h2>SYSUTCDATETIME()</h2>
</p>

<p>                Returns the current system date and time as a UTC datetime value. It is equal to GETUTCDATE.
                <br/><pre lang="">                  SELECT SYSUTCDATETIME();
                  -- For example, if the local timezone is Eastern European Time (GMT+2)
                  -- Result: 2018-02-01 05:04:05
                </pre>
                
<h2>TIMEFROMPARTS(integer_hour, integer_minute, integer_seconds, integer_fractions, integer_precision)</h2>
</p>

<p>                Returns the time value for the specified time and with the specified precision.</p>

<p>                    <ul><li><b>hour</b>: The integer expression specifying the hour.
                        </li><li><b>minute</b>: The integer expression specifying the minute.
                        </li><li><b>seconds</b>: The integer expression specifying the seconds.
                        </li><li><b>fractions</b>: The integer expression specifying the fractions of the second.
                        </li><li><b>precision </b>: The integer expression specifying the precision of the fraction.
                    </li></ul>
                    <br/><pre lang="">                      SELECT TIMEFROMPARTS(1, 2, 3, 456, 3);
                      -- Result: 01:02:03.456
                    </pre>
			    
<h2>TO_DAYS(date)</h2>
</p>

<p>				Returns the number of days since 0000-00-01. This will only return a value for dates on or after 1582-10-15 (based upon the Gregorian calendar). This will be equivalent to the MYSQL TO_DAYS function.
					<ul><li><b>date</b>: The datetime string that specifies the date.
					</li></ul>
				<br/><pre lang="">				SELECT TO_DAYS('02-06-2015');
				-- Result: 736000
				</pre>		
				
<h2>WEEK(date)</h2>
</p>

<p>				Returns the week (of the year) associated with the provided datetime.
				<ul><li><b>date</b>: The datetime string that specifies the date.
				</li></ul>
				<br/><pre lang="">				SELECT WEEK('02-17-2020 11:15:23');
				-- Result: 8
				</pre>
                
<h2>YEAR(date)</h2>
</p>

<p>                Returns the integer that specifies the year of the specified date.</p>

<p>                    <ul><li><b>date</b>: The datetime string.
                    </li></ul>
                    <br/><pre lang="">                      SELECT YEAR('2018-02-01');
                      -- Result: 2018
                    </pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Date Literal Functions" desc="CData JDBC Driver for Avro - RSBAvro - Date Literal Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Date Literal Functions</h1>
       

    <div class="chapter_content" id="pg_dateliteralfunctions">

<p>The following date literal functions can be used to filter date fields using relative intervals. Note that while the &lt;, &gt;, and  = operators are supported for these functions, &lt;= and &gt;= are not.


<h2>L_TODAY()</h2>
</p>

<p>The current day.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_TODAY()</pre>



<h2>L_YESTERDAY()</h2>
</p>

<p>The previous day.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_YESTERDAY()</pre>



<h2>L_TOMORROW()</h2>
</p>

<p>The following day.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_TOMORROW()</pre>



<h2>L_LAST_WEEK()</h2>
</p>

<p>Every day in the preceding week.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_LAST_WEEK()</pre>



<h2>L_THIS_WEEK()</h2>
</p>

<p>Every day in the current week.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_THIS_WEEK()</pre>



<h2>L_NEXT_WEEK()</h2>
</p>

<p>Every day in the following week.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_NEXT_WEEK()</pre>

<b>Also available:</b>
	<ul><li>L_LAST/L_THIS/L_NEXT MONTH
		</li><li>L_LAST/L_THIS/L_NEXT QUARTER
		</li><li>L_LAST/L_THIS/L_NEXT YEAR
	</li></ul>


<h2>L_LAST_N_DAYS(n)</h2>
</p>

<p>The previous n days, excluding the current day.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_LAST_N_DAYS(3)</pre>



<h2>L_NEXT_N_DAYS(n)</h2>
</p>

<p>The following n days, including the current day.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_NEXT_N_DAYS(3)</pre>


<b>Also available:</b>
	<ul><li>L_LAST/L_NEXT_90_DAYS
	</li></ul>



<h2>L_LAST_N_WEEKS(n)</h2>
</p>

<p>Every day in every week, starting n weeks before current week, and ending in the previous week.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_LAST_N_WEEKS(3)</pre>



<h2>L_NEXT_N_WEEKS(n)</h2>
</p>

<p>Every day in every week, starting the following week, and ending n weeks in the future.
<br/><pre lang="">  SELECT * FROM MyTable WHERE MyDateField = L_NEXT_N_WEEKS(3)</pre>


<b>Also available:</b>
	<ul><li>L_LAST/L_NEXT_N_MONTHS(n)
		</li><li>L_LAST/L_NEXT_N_QUARTERS(n)
		</li><li>L_LAST/L_NEXT_N_YEARS(n)
	</li></ul></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SELECT Statements" desc="CData JDBC Driver for Avro - RSBAvro - SELECT Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SELECT Statements</h1>
       

    <div class="chapter_content" id="pg_select">

<p>A SELECT statement can consist of the following basic clauses. 

<ul><li>SELECT </li><li>INTO </li><li>FROM</li><li>JOIN</li><li>WHERE</li><li>GROUP BY</li><li>HAVING</li><li>UNION</li><li>ORDER BY</li><li>LIMIT</li></ul>


<h2>SELECT Syntax</h2>
</p>

<p>The following syntax diagram outlines the syntax supported by the SQL engine of the driver:
 
<br/><pre lang="sql">SELECT {
  [ TOP &lt;numeric_literal&gt; | DISTINCT ]
  { 
    * 
    | { 
        &lt;expression&gt; [ [ AS ] &lt;column_reference&gt; ] 
        | { &lt;table_name&gt; | &lt;correlation_name&gt; } .* 
      } [ , ... ] 
  }
  [ INTO csv:// [ filename= ] &lt;file_path&gt; [ ;delimiter=tab ] ]
  { 
    FROM &lt;table_reference&gt; [ [ AS ] &lt;identifier&gt; ] 
  } [ , ... ]
  [ [  
      INNER | { { LEFT | RIGHT | FULL } [ OUTER ] } 
    ] JOIN &lt;table_reference&gt; [ ON &lt;search_condition&gt; ] [ [ AS ] &lt;identifier&gt; ] 
  ] [ ... ] 
  [ WHERE &lt;search_condition&gt; ]
  [ GROUP BY &lt;column_reference&gt; [ , ... ]
  [ HAVING &lt;search_condition&gt; ]
  [ UNION [ ALL ] &lt;select_statement&gt; ]
  [ 
    ORDER BY 
    &lt;column_reference&gt; [ ASC | DESC ] [ NULLS FIRST | NULLS LAST ]
  ]
  [ 
    LIMIT &lt;expression&gt;
    [ 
      { OFFSET | , }
      &lt;expression&gt; 
    ]
  ] 
}

&lt;expression&gt; ::=
  | &lt;column_reference&gt;
  | @ &lt;parameter&gt; 
  | ?
  | COUNT( * | { [ DISTINCT ] &lt;expression&gt; } )
  | { AVG | MAX | MIN | SUM | COUNT } ( &lt;expression&gt; ) 
  | NULLIF ( &lt;expression&gt; , &lt;expression&gt; ) 
  | COALESCE ( &lt;expression&gt; , ... ) 
  | CASE &lt;expression&gt;
      WHEN { &lt;expression&gt; | &lt;search_condition&gt; } THEN { &lt;expression&gt; | NULL } [ ... ]
    [ ELSE { &lt;expression&gt; | NULL } ]
    END 
  | {RANK() | DENSE_RANK()} OVER ([PARTITION BY &lt;column_reference&gt;] {ORDER BY &lt;column_reference&gt;})
  | &lt;literal&gt;
  | &lt;sql_function&gt; 

&lt;search_condition&gt; ::= 
  {
    &lt;expression&gt; { = | &gt; | &lt; | &gt;= | &lt;= | &lt;&gt; | != | LIKE | NOT LIKE | IN | NOT IN | IS NULL | IS NOT NULL | AND | OR | CONTAINS | BETWEEN } [ &lt;expression&gt; ]
  } [ { AND | OR } ... ] </pre>

 


<h2>Examples</h2>

</p>

<p><ol><li>Return all columns:
<br/><pre lang="">SELECT * FROM SampleTable_1</pre></li><li>Rename a column:
<br/><pre lang="">SELECT [Column1] AS MY_Column1 FROM SampleTable_1</pre></li><li>Cast a column's data as a different data type:
<br/><pre lang="">SELECT CAST(AnnualRevenue AS VARCHAR) AS Str_AnnualRevenue FROM SampleTable_1</pre></li><li>Search data:
<br/><pre lang="">SELECT * FROM SampleTable_1 WHERE Column2 = 'Bob'</pre></li><li>Return the number of items matching the query criteria:
<br/><pre lang="">SELECT COUNT(*) AS MyCount FROM SampleTable_1 </pre></li><li>Return the number of unique items matching the query criteria:
<br/><pre lang="">SELECT COUNT(DISTINCT Column1) FROM SampleTable_1 </pre></li><li>Return the unique items matching the query criteria:
<br/><pre lang="">SELECT DISTINCT Column1 FROM SampleTable_1 </pre></li><li>Sort a result set in ascending order:
<br/><pre lang="">SELECT Id, Column1 FROM SampleTable_1  ORDER BY Column1 ASC</pre></li><li>Restrict a result set to the specified number of rows:

<br/><pre lang="">SELECT Id, Column1 FROM SampleTable_1 LIMIT 10 </pre></li><li>Parameterize a query to pass in inputs at execution time. This enables you to create prepared statements and mitigate SQL injection attacks. 
<br/><pre lang="">SELECT * FROM SampleTable_1 WHERE Column2 = @param</pre></li></ol>
See <a href="#pg_cacheExplicitly">Explicitly Caching Data</a> for information on using the SELECT statement in offline mode.

  
    
<h2>Pseudo Columns</h2>
</p>

<p>    Some input-only fields are available in SELECT statements. These fields, called pseudo columns, do not 
    appear as regular columns in the results, yet may be specified as part of the WHERE clause. You can use pseudo columns to access additional features from Avro.

    <br/><pre lang="">    SELECT * FROM SampleTable_1 WHERE Query = 'Column3 &gt; 100'
    </pre>
  </p>

<p></p>

<p>
<h2>Aggregate Functions</h2>
</p>

<p>For SELECT examples using aggregate functions, see <a href="#pg_sfagg">Aggregate Functions</a>.
</p>

<p>
<h2>JOIN Queries</h2>
</p>

<p>See <a href="#pg_sfjoin">JOIN Queries</a> for SELECT query examples using JOINs.

</p>

<p>
<h2>Date Literal Functions</h2>
</p>

<p><a href="#pg_dateliteralfunctions">Date Literal Functions</a> contains SELECT examples with date literal functions.


</p>

<p>
<h2>Window Functions</h2>
</p>

<p>See <a href="#pg_window">Window Functions</a> for SELECT examples containing window functions.</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Aggregate Functions" desc="CData JDBC Driver for Avro - RSBAvro - Aggregate Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Aggregate Functions</h1>
       

    <div class="chapter_content" id="pg_sfagg">

<p>

<h3>COUNT</h3>
</p>

<p>Returns the number of rows matching the query criteria.
<br/><pre lang="">SELECT COUNT(*) FROM SampleTable_1 WHERE Column2 = 'Bob'</pre>


    
    

<h3>COUNT(DISTINCT)</h3>
</p>

<p>Returns the number of distinct, non-null field values matching the query criteria.
<br/><pre lang="">SELECT COUNT(DISTINCT Id) AS DistinctValues FROM SampleTable_1 WHERE Column2 = 'Bob'</pre>


<h3>AVG</h3>
</p>

<p>Returns the average of the column values.
<br/><pre lang="">SELECT Column1, AVG(AnnualRevenue) FROM SampleTable_1 WHERE Column2 = 'Bob'  GROUP BY Column1</pre>


<h3>MIN</h3>
</p>

<p>Returns the minimum column value.
<br/><pre lang="">SELECT MIN(AnnualRevenue), Column1 FROM SampleTable_1 WHERE Column2 = 'Bob' GROUP BY Column1</pre>


<h3>MAX</h3>
</p>

<p>Returns the maximum column value.

<br/><pre lang="">SELECT Column1, MAX(AnnualRevenue) FROM SampleTable_1 WHERE Column2 = 'Bob' GROUP BY Column1</pre>


<h3>SUM</h3>
</p>

<p>Returns the total sum of the column values.
<br/><pre lang="">SELECT SUM(AnnualRevenue) FROM SampleTable_1 WHERE Column2 = 'Bob'</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - JOIN Queries" desc="CData JDBC Driver for Avro - RSBAvro - JOIN Queries: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>JOIN Queries</h1>
       

    <div class="chapter_content" id="pg_sfjoin">

<p>The CData JDBC Driver for Avro supports standard SQL joins like the following examples.


<h2>Inner Join</h2>

</p>

<p>An inner join selects only rows from both tables that match the join condition: 

<br/><pre lang="">SELECT c.SampleCol1, o.SampleCol2, o.SampleCol3, o.SampleCol4 FROM SampleTable_1 c INNER JOIN SampleTable_2 o ON c.Id = o.Id2</pre>


<h2>Left Join</h2>

</p>

<p>A left join selects all rows in the FROM table and only matching rows in the JOIN table:

<br/><pre lang=""> SELECT c.SampleCol1, o.SampleCol2, o.SampleCol3, o.SampleCol4 FROM SampleTable_1 c LEFT JOIN SampleTable_2 o ON c.Id = o.Id2</pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Window Functions" desc="CData JDBC Driver for Avro - RSBAvro - Window Functions: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Window Functions</h1>
       

    <div class="chapter_content" id="pg_window">

<p>Window functions allow you to create computed fields from a group of rows (a <i>window</i>) that return a result for each row, as opposed to one computed result for a set of rows, as is the case with aggregate functions. The driver supports the following window function syntax.</p>

<p><b>Note:</b> Window function support is an experimental feature of the driver. This functionality extends beyond the driver's core scope of being SQL-92 compliant. As such, performance with window functions may not be optimal.</p>

<p>
<h2>Window Function Clauses</h2>
</p>

<p>
<h3>OVER</h3>
</p>

<p>The OVER clause defines the window over which window functions are performed.
<br/><pre lang="">SELECT A, B, &lt;window function&gt; OVER (&lt;window frame&gt;) FROM TableName</pre></p>

<p>The &lt;window function&gt; refers to any supported window function clause, and the &lt;window frame&gt; refers to one or more clauses that specifies the logic by which the window is defined.

<h3>PARTITION BY</h3>
</p>

<p>The PARTITION BY clause subdivides a window into sub-windows called <i>partitions</i>. For each unique value in the column specified in the PARTITION BY clause, every record with that value collectively forms an individual partition.
<br/><pre lang="">SELECT A, B, &lt;window function&gt; OVER (PARTITION BY A ORDER BY B) From SampleTable_1</pre></p>

<p>The &lt;window function&gt; refers to any supported window function clause.

<h2>Window Functions</h2>
</p>

<p>
<h3>RANK()</h3>
</p>

<p>Assigns a rank number to each record in a window based on the value of the column specified in the required ORDER BY clause.</p>

<p>If two or more records have an equal value in the in ranked column, they all receive the same rank number and the rank count increments internally, skipping ahead one rank number for each record with a duplicate value in the ORDER BY column.
<br/><pre lang="">SELECT Id, Column1, RANK() OVER (ORDER BY Column1) AS Rank FROM SampleTable_1</pre></p>

<p>If you add a PARTITION BY clause, a separate set of ranks is calculated for each partition.
<br/><pre lang="">SELECT Id, Column1, RANK() OVER (PARTITION BY Id ORDER BY Column1) AS Rank FROM SampleTable_1</pre></p>

<p>
<h3>DENSE_RANK()</h3>
</p>

<p>Operates like the RANK() function, but it doesn't increment the internal rank counter for each record with a duplicate value in the ranked column.</p>

<p>This means that, while records with identical values in the ORDER BY column still share a rank number, the function never skips a rank number. 
<br/><pre lang="">SELECT Id, Column1, DENSE_RANK() OVER (PARTITION BY Id ORDER BY Column1) AS Rank FROM SampleTable_1</pre></p>

<p>If you add a PARTITION BY clause, a separate set of ranks is calculated for each partition.
<br/><pre lang="">SELECT Id, Column1, DENSE_RANK() OVER (PARTITION BY Id ORDER BY Column1) AS Rank FROM SampleTable_1</pre>


<h3>NTILE()</h3>


Distributes rows of an ordered partition into a specified number of approximately equal groups, or <i>buckets</i>. It assigns each group a bucket number starting from one. For each row in a group, the NTILE() function assigns a bucket number representing the group to which the row belongs.</p>

<p>The syntax of NTILE() is:
<br/><pre lang="">NTILE(buckets) OVER (
    [PARTITION BY partition_expression, ... ]
    ORDER BY sort_expression [ASC | DESC], ...
)</pre>

The following are paramaters that NTILE() supports:</p>

<p><ul><li>buckets: The number of buckets into which the rows are divided. The buckets can be an expression or subquery that evaluates to a positive integer. It cannot be a window function.</li><li>PARTITION BY: distributes rows of a result set into partitions to which the NTILE() function is applied.</li><li>ORDER BY is clause that specifies the logical order of rows in each partition to which the NTILE() is applied.</li></ul></p>

<p>If the number of rows is not divisible by the buckets, the NTILE() function returns groups of two sizes with the difference by one. The larger groups always precedes the smaller group in the order set by ORDER BY in the OVER() clause.</p>

<p>If the total of rows is divisible by the number of buckets, the function divides the rows evenly among buckets.


<h4>Example</h4>


The following statement creates a new table named <b>ntile_demo</b> that stores 10 integers:
<br/><pre lang="">CREATE TABLE sales.ntile_demo (
	v INT NOT NULL
);
	
INSERT INTO sales.ntile_demo(v) 
VALUES(1),(2),(3),(4),(5),(6),(7),(8),(9),(10);	
	
SELECT * FROM sales.ntile_demo;</pre>

This statement uses the NTILE() function to divide ten rows into three groups:
<br/><pre lang="">SELECT 
	v, 
	NTILE (3) OVER (
		ORDER BY v
	) buckets
FROM 
	sales.ntile_demo;</pre>


<h3>PERCENT_RANK()</h3>


Calculates the relative rank SQL Percentile of each row. It returns values greater than zero, but the maximum value is one. It does not count any NULL values. This function is nondeterministic.</p>

<p>The syntax of PERCENT_RANK() is:
<br/><pre lang="">PERCENT_RANK() OVER (
      [PARTITION BY partition_expression, ... ]
      ORDER BY sort_expression [ASC | DESC], ...
  )
  </pre>
  
This syntax uses the following parameters.</p>

<p><ul><li>PARTITION BY: By default, SQL Server treats the whole data set as a single set. You can specify the PARTITION BY clause to divide data into multiple sets. The Percent_Rank function performs the analytical calculations on each set. This parameter is optional.</li><li>ORDER BY: Sorts the data in either ascending or descending order. This parameter is required.</li></ul></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CACHE Statements" desc="CData JDBC Driver for Avro - RSBAvro - CACHE Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CACHE Statements</h1>
       

    <div class="chapter_content" id="pg_cache">

<p>When caching is enabled, CACHE statements provide complete control over the data that is cached and the table to which it is cached. The CACHE statement executes the SELECT statement specified and caches its results to a table with the same name in the cache database or to table specified in <i>&lt;cached_table_name&gt;</i>. The driver updates or inserts rows to the cache depending on whether or not they already exist in the cache, so the primary key, which is used to identify existing rows, must be included in the selected columns. 
  </p>

<p></p>

<p>See <a href="#pg_caching">Caching Data</a> for more information on different caching strategies.


<h2>CACHE Statement Syntax</h2>
</p>

<p>The cache statement may include the following options that alter its behavior:
<br/><pre lang="">CACHE [ &lt;cached_table_name&gt; ] [ WITH TRUNCATE | AUTOCOMMIT | SCHEMA ONLY | DROP EXISTING | ALTER SCHEMA ] &lt;select_statement&gt; </pre>
</p>

<p><b>WITH TRUNCATE</b></p>

<p>If this option is set, the driver removes existing rows in the cache table before adding the selected rows. Use this option if you want to refresh the entire cache table but keep its existing schema.</p>

<p>
<b>AUTOCOMMIT</b></p>

<p>If this option is set, the driver commits each row individually. Use this option if you want to ignore the rows that could not be cached due to some reason. By default, the entire result set is cached as a single transaction.</p>

<p>
<b>DROP EXISTING</b></p>

<p>If this option is set, the driver drops the existing cache table before caching the new results. Use this option if you want to refresh the entire cache table, including its schema.</p>

<p><b>SCHEMA ONLY</b></p>

<p>If this option is set, the driver creates the cache table based on the SELECT statement without executing the query.</p>

<p><b>ALTER SCHEMA</b></p>

<p>If this option is set, the driver alters the schema of the existing table in the cache if it does not match the schema of the SELECT statement. This option results in new columns or dropped columns, if the schema of the SELECT statement does not match the cached table.


<h2>Common Queries</h2>
</p>

<p>Use the following cache statement to cache all rows of a table:
<br/><pre lang="">CACHE SELECT * FROM SampleTable_1</pre></p>

<p>Use the following cache statement to cache all rows of a table into the cache table CachedSampleTable_1:
<br/><pre lang="">CACHE CachedSampleTable_1 SELECT * FROM SampleTable_1</pre></p>

<p>Use the following cache statement for incremental caching. The DateModified column may not exist in all tables. The cache statement shows how incremental caching would work if there were such a column. Also, notice that, in this case, the WITH TRUNCATE and DROP EXISTING options are specifically omitted, which would have deleted all existing rows.
<br/><pre lang="">CACHE CachedSampleTable_1 SELECT * FROM SampleTable_1 WHERE DateModified &gt; '2013-04-04'</pre>
</p>

<p>Use the following cache statements to create a table with all available columns that will then cache only a few of them. The sequence of statements cache only Id and Column1 even though the cache table CachedSampleTable_1 has all the columns in SampleTable_1. 
<br/><pre lang="">CACHE CachedSampleTable_1 SCHEMA ONLY SELECT * FROM SampleTable_1
CACHE CachedSampleTable_1 SELECT Id, Column1 FROM SampleTable_1</pre></p>

<p></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - EXECUTE Statements" desc="CData JDBC Driver for Avro - RSBAvro - EXECUTE Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>EXECUTE Statements</h1>
       

    <div class="chapter_content" id="pg_exec">

<p>To execute stored procedures, you can use EXECUTE or EXEC statements. 
</p>

<p>EXEC and EXECUTE assign stored procedure inputs, referenced by name, to values or parameter names. 


<h2>Stored Procedure Syntax</h2>
</p>

<p>To execute a stored procedure as an SQL statement, use the following syntax:
<br/><pre lang="sql"> 
{ EXECUTE | EXEC } &lt;stored_proc_name&gt; 
{
  [ @ ] &lt;input_name&gt; = &lt;expression&gt;
} [ , ... ]

&lt;expression&gt; ::=
  | @ &lt;parameter&gt; 
  | ?
  | &lt;literal&gt;</pre>


<h2>Example Statements</h2>
</p>

<p>Reference stored procedure inputs by name:
<br/><pre lang="plain">EXECUTE my_proc @second = 2, @first = 1, @third = 3;</pre>
</p>

<p>Execute a parameterized stored procedure statement:
<br/><pre lang="">EXECUTE my_proc second = @p1, first = @p2, third = @p3; </pre>
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PIVOT and UNPIVOT" desc="CData JDBC Driver for Avro - RSBAvro - PIVOT and UNPIVOT: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PIVOT and UNPIVOT</h1>
       

    <div class="chapter_content" id="pg_pivotunpivot">

<p><b>PIVOT and UNPIVOT</b> can be used to change a table-valued expression into another table. 


<h3>PIVOT</h3>

PIVOT rotates a table-value expression by turning unique values from one column into multiple columns in the output. PIVOT can run aggregations where required on any column value. 


<h5>PIVOT Synax</h5>

<br/><pre lang="sql"> 
"SELECT 'AverageCost' AS Cost_Sorted_By_Production_Days, [0], [1], [2], [3], [4]
FROM
(
SELECT DaysToManufacture, StandardCost
FROM Production.Product
) AS SourceTable
PIVOT
(
AVG(StandardCost)
FOR DaysToManufacture IN ([0], [1], [2], [3], [4])
) AS PivotTable;"</pre>


<h3>UNPIVOT</h3>

UNPIVOT carries out nearly the opposite to PIVOT by rotating columns of a table-valued expressions into column values.

<h5>UNPIVOT Sytax</h5>

<br/><pre lang="sql"> 
"SELECT VendorID, Employee, Orders
FROM
(SELECT VendorID, Emp1, Emp2, Emp3, Emp4, Emp5
FROM pvt) p
UNPIVOT
(Orders FOR Employee IN
(Emp1, Emp2, Emp3, Emp4, Emp5)
)AS unpvt;"</pre>
</p>

<p>For further information on PIVOT and UNPIVOT, see 
<a href="https://docs.microsoft.com/en-us/sql/t-sql/queries/from-transact-sql?view=sql-server-ver15">FROM clause plus JOIN, APPLY, PIVOT (Transact-SQL)</a></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  CREATE TABLE Statements" desc="CData JDBC Driver for Avro - RSBAvro -  CREATE TABLE Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> CREATE TABLE Statements</h1>
       

    <div class="chapter_content" id="pg_createtable">

<p>To create new Avro entities, use CREATE TABLE statements.

<h2>CREATE TABLE Syntax</h2>
</p>

<p>The CREATE TABLE statement specifies the table name and a comma-separated list of column names and the primary keys of the table, as shown in the following example: 
<br/><pre lang="sql">CREATE TABLE &lt;table_name&gt; [ IF [ NOT EXISTS ] ]
( 
  { 
     &lt;column_name&gt; &lt;data_type&gt; 
     [ NOT NULL ] 
     [ DEFAULT &lt;literal&gt; ] 
     [ PRIMARY KEY ] 
     [ UNIQUE ] 
  } |  PRIMARY KEY ( &lt;column_name&gt; [ , ... ] ) 
  [ , ... ]
)</pre>
</p>

<p><b>Note:</b> For Avro, the <a href="#pg_createtable">CREATE TABLE Statements</a> only works when using with <a href="#pg_JDBCbatch">Batch Processing</a> for bulk INSERT.
</p>

<p>The following example statement creates a MyCustomers table on the Avro server with name, age, and address columns:
<br/><pre lang="sql">CREATE TABLE IF NOT EXISTS [MyCustomers] (name VARCHAR(20), age INT, address VARCHAR(20))</pre>

    </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  DROP TABLE Statements" desc="CData JDBC Driver for Avro - RSBAvro -  DROP TABLE Statements: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> DROP TABLE Statements</h1>
       

    <div class="chapter_content" id="pg_droptable">

<p>Use DROP TABLE statements to delete a table and all the data it contains from Avro.

<h2>DROP TABLE Syntax</h2>
</p>

<p>The DROP TABLE statement accepts the name of the table to delete, as shown in the following example:
<br/><pre lang="sql">DROP TABLE [ IF EXISTS ] &lt;table_name&gt; </pre>
</p>

<p>The following query deletes all MyCustomers data from the server:
<br/><pre lang="sql">DROP TABLE IF EXISTS MyCustomers</pre>

    </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Data Model" desc="CData JDBC Driver for Avro - RSBAvro - Data Model: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Data Model</h1>
       

    <div class="chapter_content" id="pg_datamodel">

<p>
<h2>Overview</h2>
</p>

<p> This section shows the available API objects and provides more information on executing SQL to Avro APIs.


<h2>Key Features</h2>
</p>

<p><ul><li>The driver models Avro entities like documents, folders, and groups as relational views, allowing you to write SQL to query Avro data.</li><li>Stored procedures allow you to execute operations to Avro</li><li>Live connectivity to these objects means any changes to your Avro account are immediately reflected when using the driver.</li></ul>

</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  Stored Procedures" desc="CData JDBC Driver for Avro - RSBAvro -  Stored Procedures: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> Stored Procedures</h1>
       

    <div class="chapter_content" id="pg_allsps">

<p>Stored procedures are function-like interfaces that extend the functionality of the driver beyond simple SELECT operations with Avro.</p>

<p>Stored procedures accept a list of parameters, perform their intended function, and then return any relevant response data from Avro, along with an indication of whether the procedure succeeded or failed.
          
<h2>CData JDBC Driver for Avro Stored Procedures</h2>
</p>

<p>              
    <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b> </td><td><b>Description</b>
      </td></tr><tr><td style="white-space:nowrap"><a href="#pg_sp-getoauthaccesstoken">GetOAuthAccessToken</a>
      </td><td>Obtains the OAuth access token to be used for authentication with data sources using OAuth.
      </td></tr><tr><td style="white-space:nowrap"><a href="#pg_sp-getoauthauthorizationurl">GetOAuthAuthorizationURL</a>
      </td><td>Obtains the OAuth authorization URL used for authentication with data sources using OAuth.
      </td></tr><tr><td style="white-space:nowrap"><a href="#pg_sp-refreshoauthaccesstoken">RefreshOAuthAccessToken</a>
      </td><td>Exchanges a refresh token for a new access token.
 
  </td></tr></table></center><p /></p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - GetOAuthAccessToken" desc="CData JDBC Driver for Avro - RSBAvro - GetOAuthAccessToken: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>GetOAuthAccessToken</h1>
       

    <div class="chapter_content" id="pg_sp-getoauthaccesstoken">

<p>Obtains the OAuth access token to be used for authentication with data sources using OAuth.
      
    </p>

<p>      
<h3>Input</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">          <b>Name</b>
          </td><td><b>Type</b>
        
          </td><td><b>Required</b>
          </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      Other_Options
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Other options to control behavior of OAuth.
    </td></tr><tr><td style="white-space:nowrap">      Cert
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Path for a personal certificate .pfx file. Only available for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      Cert_Password
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Personal certificate password. Only available for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      AuthToken
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The request token returned by GetOAuthAuthorizationUrl. Available only for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      AuthKey
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The request secret key returned by GetOAuthAuthorizationUrl. Available only for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      AuthSecret
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        TThe legacy name for AuthKey, included for compatibility.
    </td></tr><tr><td style="white-space:nowrap">      Sign_Method
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The signature method used to calculate the signature for OAuth 1.0.
          
<p>The allowed values are <i>HMAC-SHA1, PLAINTEXT</i>.</p>

          
<p>The default value is <i>HMAC-SHA1</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      GrantType
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Authorization grant type. Only available for OAuth 2.0.
          
<p>The allowed values are <i>CODE, PASSWORD, CLIENT, REFRESH</i>.</p>

          
<p>The default value is <i>CODE</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      Post_Data
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The post data to submit, if any.
    </td></tr><tr><td style="white-space:nowrap">      AuthMode
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The type of authentication mode to use.
          
<p>The allowed values are <i>APP, WEB</i>.</p>

          
<p>The default value is <i>WEB</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      Verifier
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The verifier code returned by the data source after permission for the app to connect has been granted.  WEB AuthMode only.
    </td></tr><tr><td style="white-space:nowrap">      Scope
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The scope of access to the APIs.  By default, access to all APIs used by this data provider will be specified.
    </td></tr><tr><td style="white-space:nowrap">      CallbackURL
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field determines where the response is sent. 
    </td></tr><tr><td style="white-space:nowrap">      Prompt
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates the prompt to present the user. It accepts one of the following values: NONE, CONSENT, SELECT ACCOUNT. The default is SELECT_ACCOUNT, so a given user will be prompted to select the account to connect to. If it is set to CONSENT, the user will see a consent page every time, even if they have previously given consent to the application for a given set of scopes. Lastly, if it is set to NONE, no authentication or consent screens will be displayed to the user.
          
<p>The default value is <i>SELECT_ACCOUNT</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      AccessType
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates if your application needs to access a Google API when the user is not present at the browser. This parameter defaults to ONLINE. If your application needs to refresh access tokens when the user is not present at the browser, then use OFFLINE. This will result in your application obtaining a refresh token the first time your application exchanges an authorization code for a user.
    </td></tr><tr><td style="white-space:nowrap">      State
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates any state that may be useful to your application upon receipt of the response. Your application receives the same value it sent, as this parameter makes a round-trip to Google authorization server and back. Uses include redirecting the user to the correct resource in your site, using nonces, and mitigating cross-site request forgery.
          </td></tr></table></center><p />
          </p>

<p>      
<h3>Result Set Columns</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>        </td><td><b>Type</b> </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      OAuthAccessToken
          </td><td><i>String</i>
      </td><td>        The authentication token returned from Google. This can be used in subsequent calls to other operations for this particular service.
    </td></tr><tr><td style="white-space:nowrap">      OAuthAccessTokenSecret
          </td><td><i>String</i>
      </td><td>        The OAuth access token secret.
    </td></tr><tr><td style="white-space:nowrap">      OAuthRefreshToken
          </td><td><i>String</i>
      </td><td>        A token that may be used to obtain a new access token.
    </td></tr><tr><td style="white-space:nowrap">      ExpiresIn
          </td><td><i>String</i>
      </td><td>        The remaining lifetime on the access token.
    </td></tr><tr><td style="white-space:nowrap">      *
          </td><td><i>String</i>
      </td><td>        Other outputs that may be returned by the data source.
          </td></tr></table></center><p />
          </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - GetOAuthAuthorizationURL" desc="CData JDBC Driver for Avro - RSBAvro - GetOAuthAuthorizationURL: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>GetOAuthAuthorizationURL</h1>
       

    <div class="chapter_content" id="pg_sp-getoauthauthorizationurl">

<p>Obtains the OAuth authorization URL used for authentication with data sources using OAuth.
      
    </p>

<p>      
<h3>Input</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">          <b>Name</b>
          </td><td><b>Type</b>
        
          </td><td><b>Required</b>
          </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      Cert
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Path for a personal certificate .pfx file. Only available for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      Cert_Password
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Personal certificate password. Only available for OAuth 1.0.
    </td></tr><tr><td style="white-space:nowrap">      Sign_Method
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The signature method used to calculate the signature for OAuth 1.0.
          
<p>The allowed values are <i>HMAC-SHA1, PLAINTEXT</i>.</p>

          
<p>The default value is <i>HMAC-SHA1</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      Scope
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The scope of access to the APIs.  By default, access to all APIs used by this data provider will be specified.
    </td></tr><tr><td style="white-space:nowrap">      CallbackURL
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        The URL the user will be redirected to after authorizing your application.
    </td></tr><tr><td style="white-space:nowrap">      Prompt
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates the prompt to present the user. It accepts one of the following values: NONE, CONSENT, SELECT ACCOUNT. The default is SELECT_ACCOUNT, so a given user will be prompted to select the account to connect to. If it is set to CONSENT, the user will see a consent page every time, even if they have previously given consent to the application for a given set of scopes. Lastly, if it is set to NONE, no authentication or consent screens will be displayed to the user.
          
<p>The default value is <i>SELECT_ACCOUNT</i>.</p>

    </td></tr><tr><td style="white-space:nowrap">      AccessType
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates if your application needs to access a Google API when the user is not present at the browser. This parameter defaults to ONLINE. If your application needs to refresh access tokens when the user is not present at the browser, then use OFFLINE. This will result in your application obtaining a refresh token the first time your application exchanges an authorization code for a user.
    </td></tr><tr><td style="white-space:nowrap">      State
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        This field indicates any state that may be useful to your application upon receipt of the response. Your application receives the same value it sent, as this parameter makes a round-trip to the Google authorization server and back. Possible uses include redirecting the user to the correct resource in your site, using nonces, and mitigating cross-site request forgery.
    </td></tr><tr><td style="white-space:nowrap">      Other_Options
          </td><td><i>String</i>
      
      </td><td><i>False</i>
     </td><td>        Other options to control the behavior of OAuth.
          </td></tr></table></center><p />
          </p>

<p>      
<h3>Result Set Columns</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>        </td><td><b>Type</b> </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      AuthToken
          </td><td><i>String</i>
      </td><td>        The authorization token, passed into the GetOAuthAccessToken stored procedure.
    </td></tr><tr><td style="white-space:nowrap">      AuthKey
          </td><td><i>String</i>
      </td><td>        The authorization secret token, passed into the GetOAuthAccessToken stored procedure.
    </td></tr><tr><td style="white-space:nowrap">      AuthSecret
          </td><td><i>String</i>
      </td><td>        A legacy name used for AuthKey, accepted for compatibility.
    </td></tr><tr><td style="white-space:nowrap">      URL
          </td><td><i>String</i>
      </td><td>        The URL to complete user authentication.
          </td></tr></table></center><p />
          </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - RefreshOAuthAccessToken" desc="CData JDBC Driver for Avro - RSBAvro - RefreshOAuthAccessToken: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>RefreshOAuthAccessToken</h1>
       

    <div class="chapter_content" id="pg_sp-refreshoauthaccesstoken">

<p>Exchanges a refresh token for a new access token.
      
    </p>

<p>      
<h3>Input</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">          <b>Name</b>
          </td><td><b>Type</b>
        
          </td><td><b>Required</b>
          </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      OAuthRefreshToken
          </td><td><i>String</i>
      
      </td><td><i>True</i>
     </td><td>        The refresh token returned from the original authorization code exchange.
          </td></tr></table></center><p />
          </p>

<p>      
<h3>Result Set Columns</h3>

        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>        </td><td><b>Type</b> </td><td><b>Description</b>
    </td></tr><tr><td style="white-space:nowrap">      OAuthAccessToken
          </td><td><i>String</i>
      </td><td>        The authentication token returned from the data source. This can be used in subsequent calls to other operations for this particular service.
    </td></tr><tr><td style="white-space:nowrap">      OAuthRefreshToken
          </td><td><i>String</i>
      </td><td>        The authentication token returned from the data source. This can be used in subsequent calls to other operations for this particular service.
    </td></tr><tr><td style="white-space:nowrap">      ExpiresIn
          </td><td><i>String</i>
      </td><td>        The remaining lifetime on the access token.
          </td></tr></table></center><p />
          </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro -  System Tables" desc="CData JDBC Driver for Avro - RSBAvro -  System Tables: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1> System Tables</h1>
       

    <div class="chapter_content" id="pg_allsystables">

<p>You can query the system tables described in this section to access schema information, information on data source functionality, and batch operation statistics.

<h2>Schema Tables</h2>
</p>

<p>The following tables return database metadata for Avro:
<ul><li><a href="#pg_table-syscatalogs">sys_catalogs</a>: Lists the available databases.</li><li><a href="#pg_table-sysschemas">sys_schemas</a>: Lists the available schemas.</li><li><a href="#pg_table-systables">sys_tables</a>: Lists the available tables and views.</li><li><a href="#pg_table-systablecolumns">sys_tablecolumns</a>: Describes the columns of the available tables and views.</li><li><a href="#pg_table-sysprocedures">sys_procedures</a>: Describes the available stored procedures.</li><li><a href="#pg_table-sysprocedureparameters">sys_procedureparameters</a>: Describes stored procedure parameters.</li><li><a href="#pg_table-syskeycolumns">sys_keycolumns</a>: Describes the primary and foreign keys.</li><li><a href="#pg_table-sysindexes">sys_indexes</a>: Describes the available indexes.</li></ul>


<h2>Data Source Tables</h2>
</p>

<p>The following tables return information about how to connect to and query the data source:
<ul><li><a href="#pg_table-sysconnectionprops">sys_connection_props</a>: Returns information on the available connection properties.</li><li><a href="#pg_table-syssqlinfo">sys_sqlinfo</a>: Describes the SELECT queries that the driver can offload to the data source.</li></ul>

  
<h2>Query Information Tables</h2>

  </p>

<p>  The following table returns query statistics for data modification queries, including batch operations::
  <ul><li><a href="#pg_table-sysidentity">sys_identity</a>: Returns information about batch operations or single updates.
  </li></ul>

  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_catalogs" desc="CData JDBC Driver for Avro - RSBAvro - sys_catalogs: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_catalogs</h1>
       

    <div class="chapter_content" id="pg_table-syscatalogs">

<p>Lists the available databases.
</p>

<p>The following query retrieves all databases determined by the connection string:
<br/><pre lang="sql">SELECT * FROM sys_catalogs</pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The database name.
          </td></tr></table></center><p />


  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_schemas" desc="CData JDBC Driver for Avro - RSBAvro - sys_schemas: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_schemas</h1>
       

    <div class="chapter_content" id="pg_table-sysschemas">

<p>Lists the available schemas.
          </p>

<p>The following query retrieves all available schemas:	
          <br/><pre lang="sql">          SELECT * FROM sys_schemas
          </pre>



          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The database name.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The schema name.
          </td></tr></table></center><p />

          
  </p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_tables" desc="CData JDBC Driver for Avro - RSBAvro - sys_tables: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_tables</h1>
       

    <div class="chapter_content" id="pg_table-systables">

<p>Lists the available tables.
</p>

<p>The following query retrieves the available tables and views:

          <br/><pre lang="sql">          SELECT * FROM sys_tables
          </pre>


          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The database containing the table or view.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The schema containing the table or view.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table or view.
        </td></tr><tr><td style="white-space:nowrap">TableType
          </td><td><i>String</i>
        </td><td>The table type (table or view).
        </td></tr><tr><td style="white-space:nowrap">Description
          </td><td><i>String</i>
        </td><td>A description of the table or view.
		</td></tr><tr><td style="white-space:nowrap">IsUpdateable
		  </td><td><i>Boolean</i>
		</td><td>Whether the table can be updated.		
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_tablecolumns" desc="CData JDBC Driver for Avro - RSBAvro - sys_tablecolumns: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_tablecolumns</h1>
       

    <div class="chapter_content" id="pg_table-systablecolumns">

<p>Describes the columns of the available tables and views.
 </p>

<p>The following query returns the columns and data types for the SampleTable_1 table:
<br/><pre lang="sql">SELECT ColumnName, DataTypeName FROM sys_tablecolumns WHERE TableName='SampleTable_1' </pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the table or view.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The schema containing the table or view.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table or view containing the column.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The column name.
        </td></tr><tr><td style="white-space:nowrap">DataTypeName
          </td><td><i>String</i>
        </td><td>The data type name.
        </td></tr><tr><td style="white-space:nowrap">DataType
          </td><td><i>Int32</i>
        </td><td>An integer indicating the data type. This value is determined at run time based on the environment.
        </td></tr><tr><td style="white-space:nowrap">Length
          </td><td><i>Int32</i>
        </td><td>The storage size of the column.
		</td></tr><tr><td style="white-space:nowrap">DisplaySize
          </td><td><i>Int32</i>
        </td><td>The designated column's normal maximum width in characters.
        </td></tr><tr><td style="white-space:nowrap">NumericPrecision
          </td><td><i>Int32</i>
        </td><td>The maximum number of digits in numeric data. The column length in characters for character and date-time data.  
        </td></tr><tr><td style="white-space:nowrap">NumericScale
          </td><td><i>Int32</i>
        </td><td>The column scale or number of digits to the right of the decimal point.
        </td></tr><tr><td style="white-space:nowrap">IsNullable
          </td><td><i>Boolean</i>
        </td><td>Whether the column can contain null.
        </td></tr><tr><td style="white-space:nowrap">Description
          </td><td><i>String</i>
        </td><td>A brief description of the column.
        </td></tr><tr><td style="white-space:nowrap">Ordinal
          </td><td><i>Int32</i>
        </td><td>The sequence number of the column.
        </td></tr><tr><td style="white-space:nowrap">IsAutoIncrement
          </td><td><i>String</i>
        </td><td>Whether the column value is assigned in fixed increments.
        </td></tr><tr><td style="white-space:nowrap">IsGeneratedColumn
          </td><td><i>String</i>
        </td><td>Whether the column is generated.
        </td></tr><tr><td style="white-space:nowrap">IsHidden
          </td><td><i>Boolean</i>
        </td><td>Whether the column is hidden.
		</td></tr><tr><td style="white-space:nowrap">IsArray
          </td><td><i>Boolean</i>
        </td><td>Whether the column is an array.
        </td></tr><tr><td style="white-space:nowrap">IsReadOnly
        </td><td><i>Boolean</i>
        </td><td>Whether the column is read-only. 
    </td></tr><tr><td style="white-space:nowrap">IsKey
        </td><td><i>Boolean</i>
        </td><td>Indicates whether a field returned from sys_tablecolumns is the primary key of the table.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_procedures" desc="CData JDBC Driver for Avro - RSBAvro - sys_procedures: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_procedures</h1>
       

    <div class="chapter_content" id="pg_table-sysprocedures">

<p>Lists the available stored procedures.
</p>

<p>The following query retrieves the available stored procedures:

          <br/><pre lang="">          SELECT * FROM sys_procedures
          </pre>
          </p>

<p>          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The database containing the stored procedure.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The schema containing the stored procedure.
        </td></tr><tr><td style="white-space:nowrap">ProcedureName
          </td><td><i>String</i>
        </td><td>The name of the stored procedure.
        </td></tr><tr><td style="white-space:nowrap">Description
          </td><td><i>String</i>
        </td><td>A description of the stored procedure.
		</td></tr><tr><td style="white-space:nowrap">ProcedureType
          </td><td><i>String</i>
        </td><td>The type of the procedure, such as PROCEDURE or FUNCTION.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_procedureparameters" desc="CData JDBC Driver for Avro - RSBAvro - sys_procedureparameters: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_procedureparameters</h1>
       

    <div class="chapter_content" id="pg_table-sysprocedureparameters">

<p>Describes stored procedure parameters.
          </p>

<p>The following query returns information about all of the input parameters for the GetOAuthAccessToken stored procedure:
<br/><pre lang="sql">SELECT * FROM sys_procedureparameters WHERE ProcedureName='GetOAuthAccessToken' AND Direction=1 OR Direction=2</pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the stored procedure.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The name of the schema containing the stored procedure.
        </td></tr><tr><td style="white-space:nowrap">ProcedureName
          </td><td><i>String</i>
        </td><td>The name of the stored procedure containing the parameter.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The name of the stored procedure parameter.
        </td></tr><tr><td style="white-space:nowrap">Direction
          </td><td><i>Int32</i>
        </td><td>An integer corresponding to the type of the parameter: input (1), input/output (2), or output(4). input/output type parameters can be both input and output parameters. 
        </td></tr><tr><td style="white-space:nowrap">DataTypeName
          </td><td><i>String</i>
        </td><td>The name of the data type.
        </td></tr><tr><td style="white-space:nowrap">DataType
          </td><td><i>Int32</i>
        </td><td>An integer indicating the data type. This value is determined at run time based on the environment.
        </td></tr><tr><td style="white-space:nowrap">Length
          </td><td><i>Int32</i>
        </td><td>The number of characters allowed for character data. The number of digits allowed for numeric data.
        </td></tr><tr><td style="white-space:nowrap">NumericPrecision
          </td><td><i>Int32</i>
        </td><td>The maximum precision for numeric data. The column length in characters for character and date-time data.
        </td></tr><tr><td style="white-space:nowrap">NumericScale
          </td><td><i>Int32</i>
        </td><td>The number of digits to the right of the decimal point in numeric data.
        </td></tr><tr><td style="white-space:nowrap">IsNullable
          </td><td><i>Boolean</i>
        </td><td>Whether the parameter can contain null.
		</td></tr><tr><td style="white-space:nowrap">IsRequired
          </td><td><i>Boolean</i>
        </td><td>Whether the parameter is required for execution of the procedure.
		</td></tr><tr><td style="white-space:nowrap">IsArray
          </td><td><i>Boolean</i>
        </td><td>Whether the parameter is an array.
        </td></tr><tr><td style="white-space:nowrap">Description
          </td><td><i>String</i>
        </td><td>The description of the parameter.
        </td></tr><tr><td style="white-space:nowrap">Ordinal
          </td><td><i>Int32</i>
        </td><td>The index of the parameter.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_keycolumns" desc="CData JDBC Driver for Avro - RSBAvro - sys_keycolumns: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_keycolumns</h1>
       

    <div class="chapter_content" id="pg_table-syskeycolumns">

<p>Describes the primary and foreign keys.
          </p>

<p>		
          The following query retrieves the primary key for the SampleTable_1 table:
          <br/><pre lang="sql">         SELECT * FROM sys_keycolumns WHERE IsKey='True' AND TableName='SampleTable_1' 
          </pre>


          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the key.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The name of the schema containing the key.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table containing the key.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The name of the key column.
        </td></tr><tr><td style="white-space:nowrap">IsKey
          </td><td><i>Boolean</i>
        </td><td>Whether the column is a primary key in the table referenced in the TableName field.
        </td></tr><tr><td style="white-space:nowrap">IsForeignKey
          </td><td><i>Boolean</i>
        </td><td>Whether the column is a foreign key referenced in the TableName field.
         </td></tr><tr><td style="white-space:nowrap">PrimaryKeyName
          </td><td><i>String</i>
        </td><td>The name of the primary key.
         </td></tr><tr><td style="white-space:nowrap">ForeignKeyName
          </td><td><i>String</i>
        </td><td>The name of the foreign key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedCatalogName
          </td><td><i>String</i>
        </td><td>The database containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedSchemaName
          </td><td><i>String</i>
        </td><td>The schema containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedTableName
          </td><td><i>String</i>
        </td><td>The table containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedColumnName
          </td><td><i>String</i>
        </td><td>The column name of the primary key.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_foreignkeys" desc="CData JDBC Driver for Avro - RSBAvro - sys_foreignkeys: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_foreignkeys</h1>
       

    <div class="chapter_content" id="pg_table-foreignkeys">

<p>Describes the foreign keys.
          </p>

<p>		
          The following query retrieves all foreign keys which refer to other tables:
          <br/><pre lang="sql">         SELECT * FROM sys_foreignkeys WHERE ForeignKeyType = 'FOREIGNKEY_TYPE_IMPORT'
          </pre>


          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the key.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The name of the schema containing the key.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table containing the key.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The name of the key column.
		  </td></tr><tr><td style="white-space:nowrap">PrimaryKeyName
          </td><td><i>String</i>
        </td><td>The name of the primary key.
		</td></tr><tr><td style="white-space:nowrap">ForeignKeyName
          </td><td><i>String</i>
        </td><td>The name of the foreign key.       
        </td></tr><tr><td style="white-space:nowrap">ReferencedCatalogName
          </td><td><i>String</i>
        </td><td>The database containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedSchemaName
          </td><td><i>String</i>
        </td><td>The schema containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedTableName
          </td><td><i>String</i>
        </td><td>The table containing the primary key.
        </td></tr><tr><td style="white-space:nowrap">ReferencedColumnName
          </td><td><i>String</i>
        </td><td>The column name of the primary key.
		</td></tr><tr><td style="white-space:nowrap">ForeignKeyType
		   </td><td><i>String</i>
		</td><td>Designates whether the foreign key is an import (points to other tables) or export (referenced from other tables) key.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_primarykeys" desc="CData JDBC Driver for Avro - RSBAvro - sys_primarykeys: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_primarykeys</h1>
       

    <div class="chapter_content" id="pg_table-primarykeys">

<p>Describes the primary keys.
          </p>

<p>		
          The following query retrieves the primary keys from all tables and views:
          <br/><pre lang="sql">         SELECT * FROM sys_primarykeys
          </pre>


          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the key.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The name of the schema containing the key.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table containing the key.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The name of the key column.
        </td></tr><tr><td style="white-space:nowrap">KeySeq
          </td><td><i>String</i>
        </td><td>The sequence number of the primary key.
		  </td></tr><tr><td style="white-space:nowrap">KeyName
          </td><td><i>String</i>
        </td><td>The name of the primary key.
		</td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_indexes" desc="CData JDBC Driver for Avro - RSBAvro - sys_indexes: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_indexes</h1>
       

    <div class="chapter_content" id="pg_table-sysindexes">

<p>Describes the available indexes. By filtering on indexes, you can write more selective queries with faster query response times.
</p>

<p>The following query retrieves all indexes that are not primary keys:
          <br/><pre lang="sql">          SELECT * FROM sys_indexes WHERE IsPrimary='false'
          </pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">CatalogName
          </td><td><i>String</i>
        </td><td>The name of the database containing the index.
        </td></tr><tr><td style="white-space:nowrap">SchemaName
          </td><td><i>String</i>
        </td><td>The name of the schema containing the index.
        </td></tr><tr><td style="white-space:nowrap">TableName
          </td><td><i>String</i>
        </td><td>The name of the table containing the index.
        </td></tr><tr><td style="white-space:nowrap">IndexName
          </td><td><i>String</i>
        </td><td>The index name.
        </td></tr><tr><td style="white-space:nowrap">ColumnName
          </td><td><i>String</i>
        </td><td>The name of the column associated with the index.
        </td></tr><tr><td style="white-space:nowrap">IsUnique
          </td><td><i>Boolean</i>
        </td><td>True if the index is unique. False otherwise.
        </td></tr><tr><td style="white-space:nowrap">IsPrimary
          </td><td><i>Boolean</i>
        </td><td>True if the index is a primary key. False otherwise.
        </td></tr><tr><td style="white-space:nowrap">Type
          </td><td><i>Int16</i>
        </td><td>An integer value corresponding to the index type: statistic (0), clustered (1), hashed (2), or other (3).
        </td></tr><tr><td style="white-space:nowrap">SortOrder
          </td><td><i>String</i>
        </td><td>The sort order: A for ascending or D for descending.
        </td></tr><tr><td style="white-space:nowrap">OrdinalPosition
          </td><td><i>Int16</i>
        </td><td>The sequence number of the column in the index.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_connection_props" desc="CData JDBC Driver for Avro - RSBAvro - sys_connection_props: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_connection_props</h1>
       

    <div class="chapter_content" id="pg_table-sysconnectionprops">

<p>Returns information on the available connection properties and those set in the connection string.
</p>

<p>When querying this table, the config connection string should be used: 
<br/><pre lang="sql">jdbc:cdata:avro:config:</pre></p>

<p>This connection string enables you to query this table without a valid connection.
   </p>

<p>The following query retrieves all connection properties that have been set in the connection string or set through a default value:
<br/><pre lang="sql">SELECT * FROM sys_connection_props WHERE Value &lt;&gt; ''</pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">Name
          </td><td><i>String</i>
        </td><td>The name of the connection property.
        </td></tr><tr><td style="white-space:nowrap">ShortDescription
          </td><td><i>String</i>
        </td><td>A brief description.
        </td></tr><tr><td style="white-space:nowrap">Type
          </td><td><i>String</i>
        </td><td>The data type of the connection property.
        </td></tr><tr><td style="white-space:nowrap">Default
          </td><td><i>String</i>
        </td><td>The default value if one is not explicitly set.
        </td></tr><tr><td style="white-space:nowrap">Values
          </td><td><i>String</i>
        </td><td>A comma-separated list of possible values. A validation error is thrown if another value is specified.
        </td></tr><tr><td style="white-space:nowrap">Value
          </td><td><i>String</i>
        </td><td>The value you set or a preconfigured default.
        </td></tr><tr><td style="white-space:nowrap">Required
          </td><td><i>Boolean</i>
        </td><td>Whether the property is required to connect.
        </td></tr><tr><td style="white-space:nowrap">Category
          </td><td><i>String</i>
        </td><td>The category of the connection property. 
        </td></tr><tr><td style="white-space:nowrap">IsSessionProperty
          </td><td><i>String</i>
        </td><td>Whether the property is a session property, used to save information about the current connection.
		</td></tr><tr><td style="white-space:nowrap">Sensitivity
          </td><td><i>String</i>
        </td><td>The sensitivity level of the property. This informs whether the property is obfuscated in logging and authentication forms.
		</td></tr><tr><td style="white-space:nowrap">PropertyName
          </td><td><i>String</i>
        </td><td>A camel-cased truncated form of the connection property name.
		</td></tr><tr><td style="white-space:nowrap">Ordinal
          </td><td><i>Int32</i>
        </td><td>The index of the parameter.
		</td></tr><tr><td style="white-space:nowrap">CatOrdinal
          </td><td><i>Int32</i>
        </td><td>The index of the parameter category.
		</td></tr><tr><td style="white-space:nowrap">Hierarchy
          </td><td><i>String</i>
        </td><td>Shows dependent properties associated that need to be set alongside this one.
		</td></tr><tr><td style="white-space:nowrap">Visible
          </td><td><i>Boolean</i>
        </td><td>Informs whether the property is visible in the connection UI.
		</td></tr><tr><td style="white-space:nowrap">ETC
          </td><td><i>String</i>
        </td><td>Various miscellaneous information about the property.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_sqlinfo" desc="CData JDBC Driver for Avro - RSBAvro - sys_sqlinfo: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_sqlinfo</h1>
       

    <div class="chapter_content" id="pg_table-syssqlinfo">

<p>Describes the SELECT query processing that the driver can offload to the data source. 
          </p>

<p>		
  See <a href="#pg_overview">SQL Compliance</a> for SQL syntax details.

<h2>Discovering the Data Source's SELECT Capabilities</h2>
</p>

<p>Below is an example data set of SQL capabilities.
 Some aspects of SELECT functionality are returned in a comma-separated list if supported; otherwise, the column contains NO. </p>

<p>
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b></td><td>Description</td><td><b>Possible Values</b> </td></tr><tr><td style="white-space:nowrap">AGGREGATE_FUNCTIONS</td><td>Supported aggregation functions.</td><td>AVG, COUNT, MAX, MIN, SUM, DISTINCT</td></tr><tr><td style="white-space:nowrap">COUNT</td><td>Whether COUNT function is supported.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">IDENTIFIER_QUOTE_OPEN_CHAR</td><td>The opening character used to escape an identifier.</td><td>[</td></tr><tr><td style="white-space:nowrap">IDENTIFIER_QUOTE_CLOSE_CHAR</td><td>The closing character used to escape an identifier.</td><td>]</td></tr><tr><td style="white-space:nowrap">SUPPORTED_OPERATORS</td><td>A list of supported SQL operators.</td><td>=, &gt;, &lt;, &gt;=, &lt;=, &lt;&gt;, !=, LIKE, NOT LIKE, IN, NOT IN, IS NULL, IS NOT NULL, AND, OR</td></tr><tr><td style="white-space:nowrap">GROUP_BY</td><td>Whether GROUP BY is supported, and, if so, the degree of support.</td><td>NO, NO_RELATION, EQUALS_SELECT, SQL_GB_COLLATE</td></tr><tr><td style="white-space:nowrap">OJ_CAPABILITIES</td><td>The supported varieties of outer joins supported.</td><td>NO, LEFT, RIGHT, FULL, INNER, NOT_ORDERED, ALL_COMPARISON_OPS</td></tr><tr><td style="white-space:nowrap">OUTER_JOINS</td><td>Whether outer joins are supported.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">SUBQUERIES</td><td>Whether subqueries are supported, and, if so, the degree of support.</td><td>NO, COMPARISON, EXISTS, IN, CORRELATED_SUBQUERIES, QUANTIFIED</td></tr><tr><td style="white-space:nowrap">STRING_FUNCTIONS</td><td>Supported string functions.</td><td>LENGTH, CHAR, LOCATE, REPLACE, SUBSTRING, RTRIM, LTRIM, RIGHT, LEFT, UCASE, SPACE, SOUNDEX, LCASE, CONCAT, ASCII, REPEAT, OCTET, BIT, POSITION, INSERT, TRIM, UPPER, REGEXP, LOWER, DIFFERENCE, CHARACTER, SUBSTR, STR, REVERSE, PLAN, UUIDTOSTR, TRANSLATE,  TRAILING, TO, STUFF, STRTOUUID, STRING, SPLIT, SORTKEY, SIMILAR, REPLICATE, PATINDEX, LPAD, LEN, LEADING, KEY, INSTR, INSERTSTR, HTML, GRAPHICAL, CONVERT, COLLATION, CHARINDEX, BYTE</td></tr><tr><td style="white-space:nowrap">NUMERIC_FUNCTIONS</td><td>Supported numeric functions.</td><td>ABS, ACOS, ASIN, ATAN, ATAN2, CEILING, COS, COT, EXP, FLOOR, LOG, MOD, SIGN, SIN, SQRT, TAN, PI, RAND, DEGREES, LOG10, POWER, RADIANS, ROUND, TRUNCATE</td></tr><tr><td style="white-space:nowrap">TIMEDATE_FUNCTIONS</td><td>Supported date/time functions.</td><td>NOW, CURDATE, DAYOFMONTH, DAYOFWEEK, DAYOFYEAR, MONTH, QUARTER, WEEK, YEAR, CURTIME, HOUR, MINUTE, SECOND, TIMESTAMPADD, TIMESTAMPDIFF, DAYNAME, MONTHNAME, CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, EXTRACT</td></tr><tr><td style="white-space:nowrap">REPLICATION_SKIP_TABLES</td><td>Indicates tables skipped during replication.</td><td></td></tr><tr><td style="white-space:nowrap">REPLICATION_TIMECHECK_COLUMNS</td><td>A string array containing a list of columns which will be used to check for (in the given order) to use as a modified column during replication.</td><td></td></tr><tr><td style="white-space:nowrap">IDENTIFIER_PATTERN</td><td>String value indicating what string is valid for an identifier.</td><td></td></tr><tr><td style="white-space:nowrap">SUPPORT_TRANSACTION</td><td>Indicates if the provider supports transactions such as commit and rollback.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">DIALECT</td><td>Indicates the SQL dialect to use.</td><td></td></tr><tr><td style="white-space:nowrap">KEY_PROPERTIES</td><td>Indicates the properties which identify the uniform database.</td><td></td></tr><tr><td style="white-space:nowrap">SUPPORTS_MULTIPLE_SCHEMAS</td><td>Indicates if multiple schemas may exist for the provider.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">SUPPORTS_MULTIPLE_CATALOGS</td><td>Indicates if multiple catalogs may exist for the provider.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">DATASYNCVERSION</td><td>The CData Data Sync version needed to access this driver.</td><td>Standard, Starter, Professional, Enterprise</td></tr><tr><td style="white-space:nowrap">DATASYNCCATEGORY</td><td>The CData Data Sync category of this driver.</td><td>Source, Destination, Cloud Destination</td></tr><tr><td style="white-space:nowrap">SUPPORTSENHANCEDSQL</td><td>Whether enhanced SQL functionality beyond what is offered by the API is supported.</td><td>TRUE, FALSE</td></tr><tr><td style="white-space:nowrap">SUPPORTS_BATCH_OPERATIONS</td><td>Whether batch operations are supported.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">SQL_CAP</td><td>All supported SQL capabilities for this driver.</td><td>SELECT, INSERT, DELETE, UPDATE, TRANSACTIONS, ORDERBY, OAUTH, ASSIGNEDID, LIMIT, LIKE, BULKINSERT, COUNT, BULKDELETE, BULKUPDATE, GROUPBY, HAVING, AGGS, OFFSET, REPLICATE, COUNTDISTINCT, JOINS,  DROP, CREATE, DISTINCT, INNERJOINS, SUBQUERIES, ALTER, MULTIPLESCHEMAS, GROUPBYNORELATION, OUTERJOINS, UNIONALL, UNION, UPSERT, GETDELETED, CROSSJOINS, GROUPBYCOLLATE, MULTIPLECATS, FULLOUTERJOIN, MERGE, JSONEXTRACT, BULKUPSERT, SUM, SUBQUERIESFULL, MIN, MAX, JOINSFULL, XMLEXTRACT, AVG, MULTISTATEMENTS, FOREIGNKEYS, CASE, LEFTJOINS, COMMAJOINS, WITH, LITERALS, RENAME, NESTEDTABLES, EXECUTE, BATCH, BASIC, INDEX</td></tr><tr><td style="white-space:nowrap">PREFERRED_CACHE_OPTIONS</td><td>A string value specifies the preferred cacheOptions.</td><td></td></tr><tr><td style="white-space:nowrap">ENABLE_EF_ADVANCED_QUERY</td><td>Indicates if the driver directly supports advanced queries coming from Entity Framework. If not, queries will be handled client side.</td><td>YES, NO</td></tr><tr><td style="white-space:nowrap">PSEUDO_COLUMNS</td><td>A string array indicating the available pseudo columns.</td><td></td></tr><tr><td style="white-space:nowrap">MERGE_ALWAYS</td><td>If the value is true, The Merge Mode is forcibly executed in Data Sync.</td><td>TRUE, FALSE</td></tr><tr><td style="white-space:nowrap">REPLICATION_MIN_DATE_QUERY</td><td>A select query to return the replicate start datetime.</td><td></td></tr><tr><td style="white-space:nowrap">REPLICATION_MIN_FUNCTION</td><td>Allows a provider to specify the formula name to use for executing a server side min.</td><td></td></tr><tr><td style="white-space:nowrap">REPLICATION_START_DATE</td><td>Allows a provider to specify a replicate startdate.</td><td></td></tr><tr><td style="white-space:nowrap">REPLICATION_MAX_DATE_QUERY</td><td>A select query to return the replicate end datetime.</td><td></td></tr><tr><td style="white-space:nowrap">REPLICATION_MAX_FUNCTION</td><td>Allows a provider to specify the formula name to use for executing a server side max.</td><td></td></tr><tr><td style="white-space:nowrap">IGNORE_INTERVALS_ON_INITIAL_REPLICATE</td><td>A list of tables which will skip dividing the replicate into chunks on the initial replicate.</td><td></td></tr><tr><td style="white-space:nowrap">CHECKCACHE_USE_PARENTID</td><td>Indicates whether the CheckCache statement should be done against the parent key column.</td><td>TRUE, FALSE</td></tr><tr><td style="white-space:nowrap">CREATE_SCHEMA_PROCEDURES</td><td>Indicates stored procedures that can be used for generating schema files.</td><td></td></tr></table></center><p /></p>

<p>The following query retrieves the operators that can be used in the WHERE clause:
<br/><pre lang="sql">SELECT * FROM sys_sqlinfo WHERE Name = 'SUPPORTED_OPERATORS'</pre>
Note that individual tables may have different limitations or requirements on the WHERE clause; refer to the <a href="#pg_datamodel">Data Model</a> section for more information.

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">NAME
          </td><td><i>String</i>
        </td><td>A component of SQL syntax, or a capability that can be processed on the server.
        </td></tr><tr><td style="white-space:nowrap">VALUE
          </td><td><i>String</i>
        </td><td>Detail on the supported SQL or SQL syntax.
          </td></tr></table></center><p />
</p>

    </div>



  

  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - sys_identity" desc="CData JDBC Driver for Avro - RSBAvro - sys_identity: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>sys_identity</h1>
       

    <div class="chapter_content" id="pg_table-sysidentity">

<p>Returns information about attempted modifications.</p>

<p>The following query retrieves the Ids of the modified rows in a batch operation: 
          <br/><pre lang="sql">         SELECT * FROM sys_identity
          </pre>

          
<h2>Columns</h2>

          </p>

<p>        
        <p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Name</b>       </td><td><b>Type</b> 
        </td><td><b>Description</b>
        </td></tr><tr><td style="white-space:nowrap">Id
          </td><td><i>String</i>
        </td><td>The database-generated Id returned from a data modification operation.
        </td></tr><tr><td style="white-space:nowrap">Batch
          </td><td><i>String</i>
        </td><td>An identifier for the batch. 1 for a single operation.
        </td></tr><tr><td style="white-space:nowrap">Operation
          </td><td><i>String</i>
        </td><td>The result of the operation in the batch: INSERTED, UPDATED, or DELETED.
        </td></tr><tr><td style="white-space:nowrap">Message
          </td><td><i>String</i>
        </td><td>SUCCESS or an error message if the update in the batch failed.
          </td></tr></table></center><p />

</p>

    </div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Connection String Options" desc="CData JDBC Driver for Avro - RSBAvro - Connection String Options: The connection string properties describe the various options that can be used to establish a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Connection String Options</h1>
       


<div class="chapter_content" id="Connection">
<p>The connection string properties are the various options that can be used to establish a connection. This section provides a complete list of the options you can configure in the connection string for this provider. Click the links for further details.</p>



For more information on establishing a connection, see <a href="#pg_connectionj">Establishing a Connection</a>.












<p>
<a href="#RSBAvro_c_Authentication"><h2>Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AuthScheme">AuthScheme</a></td><td>The type of authentication to use when connecting to remote services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AccessKey">AccessKey</a></td><td>Your account access key. This value is accessible from your security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SecretKey">SecretKey</a></td><td>Your account secret key. This value is accessible from your security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ApiKey">ApiKey</a></td><td>The API Key used to identify the user to IBM Cloud.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_User">User</a></td><td>The user account used to authenticate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Password">Password</a></td><td>The password used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SharePointEdition">SharePointEdition</a></td><td>The edition of SharePoint being used. Set either SharePointOnline or SharePointOnPremise.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Connection"><h2>Connection</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_ConnectionType">ConnectionType</a></td><td>Specifies the file storage service, server, or file access protocol through which your Avro files are stored and retreived.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_URI">URI</a></td><td>The Uniform Resource Identifier (URI) for the Avro resource location.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DataModel">DataModel</a></td><td>Specifies the data model to use when parsing Avro documents and generating the database metadata.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Region">Region</a></td><td>The hosting region for your S3-like Web Services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProjectId">ProjectId</a></td><td>The Id of the project where your Google Cloud Storage instance resides.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OracleNamespace">OracleNamespace</a></td><td>The Oracle Cloud Object Storage namespace to use.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_StorageBaseURL">StorageBaseURL</a></td><td>The URL of a cloud storage service provider.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseVirtualHosting">UseVirtualHosting</a></td><td>If true (default), buckets will be referenced in the request using the hosted-style request: http://yourbucket.s3.amazonaws.com/yourobject. If set to false, the bean will use the path-style request: http://s3.amazonaws.com/yourbucket/yourobject. Note that this property will be set to false, in case of an S3 based custom service when the CustomURL is specified.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseLakeFormation">UseLakeFormation</a></td><td>When this property is set to true, AWSLakeFormation service will be used to retrieve temporary credentials, which enforce access policies against the user based on the configured IAM role. The service can be used when authenticating through OKTA, ADFS, AzureAD, PingFederate, while providing a SAML assertion.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_AWSAuthentication"><h2>AWS Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a></td><td>Your AWS account access key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a></td><td>Your AWS account secret key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSRoleARN">AWSRoleARN</a></td><td>The Amazon Resource Name of the role to use when authenticating.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSPrincipalARN">AWSPrincipalARN</a></td><td>The ARN of the SAML Identity provider in your AWS account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSRegion">AWSRegion</a></td><td>The hosting region for your Amazon Web Services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSCredentialsFile">AWSCredentialsFile</a></td><td>The path to the AWS Credentials File to be used for authentication.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSCredentialsFileProfile">AWSCredentialsFileProfile</a></td><td>The name of the profile to be used from the supplied AWSCredentialsFile.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSSessionToken">AWSSessionToken</a></td><td>Your AWS session token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSExternalId">AWSExternalId</a></td><td>A unique identifier that might be required when you assume a role in another account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MFASerialNumber">MFASerialNumber</a></td><td>The serial number of the MFA device if one is being used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MFAToken">MFAToken</a></td><td>The temporary token available from your MFA device.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CredentialsLocation">CredentialsLocation</a></td><td>The location of the settings file where MFA credentials are saved.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_TemporaryTokenDuration">TemporaryTokenDuration</a></td><td>The amount of time (in seconds) a temporary token will last.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ServerSideEncryption">ServerSideEncryption</a></td><td>When activated, file uploads into Amazon S3 buckets will be server-side encrypted.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_AzureAuthentication"><h2>Azure Authentication</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AzureStorageAccount">AzureStorageAccount</a></td><td>The name of your Azure storage account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureAccessKey">AzureAccessKey</a></td><td>The storage key associated with your Azure account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureSharedAccessSignature">AzureSharedAccessSignature</a></td><td>A shared access key signature that may be used for authentication.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureTenant">AzureTenant</a></td><td>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureEnvironment">AzureEnvironment</a></td><td>The Azure Environment to use when establishing a connection.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_SSO"><h2>SSO</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSOLoginURL">SSOLoginURL</a></td><td>The identity provider's login URL.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSOProperties">SSOProperties</a></td><td>Additional properties required to connect to the identity provider in a semicolon-separated list.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSOExchangeUrl">SSOExchangeUrl</a></td><td>The URL used for consuming the SAML response and exchanging it for service specific credentials.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_OAuth"><h2>OAuth</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a></td><td>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a></td><td>The version of OAuth being used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a></td><td>The client Id assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a></td><td>The client secret assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a></td><td>The access token for connecting using OAuth.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessTokenSecret">OAuthAccessTokenSecret</a></td><td>The OAuth access token secret for connecting using OAuth.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a></td><td>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH . Alternatively, you can hold this location in memory by specifying a value starting with 'memory://'.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CallbackURL">CallbackURL</a></td><td>The OAuth callback URL to return to when authenticating. This value must match the callback URL you specify in your app settings.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Scope">Scope</a></td><td>Specify scope to obtain the initial access and refresh token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a></td><td>The grant type for the OAuth flow.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthPasswordGrantMode">OAuthPasswordGrantMode</a></td><td>How to pass Client Id and Secret with OAuthGrantType is set to Password.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthIncludeCallbackURL">OAuthIncludeCallbackURL</a></td><td>Whether to include the callback URL in an access token request.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAuthorizationURL">OAuthAuthorizationURL</a></td><td>The authorization URL for the OAuth service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessTokenURL">OAuthAccessTokenURL</a></td><td>The URL to retrieve the OAuth access token from.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRefreshTokenURL">OAuthRefreshTokenURL</a></td><td>The URL to refresh the OAuth token from.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRequestTokenURL">OAuthRequestTokenURL</a></td><td>The URL the service provides to retrieve request tokens from. This is required in OAuth 1.0.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthVerifier">OAuthVerifier</a></td><td>The verifier code returned from the OAuth authorization URL.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AuthToken">AuthToken</a></td><td>The authentication token used to request and obtain the OAuth Access Token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AuthKey">AuthKey</a></td><td>The authentication secret used to request and obtain the OAuth Access Token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthParams">OAuthParams</a></td><td>A comma-separated list of other parameters to submit in the request for the OAuth access token in the format paramname=value.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRefreshToken">OAuthRefreshToken</a></td><td>The OAuth refresh token for the corresponding OAuth access token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthExpiresIn">OAuthExpiresIn</a></td><td>The lifetime in seconds of the OAuth AccessToken.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthTokenTimestamp">OAuthTokenTimestamp</a></td><td>The Unix epoch timestamp in milliseconds when the current Access Token was created.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_JWTOAuth"><h2>JWT OAuth</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a></td><td>The JWT Certificate store.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a></td><td>The type of key store containing the JWT Certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertPassword">OAuthJWTCertPassword</a></td><td>The password for the OAuth JWT certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a></td><td>The subject of the OAuth JWT certificate.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Kerberos"><h2>Kerberos</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_KerberosKDC">KerberosKDC</a></td><td>The Kerberos Key Distribution Center (KDC) service used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosRealm">KerberosRealm</a></td><td>The Kerberos Realm used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosSPN">KerberosSPN</a></td><td>The service principal name (SPN) for the Kerberos Domain Controller.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosKeytabFile">KerberosKeytabFile</a></td><td>The Keytab file containing your pairs of Kerberos principals and encrypted keys.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosServiceRealm">KerberosServiceRealm</a></td><td>The Kerberos realm of the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosServiceKDC">KerberosServiceKDC</a></td><td>The Kerberos KDC of the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosTicketCache">KerberosTicketCache</a></td><td>The full file path to an MIT Kerberos credential cache file.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_SSL"><h2>SSL</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCert">SSLClientCert</a></td><td>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertType">SSLClientCertType</a></td><td>The type of key store containing the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertPassword">SSLClientCertPassword</a></td><td>The password for the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a></td><td>The subject of the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLMode">SSLMode</a></td><td>The authentication mechanism to be used when connecting to the FTP or FTPS server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLServerCert">SSLServerCert</a></td><td>The certificate to be accepted from the server when connecting using TLS/SSL.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_SSH"><h2>SSH</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSHAuthMode">SSHAuthMode</a></td><td>The authentication method used when establishing an SSH Tunnel to the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a></td><td>A certificate to be used for authenticating the SSHUser.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertPassword">SSHClientCertPassword</a></td><td>The password of the SSHClientCert key if it has one.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertSubject">SSHClientCertSubject</a></td><td>The subject of the SSH client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertType">SSHClientCertType</a></td><td>The type of SSHClientCert private key.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHUser">SSHUser</a></td><td>The SSH user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHPassword">SSHPassword</a></td><td>The SSH password.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Firewall"><h2>Firewall</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_FirewallType">FirewallType</a></td><td>The protocol used by a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallServer">FirewallServer</a></td><td>The name or IP address of a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallPort">FirewallPort</a></td><td>The TCP port for a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallUser">FirewallUser</a></td><td>The user name to use to authenticate with a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallPassword">FirewallPassword</a></td><td>A password used to authenticate to a proxy-based firewall.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Proxy"><h2>Proxy</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a></td><td>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyServer">ProxyServer</a></td><td>The hostname or IP address of a proxy to route HTTP traffic through.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyPort">ProxyPort</a></td><td>The TCP port the ProxyServer proxy is running on.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a></td><td>The authentication type to use to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyUser">ProxyUser</a></td><td>A user name to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a></td><td>A password to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxySSLType">ProxySSLType</a></td><td>The SSL type to use when connecting to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyExceptions">ProxyExceptions</a></td><td>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Logging"><h2>Logging</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_Logfile">Logfile</a></td><td>A filepath which designates the name and location of the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Verbosity">Verbosity</a></td><td>The verbosity level that determines the amount of detail included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_LogModules">LogModules</a></td><td>Core modules to be included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxLogFileSize">MaxLogFileSize</a></td><td>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxLogFileCount">MaxLogFileCount</a></td><td>A string specifying the maximum file count of log files.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Schema"><h2>Schema</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_Location">Location</a></td><td>A path to the directory that contains the schema files defining tables, views, and stored procedures.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_BrowsableSchemas">BrowsableSchemas</a></td><td>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Tables">Tables</a></td><td>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Views">Views</a></td><td>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FlattenObjects">FlattenObjects</a></td><td>Set FlattenObjects to true to flatten object properties into columns of their own. Otherwise, objects nested in arrays are returned as strings of JSON.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FlattenArrays">FlattenArrays</a></td><td>By default, nested arrays are returned as strings. The FlattenArrays property can be used to flatten the elements of nested arrays into columns of their own. Set FlattenArrays to the number of elements you want to return from nested arrays.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Caching"><h2>Caching</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AutoCache">AutoCache</a></td><td>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheDriver">CacheDriver</a></td><td>The database driver used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheConnection">CacheConnection</a></td><td>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheLocation">CacheLocation</a></td><td>Specifies the path to the cache when caching to a file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheTolerance">CacheTolerance</a></td><td>The tolerance for stale data in the cache specified in seconds when using AutoCache .</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Offline">Offline</a></td><td>Use offline mode to get the data from the cache instead of the live source.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheMetadata">CacheMetadata</a></td><td>This property determines whether or not to cache the table metadata to a file store.</td></tr>
</table></center><p>
<a href="#RSBAvro_c_Miscellaneous"><h2>Miscellaneous</h2></a>
<p>
<hr/>
<center>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AggregateFiles">AggregateFiles</a></td><td>When set to true, the provider will aggregate all the files in URI directory into a single result.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_BatchSize">BatchSize</a></td><td>The maximum size of each batch operation to submit.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Charset">Charset</a></td><td>Specifies the session character set for encoding and decoding character data transferred to and from the Avro file. The default value is UTF-8.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ConnectionLifeTime">ConnectionLifeTime</a></td><td>The maximum lifetime of a connection in seconds. Once the time has elapsed, the connection object is disposed.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ConnectOnOpen">ConnectOnOpen</a></td><td>This property specifies whether to connect to the Avro when the connection is opened.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DeleteDownloadedFiles">DeleteDownloadedFiles</a></td><td>When set to true, the provider will delete parsed Avro files downloaded from cloud sources.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DirectoryRetrievalDepth">DirectoryRetrievalDepth</a></td><td>Limit the subfolders recursively scanned when IncludeSubdirectories is enabled.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ExcludeFiles">ExcludeFiles</a></td><td>Comma-separated list of file extensions to exclude from the set of the files modeled as tables.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FolderId">FolderId</a></td><td>The ID of a folder in Google Drive. If set, the resource location specified by the URI is relative to the Folder ID for all operations.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeDropboxTeamResources">IncludeDropboxTeamResources</a></td><td>Indicates if you want to include Dropbox team files and folders.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeFiles">IncludeFiles</a></td><td>Comma-separated list of file extensions to include into the set of the files modeled as tables.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeItemsFromAllDrives">IncludeItemsFromAllDrives</a></td><td>Whether Google Drive shared drive items should be included in results. If not present or set to false, then shared drive items are not returned.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeSubdirectories">IncludeSubdirectories</a></td><td>Whether to read files from nested folders. In the case of a name collision, table names are prefixed by the underscore-separated folder names.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_InsertMode">InsertMode</a></td><td>The behavior when using bulk INSERTs to create Avro files.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxRows">MaxRows</a></td><td>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MetadataDiscoveryURI">MetadataDiscoveryURI</a></td><td>Used when aggregating multiple files into one table, this property specifies a specific file to read to determined the aggregated table schema.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Other">Other</a></td><td>These hidden properties are used only in specific use cases.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PageSize">PageSize</a></td><td>(Optional) PageSize value.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PathSeparator">PathSeparator</a></td><td>Determines the character which will be used to replace the file separator.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolIdleTimeout">PoolIdleTimeout</a></td><td>The allowed idle time for a connection before it is closed.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolMaxSize">PoolMaxSize</a></td><td>The maximum connections in the pool.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolMinSize">PoolMinSize</a></td><td>The minimum number of connections in the pool.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolWaitTime">PoolWaitTime</a></td><td>The max seconds to wait for an available connection.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PseudoColumns">PseudoColumns</a></td><td>This property indicates whether or not to include pseudo columns as columns to the table.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_RTK">RTK</a></td><td>The runtime key used for licensing.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_TemporaryLocalFolder">TemporaryLocalFolder</a></td><td>The path, or URI, to the folder that is used to temporarily download avro file(s).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Timeout">Timeout</a></td><td>The value in seconds until the timeout error is thrown, canceling the operation.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseConnectionPooling">UseConnectionPooling</a></td><td>This property enables connection pooling.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UserDefinedViews">UserDefinedViews</a></td><td>A filepath pointing to the JSON configuration file containing your custom views.</td></tr>
</table></center></div>




  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Authentication" desc="CData JDBC Driver for Avro - RSBAvro - Authentication: The type of authentication to use when connecting to remote services.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Authentication</h1>
       
<div class="chapter_content" id="RSBAvro_c_Authentication">
<p>
<p>This section provides a complete list of the Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AuthScheme">AuthScheme</a></td><td>The type of authentication to use when connecting to remote services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AccessKey">AccessKey</a></td><td>Your account access key. This value is accessible from your security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SecretKey">SecretKey</a></td><td>Your account secret key. This value is accessible from your security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ApiKey">ApiKey</a></td><td>The API Key used to identify the user to IBM Cloud.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_User">User</a></td><td>The user account used to authenticate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Password">Password</a></td><td>The password used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SharePointEdition">SharePointEdition</a></td><td>The edition of SharePoint being used. Set either SharePointOnline or SharePointOnPremise.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AuthScheme" desc="CData JDBC Driver for Avro - RSBAvro - AuthScheme: The type of authentication to use when connecting to remote services.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AuthScheme</h1>
       
<div class="chapter_content" id="RSBAvro_p_AuthScheme">
<p>The type of authentication to use when connecting to remote services.</p>





<h3>Possible Values</h3>
Basic, AwsRootKeys, OneLogin, AwsEC2Roles, None, SFTP, AwsIAMRoles, Negotiate, ADFS, OAuthJWT, Okta, GCPInstanceAccount, PingFederate, Digest, AwsMFA, OAuthPassword, AwsTempCredentials, OAuthClient, AwsCredentialsFile, OAuthPKCE, AzureAD, AzureMSI, , AzureServicePrincipal, AzureServicePrincipalCert, AccessKey, AzureStorageSAS, HMAC, OAuth

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>
<h3> Amazon S3 </h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Amazon S3</b>:

<ul><li>AwsRootKeys: Set this to use the root user access key and secret. Useful for quickly testing, but production use cases are encouraged to use something with narrowed permissions.</li><li>AwsEC2Roles: Set this to automatically use IAM Roles assigned to the EC2 machine the CData JDBC Driver for Avro is currently running on.</li><li>AwsIAMRoles: Set to use IAM Roles for the connection.</li><li>ADFS: Set to use a single sign on connection with ADFS as the identify provider.</li><li>OKTA: Set to use a single sign on connection with OKTA as the identify provider.</li><li>PingFederate: Set to use a single sign on connection with PingFederate as the identify provider.</li><li>AwsMFA: Set to use multi factor authentication.</li><li>AwsTempCredentials: Set this to leverage temporary security credentials alongside a session token to connect.</li><li>AwsCredentialsFile: Set to use a credential file for authentication.</li><li>AzureAD: Set to use a single sign on connection with AzureAD as the identify provider.</li></ul>
</p>

<p>
<h3> Various Azure Services </h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Azure Blob Storage</b>, <b>Azure Data Lake Storage Gen1</b>, <b>Azure Data Lake Storage Gen2</b>, <b>Azure Data Lake Storage Gen2 SSL</b>, or <b>OneDrive</b>:
<ul><li>AzureAD: Set this to perform Azure Active Directory OAuth authentication.</li><li>AzureMSI: Set this to automatically obtain Managed Service Identity credentials when running on an Azure VM.</li><li>AzureServicePrincipal: Set this to authenticate as an Azure Service Principal.</li><li>AzureServicePrincipalCert: Set this to authenticate as an Azure Service Principal using a Certificate.</li><li>AccessKey: Set this to authenticate with the storage key associated with your Avro account.</li><li>AzureStorageSAS: Set this to authenticate with Shared Access Signature (SAS).</li></ul>
</p>

<p>
<h3>Azure Files</h3>

Only the following option is available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Azure Files</b>:</p>

<p><ul><li>AccessKey: Set this to authenticate with the storage key associated with your Avro account.</li><li>AzureStorageSAS: Set this to authenticate with Shared Access Signature (SAS).</li></ul>
</p>

<p>
<h3>Box</h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Box</b>:
<ul><li>OAuth: Uses either OAuth1 or OAuth2, with the specific flow being determined by the <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to determine what version of OAuth is used.</li><li>OAuthJWT: Uses OAuth2 with the JWT bearer grant type. <a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a> and <a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a> determine what certificate the JWT is signed with. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li></ul></p>

<p>
<h3>Dropbox</h3>
</p>

<p>Only the following option is available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Dropbox</b>:</p>

<p>OAuth: Uses either OAuth1 or OAuth2, with the specific flow being determined by the <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to determine what version of OAuth is used.</p>

<p>
<h3>FTP(S)</h3>
</p>

<p>Only the following option is available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>FTP</b> or <b>FTPS</b>:</p>

<p>Basic: Basic user credentials (user/password).
</p>

<p>
<h3> Various Google Services </h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> points <b>Google Cloud Storage</b> or <b>Google Drive</b>:

<ul><li>OAuth: Uses either OAuth1 or OAuth2, with the specific flow being determined by the <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to determine what version of OAuth is used.</li><li>OAuthJWT: Uses OAuth2 with the JWT bearer grant type. <a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a> and <a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a> determine what certificate the JWT is signed with. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li><li>GCPInstanceAccount: When running on a GCP virtual machine, the provider can authenticate using a service account tied to the virtual machine.</li></ul>
</p>

<p>
<h3>HDFS</h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>HDFS</b> or <b>HDFS Secure</b>:
<ul><li>None: No authentication is used.</li><li>Negotiate: Kerberos authentication.</li></ul>
</p>

<p>
<h3> HTTP </h3>
</p>

<p>The following options are available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>HTTP</b> or <b>HTTPS</b>:
<ul><li>None: No authentication is used.</li><li>Basic: Basic user/password authentication.</li><li>Digest: Uses HTTP Digest authentication with <a href="#RSBAvro_p_User">User</a> and <a href="#RSBAvro_p_Password">Password</a>.</li><li>OAuth: Uses either OAuth1 or OAuth2, with the specific flow being determined by the <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to determine what version of OAuth is used.
<ul><li>Bearer Token authentication:  <u>AuthScheme</u>=OAuth, <a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a>=Off, and <a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a>=<i>Bearer token value</i>. </li></ul></li><li>OAuthJWT: Uses OAuth2 with the JWT bearer grant type. <a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a> and <a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a> determine what certificate the JWT is signed with. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li><li>OAuthPassword: Uses OAuth2 with the password grant type. <a href="#RSBAvro_p_User">User</a> and <a href="#RSBAvro_p_Password">Password</a> are the credentials. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li><li>OAuthClient: Uses OAuth2 with the client credentials grant type. <a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a> and <a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a> are the credentials. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li><li>OAuthPKCE: Uses OAuth2 with the authorization code grant type and PKCE extension. <a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a> is the credential. <a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a> must be set to 2.0.</li></ul></p>

<p>

<h3> IBM Cloud Object Storage </h3>
</p>

<p>The following options are also available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>IBM Object Storage Source</b>:

<ul><li>OAuth: Uses either OAuth with the specific flow being determined by the <a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a>. <a href="#RSBAvro_p_ApiKey">ApiKey</a> must be set to successfully complete this flow.</li><li>HMAC: Uses <a href="#RSBAvro_p_AccessKey">AccessKey</a> and <a href="#RSBAvro_p_SecretKey">SecretKey</a> to authenticate to IBM Cloud Object Storage.</li></ul>
</p>

<p>
<h3>Oracle Cloud Storage</h3>
</p>

<p>Only the following option is available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>Oracle Cloud Storage</b>:</p>

<p>HMAC: Uses <a href="#RSBAvro_p_AccessKey">AccessKey</a> and <a href="#RSBAvro_p_SecretKey">SecretKey</a> to authenticate to the Oracle Cloud Storage.
</p>

<p>
<h3>SFTP</h3>
</p>

<p>This <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> defaults to using an <u>AuthScheme</u> called <b>SFTP</b>, but the authentication method is actually controlled using the <a href="#RSBAvro_p_SSHAuthMode">SSHAuthMode</a> property. See this property's documentation for further information.
</p>

<p>
<h3> SharePoint REST </h3>
</p>

<p>The following options are also available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>SharePoint REST</b>:
<ul><li>AzureAD: Set this to perform Azure Active Directory OAuth authentication.</li><li>AzureMSI: Set this to automatically obtain Managed Service Identity credentials when running on an Azure VM.</li><li>AzureServicePrincipal: Set this to authenticate as an Azure Service Principal.</li><li>AzureServicePrincipalCert: Set this to authenticate as an Azure Service Principal using a Certificate.</li></ul></p>

<p>
<h3> SharePoint SOAP </h3>
</p>

<p>The following options are also available when <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> is set to <b>SharePoint SOAP</b>:

<ul><li>Basic: Use basic user/password credentials to authenticate.</li><li>ADFS: Set to use a single sign on connection with ADFS as the identify provider.</li><li>Okta: Set to use a single sign on connection with OKTA as the identify provider.</li><li>OneLogin: Set to use a single sign on connection with OneLogin as the identify provider.</li></ul>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AccessKey" desc="CData JDBC Driver for Avro - RSBAvro - AccessKey: Your account access key. This value is accessible from your security credentials page.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AccessKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_AccessKey">
<p>Your account access key. This value is accessible from your security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your account access key. This value is accessible from your security credentials page depending on the service you are using.
</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SecretKey" desc="CData JDBC Driver for Avro - RSBAvro - SecretKey: Your account secret key. This value is accessible from your security credentials page.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SecretKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_SecretKey">
<p>Your account secret key. This value is accessible from your security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your account secret key. This value is accessible from your  security credentials page depending on the service you are using.
</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ApiKey" desc="CData JDBC Driver for Avro - RSBAvro - ApiKey: The API Key used to identify the user to IBM Cloud.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ApiKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_ApiKey">
<p>The API Key used to identify the user to IBM Cloud.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Access to resources in the Avro REST API is governed by an API key in order to retrieve token.  An API Key can be created by navigating to Manage --&gt; Access (IAM) --&gt; Users and clicking 'Create'.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - User" desc="CData JDBC Driver for Avro - RSBAvro - User: The user account used to authenticate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>User</h1>
       
<div class="chapter_content" id="RSBAvro_p_User">
<p>The user account used to authenticate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p></p>

<p>Together with <a href="#RSBAvro_p_Password">Password</a>, this field is used to authenticate against the server.</p>

<p></p>

<p>This property will refer to different things based on the context, namely the value of <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> and <a href="#RSBAvro_p_AuthScheme">AuthScheme</a>:
<ul><li>ConnectionType=AmazonS3
<ul><li>AuthScheme=ADFS: This refers to your ADFS username.</li><li>AuthScheme=Okta: This refers to your Okta username.</li><li>AuthScheme=PingFederate: This refers to your PingFederate username.</li></ul></li><li>ConnectionType=FTP(S)
<ul><li>AuthScheme=Basic: This refers to your FTP(S) server username.</li></ul></li><li>ConnectionType=HDFS/HDFS Secure
<ul><li>AuthScheme=Negotiate: This refers to your HDFS intance username.</li></ul></li><li>ConnectionType=HTTP(S)
<ul><li>AuthScheme=Basic: This refers to the username associated with the HTTP stream.</li><li>AuthScheme=Digest: This refers to the username associated with the HTTP stream.</li><li>AuthScheme=OAuthPassword: This refers to the username associated with the HTTP stream.</li></ul></li><li>ConnectionType=SharePoint SOAP
<ul><li>AuthScheme=Basic: This refers to your SharePoint account username.</li><li>AuthScheme=ADFS: This refers to your ADFS username.</li><li>AuthScheme=Okta: This refers to your Okta username.</li><li>AuthScheme=OneLogin: This refers to your OneLogin username.</li></ul></li></ul>









</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Password" desc="CData JDBC Driver for Avro - RSBAvro - Password: The password used to authenticate the user.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Password</h1>
       
<div class="chapter_content" id="RSBAvro_p_Password">
<p>The password used to authenticate the user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p></p>

<p>The <a href="#RSBAvro_p_User">User</a> and <u>Password</u> are together used to authenticate with the server.</p>

<p></p>

<p>This property will refer to different things based on the context, namely the value of <a href="#RSBAvro_p_ConnectionType">ConnectionType</a> and <a href="#RSBAvro_p_AuthScheme">AuthScheme</a>:
<ul><li>ConnectionType=AmazonS3
<ul><li>AuthScheme=ADFS: This refers to your ADFS password.</li><li>AuthScheme=Okta: This refers to your Okta password.</li><li>AuthScheme=PingFederate: This refers to your PingFederate password.</li></ul></li><li>ConnectionType=FTP(S)
<ul><li>AuthScheme=Basic: This refers to your FTP(S) server password.</li></ul></li><li>ConnectionType=HDFS/HDFS Secure
<ul><li>AuthScheme=Negotiate: This refers to your HDFS intance password.</li></ul></li><li>ConnectionType=HTTP(S)
<ul><li>AuthScheme=Basic: This refers to the password associated with the HTTP stream.</li><li>AuthScheme=Digest: This refers to the password associated with the HTTP stream.</li><li>AuthScheme=OAuthPassword: This refers to the password associated with the HTTP stream.</li></ul></li><li>ConnectionType=SharePoint SOAP
<ul><li>AuthScheme=Basic: This refers to your SharePoint account password.</li><li>AuthScheme=ADFS: This refers to your ADFS password.</li><li>AuthScheme=Okta: This refers to your Okta password.</li><li>AuthScheme=OneLogin: This refers to your OneLogin password.</li></ul></li></ul></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SharePointEdition" desc="CData JDBC Driver for Avro - RSBAvro - SharePointEdition: The edition of SharePoint being used. Set either SharePointOnline or SharePointOnPremise.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SharePointEdition</h1>
       
<div class="chapter_content" id="RSBAvro_p_SharePointEdition">
<p>The edition of SharePoint being used. Set either SharePointOnline or SharePointOnPremise.</p>





<h3>Possible Values</h3>
SharePointOnline, SharePointOnPremise

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"SharePointOnline"</p>

<h3>Remarks</h3>


<p>The edition of SharePoint being used. Set either SharePointOnline or SharePointOnPremise.

</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Connection" desc="CData JDBC Driver for Avro - RSBAvro - Connection: Specifies the file storage service, server, or file access protocol through which your Avro files are stored and retreived.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Connection</h1>
       
<div class="chapter_content" id="RSBAvro_c_Connection">
<p>
<p>This section provides a complete list of the Connection properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_ConnectionType">ConnectionType</a></td><td>Specifies the file storage service, server, or file access protocol through which your Avro files are stored and retreived.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_URI">URI</a></td><td>The Uniform Resource Identifier (URI) for the Avro resource location.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DataModel">DataModel</a></td><td>Specifies the data model to use when parsing Avro documents and generating the database metadata.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Region">Region</a></td><td>The hosting region for your S3-like Web Services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProjectId">ProjectId</a></td><td>The Id of the project where your Google Cloud Storage instance resides.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OracleNamespace">OracleNamespace</a></td><td>The Oracle Cloud Object Storage namespace to use.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_StorageBaseURL">StorageBaseURL</a></td><td>The URL of a cloud storage service provider.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseVirtualHosting">UseVirtualHosting</a></td><td>If true (default), buckets will be referenced in the request using the hosted-style request: http://yourbucket.s3.amazonaws.com/yourobject. If set to false, the bean will use the path-style request: http://s3.amazonaws.com/yourbucket/yourobject. Note that this property will be set to false, in case of an S3 based custom service when the CustomURL is specified.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseLakeFormation">UseLakeFormation</a></td><td>When this property is set to true, AWSLakeFormation service will be used to retrieve temporary credentials, which enforce access policies against the user based on the configured IAM role. The service can be used when authenticating through OKTA, ADFS, AzureAD, PingFederate, while providing a SAML assertion.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ConnectionType" desc="CData JDBC Driver for Avro - RSBAvro - ConnectionType: Specifies the file storage service, server, or file access protocol through which your Avro files are stored and retreived.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ConnectionType</h1>
       
<div class="chapter_content" id="RSBAvro_p_ConnectionType">
<p>Specifies the file storage service, server, or file access protocol through which your Avro files are stored and retreived.</p>





<h3>Possible Values</h3>
Auto, Local, Amazon S3, Azure Blob Storage, Azure Data Lake Storage Gen1, Azure Data Lake Storage Gen2, Azure Data Lake Storage Gen2 SSL, Azure Files, Box, Dropbox, FTP, FTPS, Google Cloud Storage, Google Drive, HDFS, HDFS Secure, HTTP, HTTPS, IBM Object Storage Source, OneDrive, Oracle Cloud Storage, SFTP, SharePoint REST, SharePoint SOAP

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Auto"</p>

<h3>Remarks</h3>


<p>Set the ConnectionType to one of the following:
<ul><li>Auto: The driver infers the connection type from the syntax of the provided <a href="#RSBAvro_p_URI">URI</a>.
  </li><li>Local: Avro files stored on your local machine.
  </li><li>Amazon S3
  </li><li>Azure Blob Storage
  </li><li>Azure Data Lake Storage Gen1
  </li><li>Azure Data Lake Storage Gen2
  </li><li>Azure Data Lake Storage Gen2 SSL
  </li><li>Azure Files
  </li><li>Box
  </li><li>Dropbox
  </li><li>FTP
  </li><li>FTPS
  </li><li>Google Cloud Storage
  </li><li>Google Drive
  </li><li>HDFS
  </li><li>HDFS Secure
  </li><li>HTTP: Connects to Avro files hosted on HTTP streams.
  </li><li>HTTPS: Connects to Avro files hosted on HTTPS streams.
  </li><li>IBM Object Storage Source
  </li><li>OneDrive
  </li><li>Oracle Cloud Storage
  </li><li>SFTP
  </li><li>SharePoint REST
  </li><li>SharePoint SOAP</li></ul>

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - URI" desc="CData JDBC Driver for Avro - RSBAvro - URI: The Uniform Resource Identifier (URI) for the Avro resource location.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>URI</h1>
       
<div class="chapter_content" id="RSBAvro_p_URI">
<p>The Uniform Resource Identifier (URI) for the Avro resource location.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Set the <u>URI</u> property to specify a path to a file or stream. </p>

<p><b>NOTE:</b> 
<ul><li>This connection property requires that you set <a href="#RSBAvro_p_ConnectionType">ConnectionType</a>.</li><li>If specifying a directory path, it is generally recommended to end the URI with a trailing path separator character, as an example 'folder1/' instead of 'folder1'.</li></ul></p>

<p>See  for more advanced features available for parsing and merging multiple files.
</p>

<p>Below are examples of the <u>URI</u> formats for the available data sources:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Service provider</b>   </td><td><b>URI formats</b>                                                                                                                                                                                                                                                                              </td><td></td></tr><tr><td style="white-space:nowrap">Local                     </td><td><b>Single File Path One table</b>
<p>localPath</p>

<p>file://localPath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> localPath</p>

<p>file://localPath   </p>
</td><td></td></tr><tr><td style="white-space:nowrap">HTTP or HTTPS             </td><td>http://remoteStream
<p>https://remoteStream</p>
                                                                                                                                                                                                                                                  </td><td></td></tr><tr><td style="white-space:nowrap">Amazon S3                 </td><td><b>Single File Path One table</b>
<p>s3://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> s3://remotePath                                              </p>
</td><td></td></tr><tr><td style="white-space:nowrap">Azure Blob Storage        </td><td><b>Single File Path One table</b>
<p>azureblob://mycontainer/myblob/ </p>

<p><b>Directory Path (one table per file)</b></p>

<p> azureblob://mycontainer/myblob/              </p>
</td><td></td></tr><tr><td style="white-space:nowrap">OneDrive                  </td><td><b>Single File Path One table</b>
<p>onedrive://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> onedrive://remotePath                                  </p>
</td><td></td></tr><tr><td style="white-space:nowrap">Google Cloud Storage      </td><td><b>Single File Path One table</b>
<p>gs://bucket/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> gs://bucket/remotePath                                </p>
</td><td></td></tr><tr><td style="white-space:nowrap">Google Drive              </td><td><b>Single File Path One table</b>
<p>gdrive://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> gdrive://remotePath                                      </p>
</td><td></td></tr><tr><td style="white-space:nowrap">Box                       </td><td><b>Single File Path One table</b>
<p>box://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> box://remotePath                                            </p>
</td><td></td></tr><tr><td style="white-space:nowrap">FTP or FTPS               </td><td><b>Single File Path One table</b>
<p>ftp://server:port/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> ftp://server:port/remotePath                    </p>
</td><td></td></tr><tr><td style="white-space:nowrap">SFTP                      </td><td><b>Single File Path One table</b>
<p>sftp://server:port/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> sftp://server:port/remotePath                  </p>
</td><td></td></tr><tr><td style="white-space:nowrap">Sharepoint                </td><td><b>Single File Path One table</b>
<p>sp://https://server/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> sp://https://server/remotePath                </p>
</td><td></td></tr></table></center><p />


<h2>Example Connection Strings and Queries</h2>
</p>

<p>Below are example connection strings to Avro files or streams.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Service provider</b>   </td><td><b>URI formats</b>                                                                                                                                                                                                                                                                   </td><td><b>Connection example</b>                                                                                                                                                                                       </td></tr><tr><td style="white-space:nowrap">Local                     </td><td><b>Single File Path One table</b>
<p>localPath</p>

<p>file://localPath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> localPath</p>

<p>file://localPath         </p>
</td><td>URI=C:\folder1                                                                                                                                                                                                                                                                                                            </td></tr><tr><td style="white-space:nowrap">Amazon S3                 </td><td><b>Single File Path One table</b>
<p>s3://bucket1/folder1 </p>

<p><b>Directory Path (one table per file)</b></p>

<p> s3://bucket1/folder1                         </p>
</td><td>URI=s3://bucket1/folder1;  AWSAccessKey=token1; AWSSecretKey=secret1; AWSRegion=OHIO;                                                                                                                                                                                                          </td></tr><tr><td style="white-space:nowrap">Azure Blob Storage        </td><td><b>Single File Path One table</b>
<p>azureblob://mycontainer/myblob/ </p>

<p><b>Directory Path (one table per file)</b></p>

<p> azureblob://mycontainer/myblob/   </p>
</td><td>URI=azureblob://mycontainer/myblob/; AzureStorageAccount=myAccount; AzureAccessKey=myKey;  
<p> URI=azureblob://mycontainer/myblob/; AzureStorageAccount=myAccount; InitiateOAuth=GETANDREFRESH; AuthScheme=OAuth;                                                                                                    </p>
</td></tr><tr><td style="white-space:nowrap">OneDrive                  </td><td><b>Single File Path One table</b>
<p>onedrive://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> onedrive://remotePath                       </p>
</td><td>URI=onedrive://folder1;InitiateOAuth=GETANDREFRESH; AuthScheme=OAuth; 
<p> URI=onedrive://SharedWithMe/folder1;InitiateOAuth=GETANDREFRESH; AuthScheme=OAuth;                                                                                                                        </p>
</td></tr><tr><td style="white-space:nowrap">Google Cloud Storage      </td><td><b>Single File Path One table</b>
<p>gs://bucket/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> gs://bucket/remotePath                     </p>
</td><td>URI=gs://bucket/folder1; InitiateOAuth=GETANDREFRESH; AuthScheme=OAuth; ProjectId=test;                                                                                                                                                                                                             </td></tr><tr><td style="white-space:nowrap">Google Drive              </td><td><b>Single File Path One table</b>
<p>gdrive://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> gdrive://remotePath                           </p>
</td><td>URI=gdrive://folder1;InitiateOAuth=GETANDREFRESH;                                                                                                                                                                                                                                                 </td></tr><tr><td style="white-space:nowrap">Box                       </td><td><b>Single File Path One table</b>
<p>box://remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> box://remotePath                                 </p>
</td><td>URI=box://folder1; InitiateOAuth=GETANDREFRESH; OAuthClientId=oauthclientid1; OAuthClientSecret=oauthcliensecret1; CallbackUrl=http://localhost:12345;                                                                                                                                              </td></tr><tr><td style="white-space:nowrap">FTP or FTPS               </td><td><b>Single File Path One table</b>
<p>ftp://server:port/remotePath </p>

<p><b>Directory Path (one table per file)</b></p>

<p> ftp://server:port/remotePath         </p>
</td><td>URI=ftps://localhost:990/folder1; User=user1; Password=password1;                                                                                                                                                                                                                                </td></tr><tr><td style="white-space:nowrap">SFTP                      </td><td>sftp://server:port/remotePath                                                                                                                                                                                                                                                        </td><td>URI=sftp://127.0.0.1:22/remotePath;  User=user1; Password=password1;                                                                                                                                                                                                                             </td></tr><tr><td style="white-space:nowrap">Sharepoint                </td><td>sp://https://server/remotePath                                                                                                                                                                                                                                                       </td><td>URI=sp://https://domain.sharepoint.com/Documents; User=user1; Password=password1;                                                                                                                                                                                                                 </td></tr></table></center><p />

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - DataModel" desc="CData JDBC Driver for Avro - RSBAvro - DataModel: Specifies the data model to use when parsing Avro documents and generating the database metadata.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>DataModel</h1>
       
<div class="chapter_content" id="RSBAvro_p_DataModel">
<p>Specifies the data model to use when parsing Avro documents and generating the database metadata.</p>





<h3>Possible Values</h3>
None, Document, FlattenedDocuments, Relational

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Document"</p>

<h3>Remarks</h3>


<p>The driver splits documents into rows based on the objects nested in arrays. Select a <u>DataModel</u> configuration to configure how the driver models nested object arrays into tables.

  

<h3>Selecting a Data Modeling Strategy</h3>
</p>

<p>  The following <u>DataModel</u> configurations are available.
  <ul><li>
<p><b>Document</b></p>


<p>Returns a single table representing a row for each top-level object. In this data model, any nested object arrays will not be flattened and will be returned as aggregates.
  </p>
</li><li>
<p><b>FlattenedDocuments</b></p>

  
<p>Returns a single table representing a SQL CROSS JOIN of the available documents in the file.
  </p>
</li><li>
<p><b>Relational</b></p>

    
<p>  Returns multiple tables, one for each nested object array. In this data model, any nested documents (object arrays) will be returned as relational tables that contain a primary key and a foreign key that links to the parent table.</p>
</li></ul>

<h2>See Also</h2>
</p>

<p><ul><li><a href="#RSBAvro_p_FlattenArrays">FlattenArrays</a> and <a href="#RSBAvro_p_FlattenObjects">FlattenObjects</a>: Customize the columns that will be identified for each of these data models.</li><li><a href="#pg_NestedParsing">Parsing Hierarchical Data</a>: Compare the schemas resulting from different <u>DataModel</u> settings, with example queries.</li></ul></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Region" desc="CData JDBC Driver for Avro - RSBAvro - Region: The hosting region for your S3-like Web Services.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Region</h1>
       
<div class="chapter_content" id="RSBAvro_p_Region">
<p>The hosting region for your S3-like Web Services.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The hosting region for your S3-like Web Services. </p>

<p>
<h3>Oracle Cloud Object Storage Regions</h3>
</p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Value</b>                              </td><td><b>Region</b></td></tr><tr><td style="white-space:nowrap"><b><i>Commercial Cloud Regions</i></b>    </td><td></td></tr><tr><td style="white-space:nowrap"><var>ap-hyderabad-1</var>                 </td><td>India South (Hyderabad)</td></tr><tr><td style="white-space:nowrap"><var>ap-melbourne-1</var>                 </td><td>Australia Southeast (Melbourne)</td></tr><tr><td style="white-space:nowrap"><var>ap-mumbai-1</var>                    </td><td>India West (Mumbai)</td></tr><tr><td style="white-space:nowrap"><var>ap-osaka-1</var>                     </td><td>Japan Central (Osaka)</td></tr><tr><td style="white-space:nowrap"><var>ap-seoul-1</var>                     </td><td>South Korea Central (Seoul)</td></tr><tr><td style="white-space:nowrap"><var>ap-sydney-1</var>                    </td><td>Australia East (Sydney)</td></tr><tr><td style="white-space:nowrap"><var>ap-tokyo-1</var>                     </td><td>Japan East (Tokyo)</td></tr><tr><td style="white-space:nowrap"><var>ca-montreal-1</var>                  </td><td>Canada Southeast (Montreal)</td></tr><tr><td style="white-space:nowrap"><var>ca-toronto-1</var>                   </td><td>Canada Southeast (Toronto)</td></tr><tr><td style="white-space:nowrap"><var>eu-amsterdam-1</var>                 </td><td>Netherlands Northwest (Amsterdam)</td></tr><tr><td style="white-space:nowrap"><var>eu-frankfurt-1</var>                 </td><td>Germany Central (Frankfurt)</td></tr><tr><td style="white-space:nowrap"><var>eu-zurich-1</var>                    </td><td>Switzerland North (Zurich)</td></tr><tr><td style="white-space:nowrap"><var>me-jeddah-1</var>                    </td><td>Saudi Arabia West (Jeddah)</td></tr><tr><td style="white-space:nowrap"><var>sa-saopaulo-1</var>                  </td><td>Brazil East (Sao Paulo)</td></tr><tr><td style="white-space:nowrap"><var>uk-london-1</var>                    </td><td>UK South (London)</td></tr><tr><td style="white-space:nowrap"><var>us-ashburn-1</var> (default)         </td><td>US East (Ashburn, VA)</td></tr><tr><td style="white-space:nowrap"><var>us-phoenix-1</var>                   </td><td>US West (Phoenix, AZ)</td></tr><tr><td style="white-space:nowrap"><b><i>US Gov FedRAMP High Regions</i></b> </td><td></td></tr><tr><td style="white-space:nowrap"><var>us-langley-1</var>                   </td><td>US Gov East (Ashburn, VA)</td></tr><tr><td style="white-space:nowrap"><var>us-luke-1</var>                      </td><td>US Gov West (Phoenix, AZ)</td></tr><tr><td style="white-space:nowrap"><b><i>US Gov DISA IL5 Regions</i></b>     </td><td></td></tr><tr><td style="white-space:nowrap"><var>us-gov-ashburn-1</var>               </td><td>US DoD East (Ashburn, VA)</td></tr><tr><td style="white-space:nowrap"><var>us-gov-chicago-1</var>               </td><td>US DoD North (Chicago, IL)</td></tr><tr><td style="white-space:nowrap"><var>us-gov-phoenix-1</var>               </td><td>US DoD West (Phoenix, AZ)</td></tr></table></center><p /></p>

<p>
<h3>Wasabi Regions</h3>
</p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Value</b>                    </td><td><b>Region</b></td></tr><tr><td style="white-space:nowrap"><var>eu-central-1</var>         </td><td>Europe (Amsterdam)</td></tr><tr><td style="white-space:nowrap"><var>us-east-1</var> (Default)  </td><td>US East (Ashburn, VA)</td></tr><tr><td style="white-space:nowrap"><var>us-east-2</var>            </td><td>US East (Manassas, VA)</td></tr><tr><td style="white-space:nowrap"><var>us-west-1</var>            </td><td>US West (Hillsboro, OR)</td></tr></table></center><p />

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProjectId" desc="CData JDBC Driver for Avro - RSBAvro - ProjectId: The Id of the project where your Google Cloud Storage instance resides.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProjectId</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProjectId">
<p>The Id of the project where your Google Cloud Storage instance resides.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Id of the project where your Google Cloud Storage instance resides. You can find this value by going to Google Cloud Console and clicking the project name at the top left screen. The ProjectId is displayed on the Id column of the matching project.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OracleNamespace" desc="CData JDBC Driver for Avro - RSBAvro - OracleNamespace: The Oracle Cloud Object Storage namespace to use.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OracleNamespace</h1>
       
<div class="chapter_content" id="RSBAvro_p_OracleNamespace">
<p>The Oracle Cloud Object Storage namespace to use.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Oracle Cloud Object Storage namespace to use. This setting must be set to the Oracle Cloud Object Storage namespace associated with the Oracle Cloud account before any requests can be made. Refer to the <a href="https://docs.cloud.oracle.com/en-us/iaas/Content/Object/Tasks/understandingnamespaces.htm">Understanding Object Storage Namespaces</a> page of the Oracle Cloud documentation for instructions on how to find your account's Object Storage namespace.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - StorageBaseURL" desc="CData JDBC Driver for Avro - RSBAvro - StorageBaseURL: The URL of a cloud storage service provider.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>StorageBaseURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_StorageBaseURL">
<p>The URL of a cloud storage service provider.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This connection property is used to specify:
<ul><li>The URL of a custom S3 service.</li><li>The URL required for the SharePoint SOAP/REST cloud storage service provider. 

<p>If the domain for this option ends in <b>-my</b> (for example, <b>https://bigcorp-my.sharepoint.com</b>) then you may need to use
the onedrive:// scheme instead of the sp:// or sprest:// scheme.</p>
</li></ul>

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - UseVirtualHosting" desc="CData JDBC Driver for Avro - RSBAvro - UseVirtualHosting: If true (default), buckets will be referenced in the request using the hosted-style request: http://yourbucket.s3.amazonaws.com/yourobject. If set to false, the bean will use the path-style request: http://s3.amazonaws.com/yourbucket/yourobject. Note that this property will be set to false, in case of an S3 based custom service when the CustomURL is specified.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UseVirtualHosting</h1>
       
<div class="chapter_content" id="RSBAvro_p_UseVirtualHosting">
<p>If true (default), buckets will be referenced in the request using the hosted-style request: http://yourbucket.s3.amazonaws.com/yourobject. If set to false, the bean will use the path-style request: http://s3.amazonaws.com/yourbucket/yourobject. Note that this property will be set to false, in case of an S3 based custom service when the CustomURL is specified.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>If true (default), buckets will be referenced in the request using the hosted-style request: http://yourbucket.s3.amazonaws.com/yourobject. If set to false, the bean will use the path-style request: http://s3.amazonaws.com/yourbucket/yourobject. Note that this property will be set to false, in case of an S3 based custom service when the CustomURL is specified.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - UseLakeFormation" desc="CData JDBC Driver for Avro - RSBAvro - UseLakeFormation: When this property is set to true, AWSLakeFormation service will be used to retrieve temporary credentials, which enforce access policies against the user based on the configured IAM role. The service can be used when authenticating through OKTA, ADFS, AzureAD, PingFederate, while providing a SAML assertion.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UseLakeFormation</h1>
       
<div class="chapter_content" id="RSBAvro_p_UseLakeFormation">
<p>When this property is set to true, AWSLakeFormation service will be used to retrieve temporary credentials, which enforce access policies against the user based on the configured IAM role. The service can be used when authenticating through OKTA, ADFS, AzureAD, PingFederate, while providing a SAML assertion.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When this property is set to true, AWSLakeFormation service will be used to retrieve temporary credentials, which enforce access policies against the user based on the configured IAM role. The service can be used when authenticating through OKTA, ADFS, AzureAD, PingFederate, while providing a SAML assertion.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWS Authentication" desc="CData JDBC Driver for Avro - RSBAvro - AWS Authentication: Your AWS account access key. This value is accessible from your AWS security credentials page.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWS Authentication</h1>
       
<div class="chapter_content" id="RSBAvro_c_AWSAuthentication">
<p>
<p>This section provides a complete list of the AWS Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a></td><td>Your AWS account access key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a></td><td>Your AWS account secret key. This value is accessible from your AWS security credentials page.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSRoleARN">AWSRoleARN</a></td><td>The Amazon Resource Name of the role to use when authenticating.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSPrincipalARN">AWSPrincipalARN</a></td><td>The ARN of the SAML Identity provider in your AWS account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSRegion">AWSRegion</a></td><td>The hosting region for your Amazon Web Services.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSCredentialsFile">AWSCredentialsFile</a></td><td>The path to the AWS Credentials File to be used for authentication.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSCredentialsFileProfile">AWSCredentialsFileProfile</a></td><td>The name of the profile to be used from the supplied AWSCredentialsFile.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSSessionToken">AWSSessionToken</a></td><td>Your AWS session token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AWSExternalId">AWSExternalId</a></td><td>A unique identifier that might be required when you assume a role in another account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MFASerialNumber">MFASerialNumber</a></td><td>The serial number of the MFA device if one is being used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MFAToken">MFAToken</a></td><td>The temporary token available from your MFA device.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CredentialsLocation">CredentialsLocation</a></td><td>The location of the settings file where MFA credentials are saved.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_TemporaryTokenDuration">TemporaryTokenDuration</a></td><td>The amount of time (in seconds) a temporary token will last.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ServerSideEncryption">ServerSideEncryption</a></td><td>When activated, file uploads into Amazon S3 buckets will be server-side encrypted.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSAccessKey" desc="CData JDBC Driver for Avro - RSBAvro - AWSAccessKey: Your AWS account access key. This value is accessible from your AWS security credentials page.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSAccessKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSAccessKey">
<p>Your AWS account access key. This value is accessible from your AWS security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your AWS account access key. This value is accessible from your AWS security credentials page:
<ol><li>Sign into the AWS Management console with the credentials for your root account.</li><li>Select your account name or number and select My Security Credentials in the menu that is displayed.</li><li>Click Continue to Security Credentials and expand the Access Keys section to manage or create root account access keys. </li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSSecretKey" desc="CData JDBC Driver for Avro - RSBAvro - AWSSecretKey: Your AWS account secret key. This value is accessible from your AWS security credentials page.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSSecretKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSSecretKey">
<p>Your AWS account secret key. This value is accessible from your AWS security credentials page.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your AWS account secret key. This value is accessible from your AWS security credentials page:
<ol><li>Sign into the AWS Management console with the credentials for your root account.</li><li>Select your account name or number and select My Security Credentials in the menu that is displayed.</li><li>Click Continue to Security Credentials and expand the Access Keys section to manage or create root account access keys. </li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSRoleARN" desc="CData JDBC Driver for Avro - RSBAvro - AWSRoleARN: The Amazon Resource Name of the role to use when authenticating.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSRoleARN</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSRoleARN">
<p>The Amazon Resource Name of the role to use when authenticating.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>When authenticating outside of AWS, it is common to use a Role for authentication instead of your direct 
AWS account credentials. Entering the <u>AWSRoleARN</u> will cause the CData JDBC Driver for Avro to perform a role based 
authentication instead of using the <a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a> directly. The <a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a> 
must still be specified to perform this authentication. You cannot use the credentials of an AWS root user when setting 
RoleARN. The <a href="#RSBAvro_p_AWSAccessKey">AWSAccessKey</a> and <a href="#RSBAvro_p_AWSSecretKey">AWSSecretKey</a> must be those of an IAM user.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSPrincipalARN" desc="CData JDBC Driver for Avro - RSBAvro - AWSPrincipalARN: The ARN of the SAML Identity provider in your AWS account.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSPrincipalARN</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSPrincipalARN">
<p>The ARN of the SAML Identity provider in your AWS account.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The ARN of the SAML Identity provider in your AWS account.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSRegion" desc="CData JDBC Driver for Avro - RSBAvro - AWSRegion: The hosting region for your Amazon Web Services.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSRegion</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSRegion">
<p>The hosting region for your Amazon Web Services.</p>





<h3>Possible Values</h3>
OHIO, NORTHERNVIRGINIA, NORTHERNCALIFORNIA, OREGON, CAPETOWN, HONGKONG, JAKARTA, MUMBAI, OSAKA, SEOUL, SINGAPORE, SYDNEY, TOKYO, CENTRAL, BEIJING, NINGXIA, FRANKFURT, IRELAND, LONDON, MILAN, PARIS, STOCKHOLM, ZURICH, BAHRAIN, UAE, SAOPAULO, GOVCLOUDEAST, GOVCLOUDWEST

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"NORTHERNVIRGINIA"</p>

<h3>Remarks</h3>


<p>The hosting region for your Amazon Web Services. Available values are OHIO, NORTHERNVIRGINIA, NORTHERNCALIFORNIA, OREGON, CAPETOWN, HONGKONG, JAKARTA, MUMBAI, OSAKA, SEOUL, SINGAPORE, SYDNEY, TOKYO, CENTRAL, BEIJING, NINGXIA, FRANKFURT, IRELAND, LONDON, MILAN, PARIS, STOCKHOLM, ZURICH, BAHRAIN, UAE, SAOPAULO, GOVCLOUDEAST, and GOVCLOUDWEST.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSCredentialsFile" desc="CData JDBC Driver for Avro - RSBAvro - AWSCredentialsFile: The path to the AWS Credentials File to be used for authentication.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSCredentialsFile</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSCredentialsFile">
<p>The path to the AWS Credentials File to be used for authentication.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The path to the AWS Credentials File to be used for authentication. See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html for more information.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSCredentialsFileProfile" desc="CData JDBC Driver for Avro - RSBAvro - AWSCredentialsFileProfile: The name of the profile to be used from the supplied AWSCredentialsFile.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSCredentialsFileProfile</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSCredentialsFileProfile">
<p>The name of the profile to be used from the supplied AWSCredentialsFile.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"default"</p>

<h3>Remarks</h3>


<p>The name of the profile to be used from the supplied AWSCredentialsFile. See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html for more information.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSSessionToken" desc="CData JDBC Driver for Avro - RSBAvro - AWSSessionToken: Your AWS session token.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSSessionToken</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSSessionToken">
<p>Your AWS session token.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Your AWS session token. This value can be retrieved in different ways. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">this link</a> for more info.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AWSExternalId" desc="CData JDBC Driver for Avro - RSBAvro - AWSExternalId: A unique identifier that might be required when you assume a role in another account.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AWSExternalId</h1>
       
<div class="chapter_content" id="RSBAvro_p_AWSExternalId">
<p>A unique identifier that might be required when you assume a role in another account.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>A unique identifier that might be required when you assume a role in another account.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MFASerialNumber" desc="CData JDBC Driver for Avro - RSBAvro - MFASerialNumber: The serial number of the MFA device if one is being used.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MFASerialNumber</h1>
       
<div class="chapter_content" id="RSBAvro_p_MFASerialNumber">
<p>The serial number of the MFA device if one is being used.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>You can find the device for an IAM user by going to the AWS Management Console and viewing the user's security credentials. 
For virtual devices, this is actually an Amazon Resource Name (such as arn:aws:iam::123456789012:mfa/user).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MFAToken" desc="CData JDBC Driver for Avro - RSBAvro - MFAToken: The temporary token available from your MFA device.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MFAToken</h1>
       
<div class="chapter_content" id="RSBAvro_p_MFAToken">
<p>The temporary token available from your MFA device.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If MFA is required, this value will be used along with the <a href="#RSBAvro_p_MFASerialNumber">MFASerialNumber</a> to retrieve temporary credentials to login.
The temporary credentials available from AWS will only last up to 1 hour by default (see <a href="#RSBAvro_p_TemporaryTokenDuration">TemporaryTokenDuration</a>). Once the time is up, the connection must
be updated to specify a new MFA token so that new credentials may be obtained.

%AWSpSecurityToken;
%AWSpTemporaryTokenDuration;</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CredentialsLocation" desc="CData JDBC Driver for Avro - RSBAvro - CredentialsLocation: The location of the settings file where MFA credentials are saved.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CredentialsLocation</h1>
       
<div class="chapter_content" id="RSBAvro_p_CredentialsLocation">
<p>The location of the settings file where MFA credentials are saved.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\Avro Data Provider\\CredentialsFile.txt"</p>

<h3>Remarks</h3>


<p>MFA credentials are short-lived and typically expire after an hour. At that point, you must specify a different <a href="#RSBAvro_p_MFAToken">MFAToken</a> to continue connecting.
MFA tokens only work once, so in the case of multi-threaded or multi-process applications, the credentials must be centrally located and shared to avoid problems. When <a href="#RSBAvro_p_MFAToken">MFAToken</a> is not specified, this property does nothing.
</p>

<p>If left unspecified, the default location is "%APPDATA%\\CData\\Avro Data Provider\\CredentialsFile.txt" with <b>%APPDATA%</b> being set to the user's configuration directory:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Mac </td><td>~/Library/Application Support</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - TemporaryTokenDuration" desc="CData JDBC Driver for Avro - RSBAvro - TemporaryTokenDuration: The amount of time (in seconds) a temporary token will last.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>TemporaryTokenDuration</h1>
       
<div class="chapter_content" id="RSBAvro_p_TemporaryTokenDuration">
<p>The amount of time (in seconds) a temporary token will last.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"3600"</p>

<h3>Remarks</h3>


<p>Temporary tokens are used with both MFA and Role based authentication. Temporary tokens will eventually time out, 
at which time a new temporary token must be obtained. For situations where MFA is not used, this is not a big deal.
The CData JDBC Driver for Avro will internally request a new temporary token once the temporary token has expired.
</p>

<p>However, for MFA required connection, a new <a href="#RSBAvro_p_MFAToken">MFAToken</a> must be specified in the connection to retrieve a new temporary 
token. This is a more intrusive issue since it requires an update to the connection by the user. The maximum and minimum 
that can be specified will depend largely on the connection being used.
</p>

<p>For Role based authentication, the minimum duration is 900 seconds (15 minutes) while the maximum if 3600 (1 hour). 
Even if MFA is used with role based authentication, 3600 is still the maximum.
</p>

<p>For MFA authentication by itself (using an IAM User or root user), the minimum is 900 seconds (15 minutes), the maximum is 129600
(36 hours).

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ServerSideEncryption" desc="CData JDBC Driver for Avro - RSBAvro - ServerSideEncryption: When activated, file uploads into Amazon S3 buckets will be server-side encrypted.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ServerSideEncryption</h1>
       
<div class="chapter_content" id="RSBAvro_p_ServerSideEncryption">
<p>When activated, file uploads into Amazon S3 buckets will be server-side encrypted.</p>





<h3>Possible Values</h3>
OFF, S3-Managed Keys

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"OFF"</p>

<h3>Remarks</h3>


<p>Server-side encryption is the encryption of data at its destination by the application or service that receives it. Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and decrypts it for you when you access it. Learn more: https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html

</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Azure Authentication" desc="CData JDBC Driver for Avro - RSBAvro - Azure Authentication: The name of your Azure storage account.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Azure Authentication</h1>
       
<div class="chapter_content" id="RSBAvro_c_AzureAuthentication">
<p>
<p>This section provides a complete list of the Azure Authentication properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AzureStorageAccount">AzureStorageAccount</a></td><td>The name of your Azure storage account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureAccessKey">AzureAccessKey</a></td><td>The storage key associated with your Azure account.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureSharedAccessSignature">AzureSharedAccessSignature</a></td><td>A shared access key signature that may be used for authentication.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureTenant">AzureTenant</a></td><td>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AzureEnvironment">AzureEnvironment</a></td><td>The Azure Environment to use when establishing a connection.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AzureStorageAccount" desc="CData JDBC Driver for Avro - RSBAvro - AzureStorageAccount: The name of your Azure storage account.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureStorageAccount</h1>
       
<div class="chapter_content" id="RSBAvro_p_AzureStorageAccount">
<p>The name of your Azure storage account.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The name of your Azure storage account.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AzureAccessKey" desc="CData JDBC Driver for Avro - RSBAvro - AzureAccessKey: The storage key associated with your Azure account.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureAccessKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_AzureAccessKey">
<p>The storage key associated with your Azure account.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The storage key associated with your Avro account. You can retrieve it as follows:
<ol><li>Sign into the azure portal with the credentials for your root account. (https://portal.azure.com/)</li><li>Click on storage accounts and select the storage account you want to use.</li><li>Under settings, click Access keys.</li><li>Your storage account name and key will be displayed on that page.</li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AzureSharedAccessSignature" desc="CData JDBC Driver for Avro - RSBAvro - AzureSharedAccessSignature: A shared access key signature that may be used for authentication.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureSharedAccessSignature</h1>
       
<div class="chapter_content" id="RSBAvro_p_AzureSharedAccessSignature">
<p>A shared access key signature that may be used for authentication.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>A shared access signature. You can create one by following these steps:
<ol><li>Sign into the azure portal with the credentials for your root account. (https://portal.azure.com/)</li><li>Click on storage accounts and select the storage account you want to use.</li><li>Under settings, click Shared Access Signature.</li><li>Set the permissions and when the token will expire</li><li>Click Generate SAS can copy the token.</li></ol></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AzureTenant" desc="CData JDBC Driver for Avro - RSBAvro - AzureTenant: The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureTenant</h1>
       
<div class="chapter_content" id="RSBAvro_p_AzureTenant">
<p>The Microsoft Online tenant being used to access data. If not specified, your default tenant is used.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Microsoft Online tenant being used to access data. For instance, contoso.onmicrosoft.com. Alternatively, 
specify the tenant Id. This value is the directory Id in the Azure Portal &gt; Azure Active Directory &gt; Properties.</p>

<p>Typically it is not necessary to specify the Tenant. This can be automatically determined by Microsoft when using 
the <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a> set to CODE (default). However, it may fail in the case that the user belongs to multiple 
tenants. For instance, if an Admin of domain A invites a user of domain B to be a guest user. The user will 
now belong to both tenants. It is a good practice to specify the Tenant, although in general things should normally 
work without having to specify it.</p>

<p>The <u>AzureTenant</u> is required when setting <a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a> to CLIENT. When using client credentials, there is no 
user context. The credentials are taken from the context of the app itself. While Microsoft still allows client credentials 
to be obtained without specifying which Tenant, it has a much lower probability of picking the specific tenant you 
want to work with. For this reason, we require <u>AzureTenant</u> to be explicitly stated for all client credentials connections 
to ensure you get credentials that are applicable for the domain you intend to connect to.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AzureEnvironment" desc="CData JDBC Driver for Avro - RSBAvro - AzureEnvironment: The Azure Environment to use when establishing a connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AzureEnvironment</h1>
       
<div class="chapter_content" id="RSBAvro_p_AzureEnvironment">
<p>The Azure Environment to use when establishing a connection.</p>





<h3>Possible Values</h3>
GLOBAL, CHINA, USGOVT, USGOVTDOD

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"GLOBAL"</p>

<h3>Remarks</h3>


<p>In most cases, leaving the environment set to global will work. However, if your 
Azure Account has been added to a different environment, the <u>AzureEnvironment</u> may 
be used to specify which environment. The available values are GLOBAL, CHINA, USGOVT, USGOVTDOD.</p>

<p></p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSO" desc="CData JDBC Driver for Avro - RSBAvro - SSO: The identity provider's login URL.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSO</h1>
       
<div class="chapter_content" id="RSBAvro_c_SSO">
<p>
<p>This section provides a complete list of the SSO properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSOLoginURL">SSOLoginURL</a></td><td>The identity provider's login URL.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSOProperties">SSOProperties</a></td><td>Additional properties required to connect to the identity provider in a semicolon-separated list.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSOExchangeUrl">SSOExchangeUrl</a></td><td>The URL used for consuming the SAML response and exchanging it for service specific credentials.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSOLoginURL" desc="CData JDBC Driver for Avro - RSBAvro - SSOLoginURL: The identity provider's login URL.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSOLoginURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSOLoginURL">
<p>The identity provider's login URL.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The identity provider's login URL.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSOProperties" desc="CData JDBC Driver for Avro - RSBAvro - SSOProperties: Additional properties required to connect to the identity provider in a semicolon-separated list.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSOProperties</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSOProperties">
<p>Additional properties required to connect to the identity provider in a semicolon-separated list.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Additional properties required to connect to the identity provider in a semicolon-separated list.  is used in conjunction with the <a href="#RSBAvro_p_SSOLoginURL">SSOLoginURL</a>.</p>

<p>SSO configuration is discussed further in <a href="#pg_connectionj">Establishing a Connection</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSOExchangeUrl" desc="CData JDBC Driver for Avro - RSBAvro - SSOExchangeUrl: The URL used for consuming the SAML response and exchanging it for service specific credentials.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSOExchangeUrl</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSOExchangeUrl">
<p>The URL used for consuming the SAML response and exchanging it for service specific credentials.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The CData JDBC Driver for Avro will use the URL specified here to consume a SAML response and exchange it for service specific credentials. 
The retrieved credentials are the final piece during the SSO connection that are used to communicate with Avro.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuth" desc="CData JDBC Driver for Avro - RSBAvro - OAuth: Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuth</h1>
       
<div class="chapter_content" id="RSBAvro_c_OAuth">
<p>
<p>This section provides a complete list of the OAuth properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a></td><td>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthVersion">OAuthVersion</a></td><td>The version of OAuth being used.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a></td><td>The client Id assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a></td><td>The client secret assigned when you register your application with an OAuth authorization server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a></td><td>The access token for connecting using OAuth.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessTokenSecret">OAuthAccessTokenSecret</a></td><td>The OAuth access token secret for connecting using OAuth.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a></td><td>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH . Alternatively, you can hold this location in memory by specifying a value starting with 'memory://'.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CallbackURL">CallbackURL</a></td><td>The OAuth callback URL to return to when authenticating. This value must match the callback URL you specify in your app settings.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Scope">Scope</a></td><td>Specify scope to obtain the initial access and refresh token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a></td><td>The grant type for the OAuth flow.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthPasswordGrantMode">OAuthPasswordGrantMode</a></td><td>How to pass Client Id and Secret with OAuthGrantType is set to Password.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthIncludeCallbackURL">OAuthIncludeCallbackURL</a></td><td>Whether to include the callback URL in an access token request.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAuthorizationURL">OAuthAuthorizationURL</a></td><td>The authorization URL for the OAuth service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthAccessTokenURL">OAuthAccessTokenURL</a></td><td>The URL to retrieve the OAuth access token from.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRefreshTokenURL">OAuthRefreshTokenURL</a></td><td>The URL to refresh the OAuth token from.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRequestTokenURL">OAuthRequestTokenURL</a></td><td>The URL the service provides to retrieve request tokens from. This is required in OAuth 1.0.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthVerifier">OAuthVerifier</a></td><td>The verifier code returned from the OAuth authorization URL.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AuthToken">AuthToken</a></td><td>The authentication token used to request and obtain the OAuth Access Token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_AuthKey">AuthKey</a></td><td>The authentication secret used to request and obtain the OAuth Access Token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthParams">OAuthParams</a></td><td>A comma-separated list of other parameters to submit in the request for the OAuth access token in the format paramname=value.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthRefreshToken">OAuthRefreshToken</a></td><td>The OAuth refresh token for the corresponding OAuth access token.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthExpiresIn">OAuthExpiresIn</a></td><td>The lifetime in seconds of the OAuth AccessToken.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthTokenTimestamp">OAuthTokenTimestamp</a></td><td>The Unix epoch timestamp in milliseconds when the current Access Token was created.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - InitiateOAuth" desc="CData JDBC Driver for Avro - RSBAvro - InitiateOAuth: Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>InitiateOAuth</h1>
       
<div class="chapter_content" id="RSBAvro_p_InitiateOAuth">
<p>Set this property to initiate the process to obtain or refresh the OAuth access token when you connect.</p>





<h3>Possible Values</h3>
OFF, GETANDREFRESH, REFRESH

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"OFF"</p>

<h3>Remarks</h3>


<p>The following options are available:
<ol><li><b>OFF</b>: Indicates that the OAuth flow will be handled entirely by the user. An OAuthAccessToken will be required to authenticate.</li><li><b>GETANDREFRESH</b>: Indicates that the entire OAuth Flow will be handled by the driver. If no token currently exists, it will be obtained by prompting the user via the browser. If a token exists, it will be refreshed when applicable.</li><li><b>REFRESH</b>: Indicates that the driver will only handle refreshing the OAuthAccessToken. The user will never be prompted by the driver to authenticate via the browser. The user must handle obtaining the OAuthAccessToken and OAuthRefreshToken initially.</li></ol>

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthVersion" desc="CData JDBC Driver for Avro - RSBAvro - OAuthVersion: The version of OAuth being used.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthVersion</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthVersion">
<p>The version of OAuth being used.</p>





<h3>Possible Values</h3>
1.0, 2.0

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"2.0"</p>

<h3>Remarks</h3>


<p>The version of OAuth being used. The following options are available: 1.0,2.0</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthClientId" desc="CData JDBC Driver for Avro - RSBAvro - OAuthClientId: The client Id assigned when you register your application with an OAuth authorization server.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthClientId</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthClientId">
<p>The client Id assigned when you register your application with an OAuth authorization server.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>As part of registering an OAuth application, you will receive the <u>OAuthClientId</u> value, sometimes also called a consumer key, and a client secret, the <a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a>. 

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthClientSecret" desc="CData JDBC Driver for Avro - RSBAvro - OAuthClientSecret: The client secret assigned when you register your application with an OAuth authorization server.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthClientSecret</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthClientSecret">
<p>The client secret assigned when you register your application with an OAuth authorization server.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>As part of registering an OAuth application, you will receive the <a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a>, also called a consumer key. You will also receive a client secret, also called a consumer secret. Set the client secret in the <u>OAuthClientSecret</u> property. 
 </p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthAccessToken" desc="CData JDBC Driver for Avro - RSBAvro - OAuthAccessToken: The access token for connecting using OAuth.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthAccessToken</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthAccessToken">
<p>The access token for connecting using OAuth.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>OAuthAccessToken</u> property is used to connect using OAuth. The <u>OAuthAccessToken</u> is retrieved from the OAuth server as part of the authentication process. It has a server-dependent timeout and can be reused between requests. </p>

<p>The access token is used in place of your user name and password. The access token protects your credentials by keeping them on the server.  
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthAccessTokenSecret" desc="CData JDBC Driver for Avro - RSBAvro - OAuthAccessTokenSecret: The OAuth access token secret for connecting using OAuth.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthAccessTokenSecret</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthAccessTokenSecret">
<p>The OAuth access token secret for connecting using OAuth.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>OAuthAccessTokenSecret</u> property is used to connect and authenticate using OAuth. The <u>OAuthAccessTokenSecret</u> is retrieved from the OAuth server as part of the authentication process. It is used with the <a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a> and can be used for multiple requests until it times out.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthSettingsLocation" desc="CData JDBC Driver for Avro - RSBAvro - OAuthSettingsLocation: The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH . Alternatively, you can hold this location in memory by specifying a value starting with 'memory://'.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthSettingsLocation</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthSettingsLocation">
<p>The location of the settings file where OAuth values are saved when InitiateOAuth is set to GETANDREFRESH or REFRESH . Alternatively, you can hold this location in memory by specifying a value starting with 'memory://'.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\Avro Data Provider\\OAuthSettings.txt"</p>

<h3>Remarks</h3>


<p>When <a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a> is set to <b>GETANDREFRESH</b> or <b>REFRESH</b>, the driver saves OAuth values to avoid requiring the user to manually enter OAuth connection properties and to allow the credentials to be shared across connections or processes.
</p>

<p>Instead of specifying a file path, you can use memory storage. Memory locations are specified by using a value starting with 'memory://' followed by a unique identifier for that set of credentials (for example, memory://user1). The identifier can be anything you choose but should be unique to the user. Unlike file-based storage, where credentials persist across connections, memory storage loads the credentials into static memory, and the credentials are shared between connections using the same identifier for the life of the process. To persist credentials outside the current process, you must manually store the credentials prior to closing the connection.  This enables you to set them in the connection when the process is started again. You can retrieve OAuth property values with a query to the <b>sys_connection_props</b> system table. If there are multiple connections using the same credentials, the properties are read from the previously closed connection.
</p>

<p>The default location is "%APPDATA%\\CData\\Avro Data Provider\\OAuthSettings.txt" with <b>%APPDATA%</b> set to the user's configuration directory. The default values are</p>

<p><ul><li>Windows: "register://%DSN"</li><li>Unix: "%AppData%..."</li><li>Mac: "%AppData%..."</li></ul></p>

<p>where DSN is the name of the current DSN used in the open connection.</p>

<p>The following table lists the value of <b>%APPDATA%</b> by OS:</p>

<p><p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Mac </td><td>~/Library/Application Support</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CallbackURL" desc="CData JDBC Driver for Avro - RSBAvro - CallbackURL: The OAuth callback URL to return to when authenticating. This value must match the callback URL you specify in your app settings.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CallbackURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_CallbackURL">
<p>The OAuth callback URL to return to when authenticating. This value must match the callback URL you specify in your app settings.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>During the authentication process, the OAuth authorization server redirects the user to this URL. This value must match the callback URL you specify in your app settings.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Scope" desc="CData JDBC Driver for Avro - RSBAvro - Scope: Specify scope to obtain the initial access and refresh token.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Scope</h1>
       
<div class="chapter_content" id="RSBAvro_p_Scope">
<p>Specify scope to obtain the initial access and refresh token.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Specify scope to obtain the initial access and refresh token.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthGrantType" desc="CData JDBC Driver for Avro - RSBAvro - OAuthGrantType: The grant type for the OAuth flow.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthGrantType</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthGrantType">
<p>The grant type for the OAuth flow.</p>





<h3>Possible Values</h3>
CODE, CLIENT, PASSWORD

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"CODE"</p>

<h3>Remarks</h3>


<p>The following options are available: CODE,CLIENT,PASSWORD</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthPasswordGrantMode" desc="CData JDBC Driver for Avro - RSBAvro - OAuthPasswordGrantMode: How to pass Client Id and Secret with OAuthGrantType is set to Password.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthPasswordGrantMode</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthPasswordGrantMode">
<p>How to pass Client Id and Secret with OAuthGrantType is set to Password.</p>





<h3>Possible Values</h3>
Post, Basic

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Post"</p>

<h3>Remarks</h3>


<p>The OAuth RFC specifies two methods of passing the <a href="#RSBAvro_p_OAuthClientId">OAuthClientId</a> and <a href="#RSBAvro_p_OAuthClientSecret">OAuthClientSecret</a> when using the Password 
<a href="#RSBAvro_p_OAuthGrantType">OAuthGrantType</a>. The most commonly used is to pass them via post data to the service. However, some services 
may require that you pass them via the Authorize header as to be used in BASIC authorization. Change this property 
to Basic to submit the parameters as part of the Authorize header instead of the post data.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthIncludeCallbackURL" desc="CData JDBC Driver for Avro - RSBAvro - OAuthIncludeCallbackURL: Whether to include the callback URL in an access token request.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthIncludeCallbackURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthIncludeCallbackURL">
<p>Whether to include the callback URL in an access token request.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>This defaults to true since standards-compliant OAuth services will ignore the
redirect_uri parameter for grant types like CLIENT or PASSWORD that do not
require it.
</p>

<p>This option should only be enabled for OAuth services that report errors when
redirect_uri is included.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthAuthorizationURL" desc="CData JDBC Driver for Avro - RSBAvro - OAuthAuthorizationURL: The authorization URL for the OAuth service.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthAuthorizationURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthAuthorizationURL">
<p>The authorization URL for the OAuth service.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The authorization URL for the OAuth service. At this URL, the user logs into the server and grants permissions to the application. In OAuth 1.0, if permissions are granted, the request token is authorized.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthAccessTokenURL" desc="CData JDBC Driver for Avro - RSBAvro - OAuthAccessTokenURL: The URL to retrieve the OAuth access token from.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthAccessTokenURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthAccessTokenURL">
<p>The URL to retrieve the OAuth access token from.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The URL to retrieve the OAuth access token from. In OAuth 1.0, the authorized request token is exchanged for the access token at this URL.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthRefreshTokenURL" desc="CData JDBC Driver for Avro - RSBAvro - OAuthRefreshTokenURL: The URL to refresh the OAuth token from.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthRefreshTokenURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthRefreshTokenURL">
<p>The URL to refresh the OAuth token from.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The URL to refresh the OAuth token from. In OAuth 2.0, this URL is where the refresh token is exchanged for a new access token when the old access token expires.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthRequestTokenURL" desc="CData JDBC Driver for Avro - RSBAvro - OAuthRequestTokenURL: The URL the service provides to retrieve request tokens from. This is required in OAuth 1.0.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthRequestTokenURL</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthRequestTokenURL">
<p>The URL the service provides to retrieve request tokens from. This is required in OAuth 1.0.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The URL the service provides to retrieve request tokens from. This is required in OAuth 1.0. In OAuth 1.0, this is the URL where the app makes a request for the request token.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthVerifier" desc="CData JDBC Driver for Avro - RSBAvro - OAuthVerifier: The verifier code returned from the OAuth authorization URL.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthVerifier</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthVerifier">
<p>The verifier code returned from the OAuth authorization URL.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The verifier code returned from the OAuth authorization URL. This can be used on systems where a browser cannot be launched such as headless systems. </p>

<p></p>

<p>
<h3>Authentication on Headless Machines</h3>
</p>

<p>See <a href="#pg_connectionj">Establishing a Connection</a> to obtain the <u>OAuthVerifier</u> value.</p>

<p>Set
<a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a> along with <u>OAuthVerifier</u>. When you connect, the driver exchanges the <u>OAuthVerifier</u> for the OAuth authentication tokens and saves them, encrypted, to the specified location.  Set <a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a> to GETANDREFRESH to automate the exchange. 
</p>

<p>Once the OAuth settings file has been generated, you can remove <u>OAuthVerifier</u> from the connection properties and connect with <a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a> set. </p>

<p>To automatically refresh the OAuth token values, set <a href="#RSBAvro_p_OAuthSettingsLocation">OAuthSettingsLocation</a> and additionally set <a href="#RSBAvro_p_InitiateOAuth">InitiateOAuth</a> to REFRESH.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AuthToken" desc="CData JDBC Driver for Avro - RSBAvro - AuthToken: The authentication token used to request and obtain the OAuth Access Token.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AuthToken</h1>
       
<div class="chapter_content" id="RSBAvro_p_AuthToken">
<p>The authentication token used to request and obtain the OAuth Access Token.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is required only when performing headless authentication in OAuth 1.0. It can be obtained from the GetOAuthAuthorizationUrl stored procedure.</p>

<p>It can be supplied alongside the <a href="#RSBAvro_p_AuthKey">AuthKey</a> in the GetOAuthAccessToken stored procedure to obtain the <a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AuthKey" desc="CData JDBC Driver for Avro - RSBAvro - AuthKey: The authentication secret used to request and obtain the OAuth Access Token.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AuthKey</h1>
       
<div class="chapter_content" id="RSBAvro_p_AuthKey">
<p>The authentication secret used to request and obtain the OAuth Access Token.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is required only when performing headless authentication in OAuth 1.0. It can be obtained from the GetOAuthAuthorizationUrl stored procedure.</p>

<p>It can be supplied alongside the <a href="#RSBAvro_p_AuthToken">AuthToken</a> in the GetOAuthAccessToken stored procedure to obtain the <a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a>.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthParams" desc="CData JDBC Driver for Avro - RSBAvro - OAuthParams: A comma-separated list of other parameters to submit in the request for the OAuth access token in the format paramname=value.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthParams</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthParams">
<p>A comma-separated list of other parameters to submit in the request for the OAuth access token in the format paramname=value.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>A comma-separated list of other parameters to submit in the request for the OAuth access token in the format paramname=value.</p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthRefreshToken" desc="CData JDBC Driver for Avro - RSBAvro - OAuthRefreshToken: The OAuth refresh token for the corresponding OAuth access token.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthRefreshToken</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthRefreshToken">
<p>The OAuth refresh token for the corresponding OAuth access token.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>OAuthRefreshToken</u> property is used to refresh the <a href="#RSBAvro_p_OAuthAccessToken">OAuthAccessToken</a> when using OAuth authentication.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthExpiresIn" desc="CData JDBC Driver for Avro - RSBAvro - OAuthExpiresIn: The lifetime in seconds of the OAuth AccessToken.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthExpiresIn</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthExpiresIn">
<p>The lifetime in seconds of the OAuth AccessToken.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Pair with OAuthTokenTimestamp to determine when the AccessToken will expire.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthTokenTimestamp" desc="CData JDBC Driver for Avro - RSBAvro - OAuthTokenTimestamp: The Unix epoch timestamp in milliseconds when the current Access Token was created.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthTokenTimestamp</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthTokenTimestamp">
<p>The Unix epoch timestamp in milliseconds when the current Access Token was created.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Pair with OAuthExpiresIn to determine when the AccessToken will expire.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - JWT OAuth" desc="CData JDBC Driver for Avro - RSBAvro - JWT OAuth: The JWT Certificate store.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>JWT OAuth</h1>
       
<div class="chapter_content" id="RSBAvro_c_JWTOAuth">
<p>
<p>This section provides a complete list of the JWT OAuth properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCert">OAuthJWTCert</a></td><td>The JWT Certificate store.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a></td><td>The type of key store containing the JWT Certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertPassword">OAuthJWTCertPassword</a></td><td>The password for the OAuth JWT certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a></td><td>The subject of the OAuth JWT certificate.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthJWTCert" desc="CData JDBC Driver for Avro - RSBAvro - OAuthJWTCert: The JWT Certificate store.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthJWTCert</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthJWTCert">
<p>The JWT Certificate store.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The name of the certificate store for the client certificate.</p>

<p>The <a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a> field specifies the type of the 
certificate store specified by <u>OAuthJWTCert</u>. If the store 
is password protected, specify the password in <a href="#RSBAvro_p_OAuthJWTCertPassword">OAuthJWTCertPassword</a>.</p>

<p><u>OAuthJWTCert</u> is used in conjunction with the <a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a> 
field in order to specify client certificates. If <u>OAuthJWTCert</u> has a value, and <a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a>
is set, a search for a certificate is initiated. Please refer to the <a href="#RSBAvro_p_OAuthJWTCertSubject">OAuthJWTCertSubject</a> field for details.</p>

<p>Designations of certificate stores are platform-dependent.</p>

<p>The following are designations of the most common User and Machine
certificate stores in Windows:</p>

<p>
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">MY</td><td>A certificate store holding personal certificates with their
associated private keys.
</td></tr><tr><td style="white-space:nowrap">CA</td><td>Certifying authority certificates.
</td></tr><tr><td style="white-space:nowrap">ROOT</td><td>Root certificates.
</td></tr><tr><td style="white-space:nowrap">SPC</td><td>Software publisher certificates.
</td></tr></table></center><p />
</p>

<p>In Java, the certificate store normally is a file containing certificates
and optional private keys.
</p>

<p>When the certificate store type is PFXFile, this property must be set
to the name of the file.  When the type is PFXBlob, the property must be
set to the binary contents of a PFX file (i.e. PKCS12 certificate store).

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthJWTCertType" desc="CData JDBC Driver for Avro - RSBAvro - OAuthJWTCertType: The type of key store containing the JWT Certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthJWTCertType</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthJWTCertType">
<p>The type of key store containing the JWT Certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"USER"</p>

<h3>Remarks</h3>


<p>This property can take one of the following values:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">USER</td><td>For Windows, this specifies that the certificate store is a certificate store owned by the current user. <i>Note</i>: This store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">MACHINE</td><td>For Windows, this specifies that the certificate store is a machine store. <i>Note</i>: this store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">PFXFILE</td><td>The certificate store is the name of a PFX (PKCS12) file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PFXBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in PFX (PKCS12) format.
</td></tr><tr><td style="white-space:nowrap">JKSFILE</td><td>The certificate store is the name of a Java key store (JKS) file containing certificates. <i>Note</i>: this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">JKSBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in Java key store (JKS) format. <i>Note</i>: this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_FILE</td><td>The certificate store is the name of a PEM-encoded file that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_BLOB</td><td>The certificate store is a string (base64-encoded) that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">P7BFILE</td><td>The certificate store is the name of a PKCS7 file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PPKFILE</td><td>The certificate store is the name of a file that contains a PPK (PuTTY Private Key).
</td></tr><tr><td style="white-space:nowrap">XMLFILE</td><td>The certificate store is the name of a file that contains a certificate in XML format.
</td></tr><tr><td style="white-space:nowrap">XMLBLOB</td><td>The certificate store is a string that contains a certificate in XML format.
</td></tr><tr><td style="white-space:nowrap">GOOGLEJSON</td><td>The certificate store is the name of a JSON file containing the service account information. Only valid when connecting to a Google service.
</td></tr><tr><td style="white-space:nowrap">GOOGLEJSONBLOB</td><td>The certificate store is a string that contains the service account JSON. Only valid when connecting to a Google service.

</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthJWTCertPassword" desc="CData JDBC Driver for Avro - RSBAvro - OAuthJWTCertPassword: The password for the OAuth JWT certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthJWTCertPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthJWTCertPassword">
<p>The password for the OAuth JWT certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If the certificate store is of a type that requires a password, this property is used to specify that 
password in order to open the certificate store.
</p>

<p>This is not required when using the GOOGLEJSON <a href="#RSBAvro_p_OAuthJWTCertType">OAuthJWTCertType</a>. Google JSON keys are not encrypted.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - OAuthJWTCertSubject" desc="CData JDBC Driver for Avro - RSBAvro - OAuthJWTCertSubject: The subject of the OAuth JWT certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>OAuthJWTCertSubject</h1>
       
<div class="chapter_content" id="RSBAvro_p_OAuthJWTCertSubject">
<p>The subject of the OAuth JWT certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"*"</p>

<h3>Remarks</h3>


<p>When loading a certificate the subject is used to locate the certificate in the store.</p>

<p>If an exact match is not found, the store is searched for subjects containing the value of the property.</p>

<p>If a match is still not found, the property is set to an empty string, and no certificate is selected.</p>

<p>The special value "*" picks the first certificate in the certificate store.</p>

<p>The certificate subject is a comma separated list of distinguished name fields and values. 
For instance "CN=www.server.com, OU=test, C=US, E=support@cdata.com". Common fields and their 
meanings are displayed below.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Field</b></td><td><b>Meaning</b></td></tr><tr><td style="white-space:nowrap">CN</td><td>Common Name. This is commonly a host name like www.server.com.</td></tr><tr><td style="white-space:nowrap">O</td><td>Organization</td></tr><tr><td style="white-space:nowrap">OU</td><td>Organizational Unit</td></tr><tr><td style="white-space:nowrap">L</td><td>Locality</td></tr><tr><td style="white-space:nowrap">S</td><td>State</td></tr><tr><td style="white-space:nowrap">C</td><td>Country</td></tr><tr><td style="white-space:nowrap">E</td><td>Email Address</td></tr></table></center><p /></p>

<p>If a field value contains a comma it must be quoted.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Kerberos" desc="CData JDBC Driver for Avro - RSBAvro - Kerberos: The Kerberos Key Distribution Center (KDC) service used to authenticate the user.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Kerberos</h1>
       
<div class="chapter_content" id="RSBAvro_c_Kerberos">
<p>
<p>This section provides a complete list of the Kerberos properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_KerberosKDC">KerberosKDC</a></td><td>The Kerberos Key Distribution Center (KDC) service used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosRealm">KerberosRealm</a></td><td>The Kerberos Realm used to authenticate the user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosSPN">KerberosSPN</a></td><td>The service principal name (SPN) for the Kerberos Domain Controller.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosKeytabFile">KerberosKeytabFile</a></td><td>The Keytab file containing your pairs of Kerberos principals and encrypted keys.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosServiceRealm">KerberosServiceRealm</a></td><td>The Kerberos realm of the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosServiceKDC">KerberosServiceKDC</a></td><td>The Kerberos KDC of the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_KerberosTicketCache">KerberosTicketCache</a></td><td>The full file path to an MIT Kerberos credential cache file.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosKDC" desc="CData JDBC Driver for Avro - RSBAvro - KerberosKDC: The Kerberos Key Distribution Center (KDC) service used to authenticate the user.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosKDC</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosKDC">
<p>The Kerberos Key Distribution Center (KDC) service used to authenticate the user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Kerberos properties are used when using SPNEGO or Windows Authentication. The driver will request session tickets and temporary session keys from the Kerberos KDC service. The Kerberos KDC service is conventionally colocated with the domain controller. </p>

<p>If Kerberos KDC is not specified, the driver will attempt to detect these properties automatically from the following locations:

<ul><li><b>KRB5 Config File (krb5.ini/krb5.conf):</b> If the KRB5_CONFIG environment variable is set and the file exists, the driver will obtain the KDC from the specified file.  Otherwise, it will attempt to read from the default MIT location based on the OS: <var>C:\ProgramData\MIT\Kerberos5\krb5.ini</var> (Windows) or <var>/etc/krb5.conf</var> (Linux).</li><li><b>Java System Properties:</b> Using the system properties <var>java.security.krb5.realm</var> and <var>java.security.krb5.kdc</var>.</li><li><b>Domain Name and Host:</b> If the Kerberos Realm and Kerberos KDC could not be inferred from another location, the driver will infer them from the configured domain name and host.</li></ul>

<b>Note:</b> Windows authentication is supported in JRE 1.6 and above only.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosRealm" desc="CData JDBC Driver for Avro - RSBAvro - KerberosRealm: The Kerberos Realm used to authenticate the user.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosRealm</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosRealm">
<p>The Kerberos Realm used to authenticate the user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Kerberos properties are used when using SPNEGO or Windows Authentication.  The Kerberos Realm is used to authenticate the user with the Kerberos Key Distribution Service (KDC). The Kerberos Realm can be configured by an administrator to be any string, but conventionally it is based on the domain name. </p>

<p>If Kerberos Realm is not specified, the driver will attempt to detect these properties automatically from the following locations:

<ul><li><b>KRB5 Config File (krb5.ini/krb5.conf):</b> If the KRB5_CONFIG environment variable is set and the file exists, the driver will obtain the default realm from the specified file.  Otherwise, it will attempt to read from the default MIT location based on the OS: <var>C:\ProgramData\MIT\Kerberos5\krb5.ini</var> (Windows) or <var>/etc/krb5.conf</var> (Linux)</li><li><b>Java System Properties:</b> Using the system properties <var>java.security.krb5.realm</var> and <var>java.security.krb5.kdc</var>.</li><li><b>Domain Name and Host:</b> If the Kerberos Realm and Kerberos KDC could not be inferred from another location, the driver will infer them from the user-configured domain name and host. This might work in some Windows environments.</li></ul>

<b>Note:</b> Kerberos-based authentication is supported in JRE 1.6 and above only.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosSPN" desc="CData JDBC Driver for Avro - RSBAvro - KerberosSPN: The service principal name (SPN) for the Kerberos Domain Controller.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosSPN</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosSPN">
<p>The service principal name (SPN) for the Kerberos Domain Controller.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If the SPN on the Kerberos Domain Controller is not the same as the URL that you are authenticating to, use this property to set the SPN.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosKeytabFile" desc="CData JDBC Driver for Avro - RSBAvro - KerberosKeytabFile: The Keytab file containing your pairs of Kerberos principals and encrypted keys.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosKeytabFile</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosKeytabFile">
<p>The Keytab file containing your pairs of Kerberos principals and encrypted keys.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The Keytab file containing your pairs of Kerberos principals and encrypted keys.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosServiceRealm" desc="CData JDBC Driver for Avro - RSBAvro - KerberosServiceRealm: The Kerberos realm of the service.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosServiceRealm</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosServiceRealm">
<p>The Kerberos realm of the service.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>KerberosServiceRealm</u> is the specify the service Kerberos realm when using cross-realm Kerberos authentication.</p>

<p>In most cases, a single realm and KDC machine are used to perform the Kerberos authentication and this property is not required.</p>

<p>This property is available for complex setups where a different realm and KDC machine are used to obtain an authentication 
ticket (AS request) and a service ticket (TGS request).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosServiceKDC" desc="CData JDBC Driver for Avro - RSBAvro - KerberosServiceKDC: The Kerberos KDC of the service.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosServiceKDC</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosServiceKDC">
<p>The Kerberos KDC of the service.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>KerberosServiceKDC</u> is used to specify the service Kerberos KDC when using cross-realm Kerberos authentication.</p>

<p>In most cases, a single realm and KDC machine are used to perform the Kerberos authentication and this property is not required.</p>

<p>This property is available for complex setups where a different realm and KDC machine are used to obtain an authentication 
ticket (AS request) and a service ticket (TGS request).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - KerberosTicketCache" desc="CData JDBC Driver for Avro - RSBAvro - KerberosTicketCache: The full file path to an MIT Kerberos credential cache file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>KerberosTicketCache</h1>
       
<div class="chapter_content" id="RSBAvro_p_KerberosTicketCache">
<p>The full file path to an MIT Kerberos credential cache file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property can be set if you wish to use a credential cache file that was created using the MIT Kerberos Ticket Manager or kinit command.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSL" desc="CData JDBC Driver for Avro - RSBAvro - SSL: The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSL</h1>
       
<div class="chapter_content" id="RSBAvro_c_SSL">
<p>
<p>This section provides a complete list of the SSL properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCert">SSLClientCert</a></td><td>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertType">SSLClientCertType</a></td><td>The type of key store containing the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertPassword">SSLClientCertPassword</a></td><td>The password for the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a></td><td>The subject of the TLS/SSL client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLMode">SSLMode</a></td><td>The authentication mechanism to be used when connecting to the FTP or FTPS server.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSLServerCert">SSLServerCert</a></td><td>The certificate to be accepted from the server when connecting using TLS/SSL.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLClientCert" desc="CData JDBC Driver for Avro - RSBAvro - SSLClientCert: The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCert</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLClientCert">
<p>The TLS/SSL client certificate store for SSL Client Authentication (2-way SSL).</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The name of the certificate store for the client certificate.</p>

<p>The <a href="#RSBAvro_p_SSLClientCertType">SSLClientCertType</a> field specifies the type of the certificate store specified by <u>SSLClientCert</u>. If the store is password protected, specify the password in <a href="#RSBAvro_p_SSLClientCertPassword">SSLClientCertPassword</a>.</p>

<p><u>SSLClientCert</u> is used in conjunction with the <a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a> field in order to specify client certificates. If <u>SSLClientCert</u> has a value, and <a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a> is set, a search for a certificate is initiated. See <a href="#RSBAvro_p_SSLClientCertSubject">SSLClientCertSubject</a> for more information.</p>

<p>Designations of certificate stores are platform-dependent.</p>

<p>The following are designations of the most common User and Machine certificate stores in Windows:</p>

<p>
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">MY</td><td>A certificate store holding personal certificates with their associated private keys.
</td></tr><tr><td style="white-space:nowrap">CA</td><td>Certifying authority certificates.
</td></tr><tr><td style="white-space:nowrap">ROOT</td><td>Root certificates.
</td></tr><tr><td style="white-space:nowrap">SPC</td><td>Software publisher certificates.
</td></tr></table></center><p />
</p>

<p>In Java, the certificate store normally is a file containing certificates and optional private keys.
</p>

<p>When the certificate store type is PFXFile, this property must be set to the name of the file. When the type is PFXBlob, the property must be
set to the binary contents of a PFX file (for example, PKCS12 certificate store).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLClientCertType" desc="CData JDBC Driver for Avro - RSBAvro - SSLClientCertType: The type of key store containing the TLS/SSL client certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertType</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLClientCertType">
<p>The type of key store containing the TLS/SSL client certificate.</p>





<h3>Possible Values</h3>
USER, MACHINE, PFXFILE, PFXBLOB, JKSFILE, JKSBLOB, PEMKEY_FILE, PEMKEY_BLOB, PUBLIC_KEY_FILE, PUBLIC_KEY_BLOB, SSHPUBLIC_KEY_FILE, SSHPUBLIC_KEY_BLOB, P7BFILE, PPKFILE, XMLFILE, XMLBLOB

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"USER"</p>

<h3>Remarks</h3>


<p>This property can take one of the following values:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">USER - default</td><td>For Windows, this specifies that the certificate store is a certificate store owned by the current user. Note that this store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">MACHINE</td><td>For Windows, this specifies that the certificate store is a machine store. Note that this store type is not available in Java.
</td></tr><tr><td style="white-space:nowrap">PFXFILE</td><td>The certificate store is the name of a PFX (PKCS12) file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PFXBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in PFX (PKCS12) format.
</td></tr><tr><td style="white-space:nowrap">JKSFILE</td><td>The certificate store is the name of a Java key store (JKS) file containing certificates. Note that this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">JKSBLOB</td><td>The certificate store is a string (base-64-encoded) representing a certificate store in JKS format. Note that this store type is only available in Java.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_FILE</td><td>The certificate store is the name of a PEM-encoded file that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PEMKEY_BLOB</td><td>The certificate store is a string (base64-encoded) that contains a private key and an optional certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">PUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains a PEM- or DER-encoded public key certificate.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_FILE</td><td>The certificate store is the name of a file that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">SSHPUBLIC_KEY_BLOB</td><td>The certificate store is a string (base-64-encoded) that contains an SSH-style public key.
</td></tr><tr><td style="white-space:nowrap">P7BFILE</td><td>The certificate store is the name of a PKCS7 file containing certificates.
</td></tr><tr><td style="white-space:nowrap">PPKFILE</td><td>The certificate store is the name of a file that contains a PuTTY Private Key (PPK).
</td></tr><tr><td style="white-space:nowrap">XMLFILE</td><td>The certificate store is the name of a file that contains a certificate in XML format.
</td></tr><tr><td style="white-space:nowrap">XMLBLOB</td><td>The certificate store is a string that contains a certificate in XML format.
</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLClientCertPassword" desc="CData JDBC Driver for Avro - RSBAvro - SSLClientCertPassword: The password for the TLS/SSL client certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLClientCertPassword">
<p>The password for the TLS/SSL client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If the certificate store is of a type that requires a password, this property is used to specify that password to open the certificate store.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLClientCertSubject" desc="CData JDBC Driver for Avro - RSBAvro - SSLClientCertSubject: The subject of the TLS/SSL client certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLClientCertSubject</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLClientCertSubject">
<p>The subject of the TLS/SSL client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"*"</p>

<h3>Remarks</h3>


<p>When loading a certificate the subject is used to locate the certificate in the store.
</p>

<p>If an exact match is not found, the store is searched for subjects containing the value of the property. If a match is still not found, the property is set to an empty string, and no certificate is selected.
</p>

<p>The special value "*" picks the first certificate in the certificate store.
</p>

<p>The certificate subject is a comma separated list of distinguished name fields and values. For example, "CN=www.server.com, OU=test, C=US, E=support@company.com". The common fields and their meanings are shown below.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Field</b></td><td><b>Meaning</b></td></tr><tr><td style="white-space:nowrap">CN</td><td>Common Name. This is commonly a host name like www.server.com.</td></tr><tr><td style="white-space:nowrap">O</td><td>Organization</td></tr><tr><td style="white-space:nowrap">OU</td><td>Organizational Unit</td></tr><tr><td style="white-space:nowrap">L</td><td>Locality</td></tr><tr><td style="white-space:nowrap">S</td><td>State</td></tr><tr><td style="white-space:nowrap">C</td><td>Country</td></tr><tr><td style="white-space:nowrap">E</td><td>Email Address</td></tr></table></center><p />
</p>

<p>If a field value contains a comma, it must be quoted.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLMode" desc="CData JDBC Driver for Avro - RSBAvro - SSLMode: The authentication mechanism to be used when connecting to the FTP or FTPS server.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLMode</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLMode">
<p>The authentication mechanism to be used when connecting to the FTP or FTPS server.</p>





<h3>Possible Values</h3>
AUTOMATIC, NONE, IMPLICIT, EXPLICIT

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"AUTOMATIC"</p>

<h3>Remarks</h3>


<p>If <u>SSLMode</u> is set to NONE, default plaintext authentication is used to log in to the server. 

If <u>SSLMode</u> is set to IMPLICIT, the SSL negotiation will start immediately after the connection is established.

If <u>SSLMode</u> is set to EXPLICIT, the driver will first connect in plaintext, and then explicitly start SSL negotiation through a protocol command such as STARTTLS.

If <u>SSLMode</u> is set to AUTOMATIC, if the remote port is set to the standard plaintext port of the protocol (where applicable), the component will behave the same as if <u>SSLMode</u> is set to EXPLICIT. In all other cases, SSL negotiation will be IMPLICIT.


<ul><li>AUTOMATIC</li><li>NONE</li><li>IMPLICIT</li><li>EXPLICIT</li></ul>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSLServerCert" desc="CData JDBC Driver for Avro - RSBAvro - SSLServerCert: The certificate to be accepted from the server when connecting using TLS/SSL.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSLServerCert</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSLServerCert">
<p>The certificate to be accepted from the server when connecting using TLS/SSL.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>If using a TLS/SSL connection, this property can be used to specify the TLS/SSL certificate to be accepted from the server. Any other certificate that is not trusted by the machine is rejected. 
</p>

<p>This property can take the following forms:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Description</b>      </td><td><b>Example</b></td></tr><tr><td style="white-space:nowrap">A full PEM Certificate (example shortened for brevity) </td><td>-----BEGIN CERTIFICATE-----
MIIChTCCAe4CAQAwDQYJKoZIhv......Qw==
-----END CERTIFICATE-----</td></tr><tr><td style="white-space:nowrap">A path to a local file containing the certificate  </td><td>C:\cert.cer</td></tr><tr><td style="white-space:nowrap">The public key (example shortened for brevity)  </td><td>-----BEGIN RSA PUBLIC KEY-----
MIGfMA0GCSq......AQAB
-----END RSA PUBLIC KEY-----</td></tr><tr><td style="white-space:nowrap">The MD5 Thumbprint (hex values can also be either space or colon separated) </td><td>ecadbdda5a1529c58a1e9e09828d70e4</td></tr><tr><td style="white-space:nowrap">The SHA1 Thumbprint (hex values can also be either space or colon separated) </td><td>34a929226ae0819f2ec14b4a3d904f801cbb150d</td></tr></table></center><p />
</p>

<p>If not specified, any certificate trusted by the machine is accepted. 
</p>

<p>Certificates are validated as trusted by the machine based on the System's trust store.  The trust store used is the 'javax.net.ssl.trustStore' value specified for the system. If no value is specified for this property, Java's default trust store is used (for example, JAVA_HOME\lib\security\cacerts).
</p>

<p>Use '*' to signify to accept all certificates. Note that this is not recommended due to security concerns.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSH" desc="CData JDBC Driver for Avro - RSBAvro - SSH: The authentication method used when establishing an SSH Tunnel to the service.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSH</h1>
       
<div class="chapter_content" id="RSBAvro_c_SSH">
<p>
<p>This section provides a complete list of the SSH properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_SSHAuthMode">SSHAuthMode</a></td><td>The authentication method used when establishing an SSH Tunnel to the service.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a></td><td>A certificate to be used for authenticating the SSHUser.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertPassword">SSHClientCertPassword</a></td><td>The password of the SSHClientCert key if it has one.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertSubject">SSHClientCertSubject</a></td><td>The subject of the SSH client certificate.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHClientCertType">SSHClientCertType</a></td><td>The type of SSHClientCert private key.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHUser">SSHUser</a></td><td>The SSH user.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_SSHPassword">SSHPassword</a></td><td>The SSH password.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHAuthMode" desc="CData JDBC Driver for Avro - RSBAvro - SSHAuthMode: The authentication method used when establishing an SSH Tunnel to the service.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHAuthMode</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHAuthMode">
<p>The authentication method used when establishing an SSH Tunnel to the service.</p>





<h3>Possible Values</h3>
None, Password, Public_Key

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"Password"</p>

<h3>Remarks</h3>


<p><ul><li>None: No authentication is performed. The current <a href="#RSBAvro_p_User">User</a> value is ignored, and the connection is logged in as anonymous.</li><li>Password: The driver uses the values of <a href="#RSBAvro_p_User">User</a> and <a href="#RSBAvro_p_Password">Password</a> to authenticate the user.</li><li>Public_Key: The driver uses the values of <a href="#RSBAvro_p_User">User</a> and <a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a> to authenticate the user. <a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a> must have a private key available for this authentication method to succeed.</li></ul></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHClientCert" desc="CData JDBC Driver for Avro - RSBAvro - SSHClientCert: A certificate to be used for authenticating the SSHUser.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCert</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHClientCert">
<p>A certificate to be used for authenticating the SSHUser.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p><u>SSHClientCert</u> must contain a valid private key in order to use public key authentication.
A public key is optional, if one is not included then the driver generates it from the private key. 
The driver sends the public key to the server and the connection is allowed if the user has authorized the public key.
</p>

<p>The <a href="#RSBAvro_p_SSHClientCertType">SSHClientCertType</a> field specifies the type of the key store specified by <u>SSHClientCert</u>.
If the store is password protected, specify the password in <a href="#RSBAvro_p_SSHClientCertPassword">SSHClientCertPassword</a>.
</p>

<p>Some types of key stores are containers which may include multiple keys.
By default the driver will select the first key in the store, but you can specify a specific key using <a href="#RSBAvro_p_SSHClientCertSubject">SSHClientCertSubject</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHClientCertPassword" desc="CData JDBC Driver for Avro - RSBAvro - SSHClientCertPassword: The password of the SSHClientCert key if it has one.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHClientCertPassword">
<p>The password of the SSHClientCert key if it has one.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is only used when authenticating to SFTP servers with <a href="#RSBAvro_p_SSHAuthMode">SSHAuthMode</a> set to PublicKey and <a href="#RSBAvro_p_SSHClientCert">SSHClientCert</a> set to a private key. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHClientCertSubject" desc="CData JDBC Driver for Avro - RSBAvro - SSHClientCertSubject: The subject of the SSH client certificate.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertSubject</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHClientCertSubject">
<p>The subject of the SSH client certificate.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"*"</p>

<h3>Remarks</h3>


<p>When loading a certificate the subject is used to locate the certificate in the store.</p>

<p>If an exact match is not found, the store is searched for subjects containing the value of the property.</p>

<p>If a match is still not found, the property is set to an empty string, and no certificate is selected.</p>

<p>The special value "*" picks the first certificate in the certificate store.</p>

<p>The certificate subject is a comma separated list of distinguished name fields and values. 
For instance "CN=www.server.com, OU=test, C=US, E=support@cdata.com". Common fields and their 
meanings are displayed below.
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Field</b></td><td><b>Meaning</b></td></tr><tr><td style="white-space:nowrap">CN</td><td>Common Name. This is commonly a host name like www.server.com.</td></tr><tr><td style="white-space:nowrap">O</td><td>Organization</td></tr><tr><td style="white-space:nowrap">OU</td><td>Organizational Unit</td></tr><tr><td style="white-space:nowrap">L</td><td>Locality</td></tr><tr><td style="white-space:nowrap">S</td><td>State</td></tr><tr><td style="white-space:nowrap">C</td><td>Country</td></tr><tr><td style="white-space:nowrap">E</td><td>Email Address</td></tr></table></center><p /></p>

<p>If a field value contains a comma it must be quoted.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHClientCertType" desc="CData JDBC Driver for Avro - RSBAvro - SSHClientCertType: The type of SSHClientCert private key.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHClientCertType</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHClientCertType">
<p>The type of SSHClientCert private key.</p>





<h3>Possible Values</h3>
USER, MACHINE, PFXFILE, PFXBLOB, JKSFILE, JKSBLOB, PEMKEY_FILE, PEMKEY_BLOB, PPKFILE, PPKBLOB, XMLFILE, XMLBLOB

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"PEMKEY_FILE"</p>

<h3>Remarks</h3>


<p>This property can take one of the following values:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Types</b></td><td><b>Description</b></td><td><b>Allowed Blob Values</b></td></tr><tr><td style="white-space:nowrap">MACHINE/USER</td><td>	
Not available on this platform.</td><td>Blob values are not supported.
</td></tr><tr><td style="white-space:nowrap">JKSFILE/JKSBLOB</td><td>A Java keystore file. Must contain both a certificate and a private key. Only available in Java.
    </td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">PFXFILE/PFXBLOB</td><td>A PKCS12-format (.pfx) file. Must contain both a certificate and a private key.</td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">PEMKEY_FILE/PEMKEY_BLOB</td><td>A PEM-format file. Must contain an RSA, DSA, or OPENSSH private key. Can optionally contain a certificate matching the private key.</td><td>base64 or plain text.  Newlines may be replaced with spaces when providing the blob as text.
</td></tr><tr><td style="white-space:nowrap">PPKFILE/PPKBLOB</td><td>A PuTTY-format private key created using the <var>puttygen</var> tool.</td><td>base64-only
</td></tr><tr><td style="white-space:nowrap">XMLFILE/XMLBLOB</td><td>An XML key in the format generated by the .NET RSA class: <var>RSA.ToXmlString(true)</var>.</td><td>base64 or plain text.</td></tr></table></center><p />


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHUser" desc="CData JDBC Driver for Avro - RSBAvro - SSHUser: The SSH user.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHUser</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHUser">
<p>The SSH user.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH user.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - SSHPassword" desc="CData JDBC Driver for Avro - RSBAvro - SSHPassword: The SSH password.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>SSHPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_SSHPassword">
<p>The SSH password.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The SSH password.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Firewall" desc="CData JDBC Driver for Avro - RSBAvro - Firewall: The protocol used by a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Firewall</h1>
       
<div class="chapter_content" id="RSBAvro_c_Firewall">
<p>
<p>This section provides a complete list of the Firewall properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_FirewallType">FirewallType</a></td><td>The protocol used by a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallServer">FirewallServer</a></td><td>The name or IP address of a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallPort">FirewallPort</a></td><td>The TCP port for a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallUser">FirewallUser</a></td><td>The user name to use to authenticate with a proxy-based firewall.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FirewallPassword">FirewallPassword</a></td><td>A password used to authenticate to a proxy-based firewall.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FirewallType" desc="CData JDBC Driver for Avro - RSBAvro - FirewallType: The protocol used by a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallType</h1>
       
<div class="chapter_content" id="RSBAvro_p_FirewallType">
<p>The protocol used by a proxy-based firewall.</p>





<h3>Possible Values</h3>
NONE, TUNNEL, SOCKS4, SOCKS5

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"NONE"</p>

<h3>Remarks</h3>


<p>This property specifies the protocol that the driver will use to tunnel traffic through the <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> proxy. Note that by default, the driver connects to the system proxy; to disable this behavior and connect to one of the following proxy types, set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> to false. 

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Type</b>
    </td><td><b>Default Port</b>
  </td><td><b>Description</b>

  </td></tr><tr><td style="white-space:nowrap">TUNNEL
    </td><td>80
    </td><td>When this is set, the driver opens a connection to Avro and traffic flows back and forth through the proxy. 

  </td></tr><tr><td style="white-space:nowrap">SOCKS4
    </td><td>1080
    </td><td>When this is set, the driver sends data through the SOCKS 4 proxy specified by <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> and <a href="#RSBAvro_p_FirewallPort">FirewallPort</a> and passes the <a href="#RSBAvro_p_FirewallUser">FirewallUser</a> value to the proxy, which determines if the connection request should be granted.
  </td></tr><tr><td style="white-space:nowrap">SOCKS5
    </td><td>1080
    </td><td>When this is set, the driver sends data through the SOCKS 5 proxy specified by <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> and <a href="#RSBAvro_p_FirewallPort">FirewallPort</a>. If your proxy requires authentication, set <a href="#RSBAvro_p_FirewallUser">FirewallUser</a> and <a href="#RSBAvro_p_FirewallPassword">FirewallPassword</a> to credentials the proxy recognizes.
</td></tr></table></center><p /></p>

<p>To connect to HTTP proxies, use <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> and <a href="#RSBAvro_p_ProxyPort">ProxyPort</a>. To authenticate to HTTP proxies, use <a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a>, <a href="#RSBAvro_p_ProxyUser">ProxyUser</a>, and <a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a>.</p>

<p>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FirewallServer" desc="CData JDBC Driver for Avro - RSBAvro - FirewallServer: The name or IP address of a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallServer</h1>
       
<div class="chapter_content" id="RSBAvro_p_FirewallServer">
<p>The name or IP address of a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property specifies the IP address, DNS name, or host name of a proxy allowing traversal of a firewall. The protocol is specified by <a href="#RSBAvro_p_FirewallType">FirewallType</a>: Use <u>FirewallServer</u> with this property to connect through SOCKS or do tunneling. Use <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> to connect to an HTTP proxy.</p>

<p>Note that the driver uses the system proxy by default. To use a different proxy, set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> to false.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FirewallPort" desc="CData JDBC Driver for Avro - RSBAvro - FirewallPort: The TCP port for a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallPort</h1>
       
<div class="chapter_content" id="RSBAvro_p_FirewallPort">
<p>The TCP port for a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>0</p>

<h3>Remarks</h3>


<p>This specifies the TCP port for a proxy allowing traversal of a firewall. Use <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> to specify the name or IP address. Specify the protocol with <a href="#RSBAvro_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FirewallUser" desc="CData JDBC Driver for Avro - RSBAvro - FirewallUser: The user name to use to authenticate with a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallUser</h1>
       
<div class="chapter_content" id="RSBAvro_p_FirewallUser">
<p>The user name to use to authenticate with a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>FirewallUser</u> and <a href="#RSBAvro_p_FirewallPassword">FirewallPassword</a> properties are used to authenticate against the proxy specified in <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> and <a href="#RSBAvro_p_FirewallPort">FirewallPort</a>, following the authentication method specified in <a href="#RSBAvro_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FirewallPassword" desc="CData JDBC Driver for Avro - RSBAvro - FirewallPassword: A password used to authenticate to a proxy-based firewall.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FirewallPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_FirewallPassword">
<p>A password used to authenticate to a proxy-based firewall.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is passed to the proxy specified by <a href="#RSBAvro_p_FirewallServer">FirewallServer</a> and <a href="#RSBAvro_p_FirewallPort">FirewallPort</a>, following the authentication method specified by <a href="#RSBAvro_p_FirewallType">FirewallType</a>.
</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Proxy" desc="CData JDBC Driver for Avro - RSBAvro - Proxy: This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Proxy</h1>
       
<div class="chapter_content" id="RSBAvro_c_Proxy">
<p>
<p>This section provides a complete list of the Proxy properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a></td><td>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyServer">ProxyServer</a></td><td>The hostname or IP address of a proxy to route HTTP traffic through.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyPort">ProxyPort</a></td><td>The TCP port the ProxyServer proxy is running on.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a></td><td>The authentication type to use to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyUser">ProxyUser</a></td><td>A user name to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a></td><td>A password to be used to authenticate to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxySSLType">ProxySSLType</a></td><td>The SSL type to use when connecting to the ProxyServer proxy.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ProxyExceptions">ProxyExceptions</a></td><td>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyAutoDetect" desc="CData JDBC Driver for Avro - RSBAvro - ProxyAutoDetect: This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyAutoDetect</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyAutoDetect">
<p>This indicates whether to use the system proxy settings or not. This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>This takes precedence over other proxy settings, so you'll need to set ProxyAutoDetect to FALSE in order use custom proxy settings. 
</p>

<p>
</p>

<p>
  NOTE: When this property is set to True, the proxy used is determined as follows:
  <ul><li>A search from the JVM properties (<b>http.proxy, https.proxy, socksProxy, etc.</b>) is performed.
  </li><li>In the case that the JVM properties don't exist, a search from <b>java.home/lib/net.properties</b> is performed.
  </li><li>In the case that java.net.useSystemProxies is set to True, a search from <b>the SystemProxy</b> is performed.
  </li><li>In Windows only, an attempt is made to retrieve these properties from the <b>Internet Options</b> in the <b>registry</b>.
  </li></ul>


</p>

<p>To connect to an HTTP proxy, see <a href="#RSBAvro_p_ProxyServer">ProxyServer</a>. For other proxies, such as SOCKS or tunneling, see <a href="#RSBAvro_p_FirewallType">FirewallType</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyServer" desc="CData JDBC Driver for Avro - RSBAvro - ProxyServer: The hostname or IP address of a proxy to route HTTP traffic through.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyServer</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyServer">
<p>The hostname or IP address of a proxy to route HTTP traffic through.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The hostname or IP address of a proxy to route HTTP traffic through. The driver can use the HTTP, Windows (NTLM), or Kerberos authentication types to authenticate to an HTTP proxy. </p>

<p>If you need to connect through a SOCKS proxy or tunnel the connection, see <a href="#RSBAvro_p_FirewallType">FirewallType</a>.</p>

<p>By default, the driver uses the system proxy. If you need to use another proxy, set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> to false. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyPort" desc="CData JDBC Driver for Avro - RSBAvro - ProxyPort: The TCP port the ProxyServer proxy is running on.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyPort</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyPort">
<p>The TCP port the ProxyServer proxy is running on.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>80</p>

<h3>Remarks</h3>


<p>The port the HTTP proxy is running on that you want to redirect HTTP traffic through. Specify the HTTP proxy in <a href="#RSBAvro_p_ProxyServer">ProxyServer</a>. For other proxy types, see <a href="#RSBAvro_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyAuthScheme" desc="CData JDBC Driver for Avro - RSBAvro - ProxyAuthScheme: The authentication type to use to authenticate to the ProxyServer proxy.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyAuthScheme</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyAuthScheme">
<p>The authentication type to use to authenticate to the ProxyServer proxy.</p>





<h3>Possible Values</h3>
BASIC, DIGEST, NONE, NEGOTIATE, NTLM, PROPRIETARY

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"BASIC"</p>

<h3>Remarks</h3>


<p>This value specifies the authentication type to use to authenticate to the HTTP proxy specified by <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> and <a href="#RSBAvro_p_ProxyPort">ProxyPort</a>. </p>

<p>Note that the driver will use the system proxy settings by default, without further configuration needed; if you want to connect to another proxy, you will need to set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> to false, in addition to <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> and <a href="#RSBAvro_p_ProxyPort">ProxyPort</a>. To authenticate, set <u>ProxyAuthScheme</u> and set <a href="#RSBAvro_p_ProxyUser">ProxyUser</a> and <a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a>, if needed.</p>

<p>The authentication type can be one of the following:
<ul><li><b>BASIC:</b> The driver performs HTTP BASIC authentication.</li><li><b>DIGEST:</b> The driver performs HTTP DIGEST authentication.</li><li><b>NEGOTIATE:</b> The driver retrieves an NTLM or Kerberos token based on the applicable protocol for authentication. </li><li><b>PROPRIETARY:</b> The driver does not generate an NTLM or Kerberos token. You must supply this token in the Authorization header of the HTTP request.</li></ul>
</p>

<p>If you need to use another authentication type, such as SOCKS 5 authentication, see <a href="#RSBAvro_p_FirewallType">FirewallType</a>.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyUser" desc="CData JDBC Driver for Avro - RSBAvro - ProxyUser: A user name to be used to authenticate to the ProxyServer proxy.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyUser</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyUser">
<p>A user name to be used to authenticate to the ProxyServer proxy.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <u>ProxyUser</u> and <a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a> options are used to connect and authenticate against the HTTP proxy specified in <a href="#RSBAvro_p_ProxyServer">ProxyServer</a>.</p>

<p>You can select one of the available authentication types in <a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a>. If you are using HTTP authentication, set this to the user name of a user recognized by the HTTP proxy. If you are using Windows or Kerberos authentication, set this property to a user name in one of the following formats:
<br/><pre lang="">user@domain
domain\user</pre>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyPassword" desc="CData JDBC Driver for Avro - RSBAvro - ProxyPassword: A password to be used to authenticate to the ProxyServer proxy.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyPassword</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyPassword">
<p>A password to be used to authenticate to the ProxyServer proxy.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This property is used to authenticate to an HTTP proxy server that supports NTLM (Windows), Kerberos, or HTTP authentication. To specify the HTTP proxy, you can set <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> and <a href="#RSBAvro_p_ProxyPort">ProxyPort</a>. To specify the authentication type, set <a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a>. </p>

<p>If you are using HTTP authentication, additionally set <a href="#RSBAvro_p_ProxyUser">ProxyUser</a> and <u>ProxyPassword</u> to  HTTP proxy. </p>

<p>If you are using NTLM authentication, set <a href="#RSBAvro_p_ProxyUser">ProxyUser</a> and <u>ProxyPassword</u> to your Windows password. You may also need these to complete Kerberos authentication.</p>

<p>For SOCKS 5 authentication or tunneling, see <a href="#RSBAvro_p_FirewallType">FirewallType</a>.</p>

<p>By default, the driver uses the system proxy. If you want to connect to another proxy, set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> to false. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxySSLType" desc="CData JDBC Driver for Avro - RSBAvro - ProxySSLType: The SSL type to use when connecting to the ProxyServer proxy.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxySSLType</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxySSLType">
<p>The SSL type to use when connecting to the ProxyServer proxy.</p>





<h3>Possible Values</h3>
AUTO, ALWAYS, NEVER, TUNNEL

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"AUTO"</p>

<h3>Remarks</h3>


<p>This property determines when to use SSL for the connection to an HTTP proxy specified by <a href="#RSBAvro_p_ProxyServer">ProxyServer</a>. This value can be AUTO, ALWAYS, NEVER, or TUNNEL. The applicable values are the following:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>AUTO</b></td><td>Default setting. If the URL is an HTTPS URL, the driver will use the TUNNEL option. If the URL is an HTTP URL, the component will use the NEVER option.</td></tr><tr><td style="white-space:nowrap"><b>ALWAYS</b></td><td>The connection is always SSL enabled.</td></tr><tr><td style="white-space:nowrap"><b>NEVER</b></td><td>The connection is not SSL enabled.</td></tr><tr><td style="white-space:nowrap"><b>TUNNEL</b></td><td>The connection is through a tunneling proxy. The proxy server opens a connection to the remote host and traffic flows back and forth through the proxy.</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ProxyExceptions" desc="CData JDBC Driver for Avro - RSBAvro - ProxyExceptions: A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ProxyExceptions</h1>
       
<div class="chapter_content" id="RSBAvro_p_ProxyExceptions">
<p>A semicolon separated list of destination hostnames or IPs that are exempt from connecting through the ProxyServer .</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> is used for all addresses, except for addresses defined in this property. Use semicolons to separate entries.</p>

<p>Note that the driver uses the system proxy settings by default, without further configuration needed; if you want to explicitly configure proxy exceptions for this connection, you need to set <a href="#RSBAvro_p_ProxyAutoDetect">ProxyAutoDetect</a> = false, and configure <a href="#RSBAvro_p_ProxyServer">ProxyServer</a> and <a href="#RSBAvro_p_ProxyPort">ProxyPort</a>. To authenticate, set <a href="#RSBAvro_p_ProxyAuthScheme">ProxyAuthScheme</a> and set <a href="#RSBAvro_p_ProxyUser">ProxyUser</a> and <a href="#RSBAvro_p_ProxyPassword">ProxyPassword</a>, if needed.</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Logging" desc="CData JDBC Driver for Avro - RSBAvro - Logging: A filepath which designates the name and location of the log file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Logging</h1>
       
<div class="chapter_content" id="RSBAvro_c_Logging">
<p>
<p>This section provides a complete list of the Logging properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_Logfile">Logfile</a></td><td>A filepath which designates the name and location of the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Verbosity">Verbosity</a></td><td>The verbosity level that determines the amount of detail included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_LogModules">LogModules</a></td><td>Core modules to be included in the log file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxLogFileSize">MaxLogFileSize</a></td><td>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxLogFileCount">MaxLogFileCount</a></td><td>A string specifying the maximum file count of log files.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Logfile" desc="CData JDBC Driver for Avro - RSBAvro - Logfile: A filepath which designates the name and location of the log file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Logfile</h1>
       
<div class="chapter_content" id="RSBAvro_p_Logfile">
<p>A filepath which designates the name and location of the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Once this property is set, the driver will populate the log file as it carries out various tasks, such as when authentication is performed or queries are executed. If the specified file doesn't already exist, it will be created.</p>

<p>Connection strings and version information are also logged, though connection properties containing sensitive information are masked automatically.</p>

<p>If a relative filepath is supplied, the location of the log file will be resolved based on the path found in the <a href="#RSBAvro_p_Location">Location</a> connection property.</p>

<p>For more control over what is written to the log file, you can adjust the <a href="#RSBAvro_p_Verbosity">Verbosity</a> property.</p>

<p>Log contents are categorized into several modules. You can show/hide individual modules using the <a href="#RSBAvro_p_LogModules">LogModules</a> property.</p>

<p>To edit the maximum size of a single logfile before a new one is created, see <a href="#RSBAvro_p_MaxLogFileSize">MaxLogFileSize</a>.</p>

<p>If you would like to place a cap on the number of logfiles generated, use <a href="#RSBAvro_p_MaxLogFileCount">MaxLogFileCount</a>.

<h2>Java Logging</h2>
</p>

<p>Java logging is also supported. To enable Java logging, set <u>Logfile</u> to:
<br/><pre lang="">Logfile=JAVALOG://myloggername</pre></p>

<p>As in the above sample, JAVALOG:// is a required prefix to use Java logging, and you will substitute your own Logger.</p>

<p>The supplied Logger's getLogger method is then called, using the supplied value to create the Logger instance. If a logging instance already exists, it will reference the existing instance.</p>

<p>When Java logging is enabled, the <a href="#RSBAvro_p_Verbosity">Verbosity</a> will now correspond to specific logging levels.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Verbosity" desc="CData JDBC Driver for Avro - RSBAvro - Verbosity: The verbosity level that determines the amount of detail included in the log file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Verbosity</h1>
       
<div class="chapter_content" id="RSBAvro_p_Verbosity">
<p>The verbosity level that determines the amount of detail included in the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"1"</p>

<h3>Remarks</h3>


<p>The verbosity level determines the amount of detail that the driver reports to the <a href="#RSBAvro_p_Logfile">Logfile</a>. <u>Verbosity</u> levels from 1 to 5 are supported. These are detailed in the <a href="#pg_advancedlogging">Logging</a> page.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - LogModules" desc="CData JDBC Driver for Avro - RSBAvro - LogModules: Core modules to be included in the log file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>LogModules</h1>
       
<div class="chapter_content" id="RSBAvro_p_LogModules">
<p>Core modules to be included in the log file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Only the modules specified (separated by ';') will be included in the log file. By default all modules are included.</p>

<p>See the <a href="#pg_advancedlogging">Logging</a> page for an overview.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MaxLogFileSize" desc="CData JDBC Driver for Avro - RSBAvro - MaxLogFileSize: A string specifying the maximum size in bytes for a log file (for example, 10 MB).">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxLogFileSize</h1>
       
<div class="chapter_content" id="RSBAvro_p_MaxLogFileSize">
<p>A string specifying the maximum size in bytes for a log file (for example, 10 MB).</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"100MB"</p>

<h3>Remarks</h3>


<p>When the limit is hit, a new log is created in the same folder with the date and time appended to the end. The default limit is 100 MB. Values lower than 100 kB will use 100 kB as the value instead.</p>

<p>Adjust the maximum number of logfiles generated with <a href="#RSBAvro_p_MaxLogFileCount">MaxLogFileCount</a>.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MaxLogFileCount" desc="CData JDBC Driver for Avro - RSBAvro - MaxLogFileCount: A string specifying the maximum file count of log files.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxLogFileCount</h1>
       
<div class="chapter_content" id="RSBAvro_p_MaxLogFileCount">
<p>A string specifying the maximum file count of log files.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>-1</p>

<h3>Remarks</h3>


<p>When the limit is hit, a new log is created in the same folder with the date and time appended to the end and the oldest log file will be deleted.</p>

<p>The minimum supported value is 2. A value of 0 or a negative value indicates no limit on the count.</p>

<p>Adjust the maximum size of the logfiles generated with <a href="#RSBAvro_p_MaxLogFileSize">MaxLogFileSize</a>.</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Schema" desc="CData JDBC Driver for Avro - RSBAvro - Schema: A path to the directory that contains the schema files defining tables, views, and stored procedures.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Schema</h1>
       
<div class="chapter_content" id="RSBAvro_c_Schema">
<p>
<p>This section provides a complete list of the Schema properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_Location">Location</a></td><td>A path to the directory that contains the schema files defining tables, views, and stored procedures.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_BrowsableSchemas">BrowsableSchemas</a></td><td>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Tables">Tables</a></td><td>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Views">Views</a></td><td>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FlattenObjects">FlattenObjects</a></td><td>Set FlattenObjects to true to flatten object properties into columns of their own. Otherwise, objects nested in arrays are returned as strings of JSON.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FlattenArrays">FlattenArrays</a></td><td>By default, nested arrays are returned as strings. The FlattenArrays property can be used to flatten the elements of nested arrays into columns of their own. Set FlattenArrays to the number of elements you want to return from nested arrays.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Location" desc="CData JDBC Driver for Avro - RSBAvro - Location: A path to the directory that contains the schema files defining tables, views, and stored procedures.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Location</h1>
       
<div class="chapter_content" id="RSBAvro_p_Location">
<p>A path to the directory that contains the schema files defining tables, views, and stored procedures.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\Avro Data Provider\\Schema"</p>

<h3>Remarks</h3>


<p>The path to a directory which contains the schema files for the driver (.rsd files for tables and views, .rsb files for stored procedures). The folder location can be a relative path from the location of the executable. The <u>Location</u> property is only needed if you want to customize definitions (for example, change a column name, ignore a column, and so on) or extend the data model with new tables, views, or stored procedures.

</p>

<p>If left unspecified, the default location is "%APPDATA%\\CData\\Avro Data Provider\\Schema" with <b>%APPDATA%</b> being set to the user's configuration directory:




<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Mac </td><td>~/Library/Application Support</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - BrowsableSchemas" desc="CData JDBC Driver for Avro - RSBAvro - BrowsableSchemas: This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>BrowsableSchemas</h1>
       
<div class="chapter_content" id="RSBAvro_p_BrowsableSchemas">
<p>This property restricts the schemas reported to a subset of the available schemas. For example, BrowsableSchemas=SchemaA,SchemaB,SchemaC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the schemas from databases can be expensive. Providing a list of schemas in the connection string improves 
the performance.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Tables" desc="CData JDBC Driver for Avro - RSBAvro - Tables: This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Tables</h1>
       
<div class="chapter_content" id="RSBAvro_p_Tables">
<p>This property restricts the tables reported to a subset of the available tables. For example, Tables=TableA,TableB,TableC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the tables from some databases can be expensive. Providing a list of tables in the connection string improves 
the performance of the driver.</p>

<p>This property can also be used as an alternative to automatically listing views if you already know which ones you want to work with and there would otherwise be too many to work with.</p>

<p>Specify the tables you want in a comma-separated list. Each table should be a valid SQL identifier with any special characters
escaped using square brackets, double-quotes or backticks. For example, Tables=TableA,[TableB/WithSlash],WithCatalog.WithSchema.`TableC With Space`. </p>

<p>Note that when connecting to a data source with multiple schemas or catalogs, you will need to provide the fully qualified name of the table in this property, as in the last example here, to avoid ambiguity between tables that exist in multiple catalogs or schemas.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Views" desc="CData JDBC Driver for Avro - RSBAvro - Views: Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Views</h1>
       
<div class="chapter_content" id="RSBAvro_p_Views">
<p>Restricts the views reported to a subset of the available tables. For example, Views=ViewA,ViewB,ViewC.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Listing the views from some databases can be expensive. Providing a list of views in the connection string improves the performance of the driver. </p>

<p>This property can also be used as an alternative to automatically listing views if you already know which ones you want to work with and there would otherwise be too many to work with.
</p>

<p>Specify the views you want in a comma-separated list. Each view should be a valid SQL identifier with any special characters
escaped using square brackets, double-quotes or backticks. For example, Views=ViewA,[ViewB/WithSlash],WithCatalog.WithSchema.`ViewC With Space`. </p>

<p>Note that when connecting to a data source with multiple schemas or catalogs, you will need to provide the fully qualified name of the table in this property, as in the last example here, to avoid ambiguity between tables that exist in multiple catalogs or schemas.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FlattenObjects" desc="CData JDBC Driver for Avro - RSBAvro - FlattenObjects: Set FlattenObjects to true to flatten object properties into columns of their own. Otherwise, objects nested in arrays are returned as strings of JSON.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FlattenObjects</h1>
       
<div class="chapter_content" id="RSBAvro_p_FlattenObjects">
<p>Set FlattenObjects to true to flatten object properties into columns of their own. Otherwise, objects nested in arrays are returned as strings of JSON.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>To generate the column name, the driver concatenates the property name onto the object name with a dot. </p>

<p>For example, you can flatten the nested objects below at connection time:
<br/><pre lang="">[
     { "grade": "A", "score": 2 },
     { "grade": "A", "score": 6 },
     { "grade": "A", "score": 10 },
     { "grade": "A", "score": 9 },
     { "grade": "B", "score": 14 }
]</pre>
When <u>FlattenObjects</u> is set to true and <a href="#RSBAvro_p_FlattenArrays">FlattenArrays</a> is set to 1, the preceding array is flattened into the following table:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Column Value</b></td></tr><tr><td style="white-space:nowrap">grades.0.grade</td><td>A</td></tr><tr><td style="white-space:nowrap">grades.0.score</td><td>2</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FlattenArrays" desc="CData JDBC Driver for Avro - RSBAvro - FlattenArrays: By default, nested arrays are returned as strings. The FlattenArrays property can be used to flatten the elements of nested arrays into columns of their own. Set FlattenArrays to the number of elements you want to return from nested arrays.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FlattenArrays</h1>
       
<div class="chapter_content" id="RSBAvro_p_FlattenArrays">
<p>By default, nested arrays are returned as strings. The FlattenArrays property can be used to flatten the elements of nested arrays into columns of their own. Set FlattenArrays to the number of elements you want to return from nested arrays.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This is only recommended for arrays that are expected to be short.  </p>

<p>Set <u>FlattenArrays</u> to the number of elements you want to return from nested arrays. The specified elements are returned as columns.  The zero-based index is concatenated to the column name. Other elements are ignored.</p>

<p>For example, you can return an arbitrary number of elements from an array of strings:
<br/><pre lang="">["FLOW-MATIC","LISP","COBOL"]</pre>
When <u>FlattenArrays</u> is set to 1, the preceding array is flattened into the following table:
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Column Name</b></td><td><b>Column Value</b></td></tr><tr><td style="white-space:nowrap">languages.0</td><td>FLOW-MATIC</td></tr></table></center><p /></p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Caching" desc="CData JDBC Driver for Avro - RSBAvro - Caching: Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Caching</h1>
       
<div class="chapter_content" id="RSBAvro_c_Caching">
<p>
<p>This section provides a complete list of the Caching properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AutoCache">AutoCache</a></td><td>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheDriver">CacheDriver</a></td><td>The database driver used to cache data.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheConnection">CacheConnection</a></td><td>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheLocation">CacheLocation</a></td><td>Specifies the path to the cache when caching to a file.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheTolerance">CacheTolerance</a></td><td>The tolerance for stale data in the cache specified in seconds when using AutoCache .</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Offline">Offline</a></td><td>Use offline mode to get the data from the cache instead of the live source.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_CacheMetadata">CacheMetadata</a></td><td>This property determines whether or not to cache the table metadata to a file store.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AutoCache" desc="CData JDBC Driver for Avro - RSBAvro - AutoCache: Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AutoCache</h1>
       
<div class="chapter_content" id="RSBAvro_p_AutoCache">
<p>Automatically caches the results of SELECT queries into a cache database specified by either CacheLocation or both of CacheConnection and CacheProvider .</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When <u>AutoCache</u> = true, the driver automatically maintains a cache of your table's data in the database of your choice. </p>

<p>

<h3>Setting the Caching Database</h3>
</p>

<p>When <u>AutoCache</u> = true, the driver caches to a simple, file-based cache. You can configure its location or cache to a different database with the following properties:
<ul><li><a href="#RSBAvro_p_CacheLocation">CacheLocation</a>: Specifies the path to the file store.</li><li><a href="#RSBAvro_p_CacheDriver">CacheDriver</a> and <a href="#RSBAvro_p_CacheConnection">CacheConnection</a>: Specifies a driver to a database and the connection string.</li></ul></p>

<p>

<h3>See Also</h3>
</p>

<p><ul><li><a href="#RSBAvro_p_CacheMetadata">CacheMetadata</a>: This property reduces the amount of metadata that crosses the network by persisting table schemas retrieved from the Avro metadata. Metadata then needs to be retrieved only once instead of every connection.</li><li><a href="#pg_cacheExplicitly">Explicitly Caching Data</a>: This section provides more examples of using <u>AutoCache</u> in <a href="#RSBAvro_p_Offline">Offline</a> mode.</li><li><a href="#pg_cache">CACHE Statements</a>: You can use the CACHE statement to persist any SELECT query, as well as manage the cache; for example, refreshing schemas.</li></ul></p>

<p></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CacheDriver" desc="CData JDBC Driver for Avro - RSBAvro - CacheDriver: The database driver used to cache data.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheDriver</h1>
       
<div class="chapter_content" id="RSBAvro_p_CacheDriver">
<p>The database driver used to cache data.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>You can cache to any database for which you have a JDBC driver, including CData JDBC drivers.</p>

<p>The cache database is determined by the <u>CacheDriver</u> and <a href="#RSBAvro_p_CacheConnection">CacheConnection</a> properties. The <u>CacheDriver</u> is the name of the JDBC driver class that you want to use to cache data. </p>

<p><b>Note:</b> you must add the <u>CacheDriver</u> JAR file to the classpath. 

</p>

<p>
<h2>Examples</h2>

The following examples show how to cache to several major databases. Refer to <a href="#RSBAvro_p_CacheConnection">CacheConnection</a> for more information on the JDBC URL syntax and typical connection properties.


<h3>Derby and Java DB</h3>
</p>

<p></p>

<p>The driver simplifies Derby configuration. Java DB is the Oracle distribution of Derby. The JAR file is shipped in the JDK. You can find the JAR file, derby.jar, in the db subfolder of the JDK installation. In most caching scenarios, you need to specify only the following, after adding derby.jar to the classpath:
<br/><pre lang="">jdbc:avro:CacheLocation='c:/Temp/cachedir';URI=C:\folder\table.avro;</pre>
To customize the Derby JDBC URL, use <u>CacheDriver</u> and <a href="#RSBAvro_p_CacheConnection">CacheConnection</a>. For example, to cache to an in-memory database, use a JDBC URL like the following:
<br/><pre lang="">jdbc:avro:CacheDriver=org.apache.derby.jdbc.EmbeddedDriver;CacheConnection='jdbc:derby:memory';URI=C:\folder\table.avro;</pre>


<h3>SQLite</h3>
</p>

<p>The following is a JDBC URL for the SQLite JDBC driver: 
<br/><pre lang="plain">jdbc:avro:CacheDriver=org.sqlite.JDBC;CacheConnection='jdbc:sqlite:C:/Temp/sqlite.db';URI=C:\folder\table.avro;</pre>

  
<h3>MySQL</h3>

  </p>

<p>The following is a JDBC URL for the included CData JDBC Driver for MySQL:
  <br/><pre lang="plain">  jdbc:avro:Cache Driver=cdata.jdbc.mysql.MySQLDriver;Cache Connection='jdbc:mysql:Server=localhost;Port=3306;Database=cache;User=root;Password=123456';URI=C:\folder\table.avro;
  </pre>



<h3>SQL Server</h3>
</p>

<p>The following JDBC URL uses the Microsoft JDBC Driver for SQL Server:

<br/><pre lang="plain">jdbc:avro:Cache Driver=com.microsoft.sqlserver.jdbc.SQLServerDriver;Cache Connection='jdbc:sqlserver://localhost\sqlexpress:7437;user=sa;password=123456;databaseName=Cache';URI=C:\folder\table.avro;</pre>



<h3>Oracle</h3>
</p>

<p>The following is a JDBC URL for the Oracle Thin Client:
<br/><pre lang="plain">jdbc:avro:Cache Driver=oracle.jdbc.OracleDriver;CacheConnection='jdbc:oracle:thin:scott/tiger@localhost:1521:orcldb';URI=C:\folder\table.avro;</pre>
NOTE: If using a version of Oracle older than 9i, the cache driver will instead be oracle.jdbc.driver.OracleDriver .



<h3>PostgreSQL</h3>
</p>

<p>The following JDBC URL uses the official PostgreSQL JDBC driver:
<br/><pre lang="plain">jdbc:avro:CacheDriver=cdata.jdbc.postgresql.PostgreSQLDriver;CacheConnection='jdbc:postgresql:User=postgres;Password=admin;Database=postgres;Server=localhost;Port=5432;';URI=C:\folder\table.avro;</pre>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CacheConnection" desc="CData JDBC Driver for Avro - RSBAvro - CacheConnection: The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheConnection</h1>
       
<div class="chapter_content" id="RSBAvro_p_CacheConnection">
<p>The connection string for the cache database. This property is always used in conjunction with CacheProvider . Setting both properties will override the value set for CacheLocation for caching data.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The cache database is determined based on the <a href="#RSBAvro_p_CacheDriver">CacheDriver</a> and <u>CacheConnection</u> properties. Both properties are required to use the cache database. Examples of common cache database settings can be found below. For more information on setting the caching database's driver, refer to <a href="#RSBAvro_p_CacheDriver">CacheDriver</a>.</p>

<p>The connection string specified in the <u>CacheConnection</u> property is passed directly to the underlying <a href="#RSBAvro_p_CacheDriver">CacheDriver</a>. Consult the documentation for the specific JDBC driver for more information on the available properties. Make sure to include the JDBC driver in your application's classpath.</p>

<p>

<h3>Derby and Java DB</h3>
</p>

<p>The driver simplifies caching to Derby, only requiring you to set the <a href="#RSBAvro_p_CacheLocation">CacheLocation</a> property to make a basic connection.</p>

<p>Alternatively, you can configure the connection to Derby manually using <a href="#RSBAvro_p_CacheDriver">CacheDriver</a> and <u>CacheConnection</u>. The following is the Derby JDBC URL syntax:
<br/><pre lang="plain">jdbc:derby:[subsubprotocol:][databaseName][;attribute=value[;attribute=value] ... ]</pre>
For example, to cache to an in-memory database, use the following:
<br/><pre lang="">jdbc:derby:memory</pre>
</p>

<p>
<h3>SQLite</h3>
</p>

<p>To cache to SQLite, you can use the SQLite JDBC driver. The following is the syntax of the JDBC URL:
<br/><pre lang="plain">jdbc:sqlite:dataSource</pre>
<ul><li><b>Data Source</b>: The path to an SQLite database file. Or, use a value of <var>:memory</var> to cache in memory.</li></ul>
</p>

<p>
<h3>MySQL</h3>
</p>

<p> 
The installation includes the CData JDBC Driver for MySQL. The following is an example JDBC URL:
<br/><pre lang="plain">jdbc:mysql:User=root;Password=root;Server=localhost;Port=3306;Database=cache</pre>
The following are typical connection properties:</p>

<p><ul><li><b>Server</b>: The IP address or domain name of the server you want to connect to.</li><li><b>Port</b>: The port that the server is running on.</li><li><b>User</b>: The user name provided for authentication to the database.</li><li><b>Password</b>: The password provided for authentication to the database.</li><li><b>Database</b>: The name of the database.</li></ul>

<h3>SQL Server</h3>
</p>

<p>The JDBC URL for the Microsoft JDBC Driver for SQL Server has the following syntax:
<br/><pre lang="plain">jdbc:sqlserver://[serverName[\instance][:port]][;database=databaseName][;property=value[;property=value] ... ]</pre>
For example:
<br/><pre lang="plain">jdbc:sqlserver://localhost\sqlexpress:1433;integratedSecurity=true</pre>
The following are typical SQL Server connection properties:
<ul><li><b>Server</b>: The name or network address of the computer running SQL Server. To connect to a named instance instead of the default instance, this property can be used to specify the host name and the instance, separated by a backslash. </li><li><b>Port</b>: The port SQL Server is running on.</li><li><b>Database</b>: The name of the SQL Server database. </li><li><b>Integrated Security</b>: Set this option to true to use the current Windows account for authentication. Set this option to false if you are setting the User and Password in the connection.

<p>To use integrated security, you will also need to add sqljdbc_auth.dll to a folder on the Windows system path. This file is located in the auth subfolder of the Microsoft JDBC Driver for SQL Server installation. The bitness of the assembly must match the bitness of your JVM.</p>
</li><li><b>User Id</b>: The user name provided for authentication with SQL Server. This property is only needed if you are not using integrated security.</li><li><b>Password</b>: The password provided for authentication with SQL Server. This property is only needed if you are not using integrated security.</li></ul>



<h3>Oracle</h3>
</p>

<p>The following is the conventional JDBC URL syntax for the Oracle JDBC Thin driver:
<br/><pre lang="plain">jdbc:oracle:thin:[userId/password]@[//]host[[:port][:sid]]</pre>

For example:

<br/><pre lang="plain">jdbc:oracle:thin:scott/tiger@myhost:1521:orcl</pre>

The following are typical connection properties:
<ul><li>
<p><b>Data Source</b>: The connect descriptor that identifies the Oracle database. This can be a TNS connect descriptor, an Oracle Net Services name that resolves to a connect descriptor, or, after version 11g, an Easy Connect naming (the host name of the Oracle server with an optional port and service name).</p>
</li><li><b>Password</b>: The password provided for authentication with the Oracle database.</li><li><b>User Id</b>: The user Id provided for authentication with the Oracle database.</li></ul>


<h3>PostgreSQL</h3>
</p>

<p>The following is the JDBC URL syntax for the official PostgreSQL JDBC driver:
<br/><pre lang="plain">jdbc:postgresql:[//[host[:port]]/]database[[?option=value][[&amp;option=value][&amp;option=value] ... ]]</pre>
For example, the following connection string connects to a database on the default host (localhost) and port (5432):
<br/><pre lang="plain">jdbc:postgresql:postgres</pre>
The following are typical connection properties:
<ul><li><b>Host</b>: The address of the server hosting the PostgreSQL database.</li><li><b>Port</b>: The port used to connect to the server hosting the PostgreSQL database.</li><li><b>Database</b>: The name of the database.</li><li><b>User name</b>: The user Id provided for authentication with the PostgreSQL database. You can specify this in the JDBC URL with the "user" parameter.</li><li><b>Password</b>: The password provided for authentication with the PostgreSQL database.</li></ul>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CacheLocation" desc="CData JDBC Driver for Avro - RSBAvro - CacheLocation: Specifies the path to the cache when caching to a file.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheLocation</h1>
       
<div class="chapter_content" id="RSBAvro_p_CacheLocation">
<p>Specifies the path to the cache when caching to a file.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"%APPDATA%\\CData\\Avro Data Provider"</p>

<h3>Remarks</h3>


<p>The <u>CacheLocation</u> is a simple, file-based cache. The driver uses Java DB, Oracle's distribution of the Derby database. To cache to Java DB, you will need to add the Java DB JAR file to the classpath. The JAR file, derby.jar, is shipped in the JDK and located in the db subfolder of the JDK installation. </p>

<p></p>

<p>If left unspecified, the default location is "%APPDATA%\\CData\\Avro Data Provider" with <b>%APPDATA%</b> being set to the user's configuration directory:

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap"><b>Platform</b> </td><td><b>%APPDATA%</b></td></tr><tr><td style="white-space:nowrap">Windows </td><td>The value of the APPDATA environment variable</td></tr><tr><td style="white-space:nowrap">Mac </td><td>~/Library/Application Support</td></tr><tr><td style="white-space:nowrap">Linux </td><td>~/.config</td></tr></table></center><p />


<h3>See Also</h3>
</p>

<p><ul><li><a href="#RSBAvro_p_AutoCache">AutoCache</a>: Set to implicitly create and maintain a cache for later offline use. </li><li><a href="#RSBAvro_p_CacheMetadata">CacheMetadata</a>: Set to persist the Avro catalog in <u>CacheLocation</u>.</li></ul>


</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CacheTolerance" desc="CData JDBC Driver for Avro - RSBAvro - CacheTolerance: The tolerance for stale data in the cache specified in seconds when using AutoCache .">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheTolerance</h1>
       
<div class="chapter_content" id="RSBAvro_p_CacheTolerance">
<p>The tolerance for stale data in the cache specified in seconds when using AutoCache .</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>600</p>

<h3>Remarks</h3>


<p>The tolerance for stale data in the cache specified in seconds. This only applies when <a href="#RSBAvro_p_AutoCache">AutoCache</a> is used. The driver checks with the data source for newer records after the tolerance interval has expired. Otherwise, it returns the data directly from the cache.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Offline" desc="CData JDBC Driver for Avro - RSBAvro - Offline: Use offline mode to get the data from the cache instead of the live source.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Offline</h1>
       
<div class="chapter_content" id="RSBAvro_p_Offline">
<p>Use offline mode to get the data from the cache instead of the live source.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When <u>Offline</u> = true, all queries execute against the cache as opposed to the live data source. In this mode, certain queries like INSERT, UPDATE, DELETE, and CACHE are not allowed. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - CacheMetadata" desc="CData JDBC Driver for Avro - RSBAvro - CacheMetadata: This property determines whether or not to cache the table metadata to a file store.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>CacheMetadata</h1>
       
<div class="chapter_content" id="RSBAvro_p_CacheMetadata">
<p>This property determines whether or not to cache the table metadata to a file store.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>As you execute queries with this property set, table metadata in the Avro catalog are cached to the file store specified by <a href="#RSBAvro_p_CacheLocation">CacheLocation</a> if set or the user's home directory otherwise. A table's metadata will be retrieved only once, when the table is queried for the first time.


<h3>When to Use CacheMetadata</h3>
</p>

<p>The driver automatically persists metadata in memory for up to two hours when you first discover the metadata for a table or view and therefore, <u>CacheMetadata</u> is generally not required. <u>CacheMetadata</u> becomes useful when metadata operations are expensive such as when you are working with large amounts of metadata or when you have many short-lived connections.


<h3>When Not to Use CacheMetadata</h3>
</p>

<p> 
<ul><li><b>When you are working with volatile metadata</b>: Metadata for a table is only retrieved the first time the connection to the table is made. To pick up new, changed, or deleted columns, you would need to delete and rebuild the metadata cache. Therefore, it is best to rely on the in-memory caching for cases where metadata changes often.</li><li><b>When you are caching to a database</b>: <u>CacheMetadata</u> can only be used with <a href="#RSBAvro_p_CacheLocation">CacheLocation</a>. If you are caching to another database with the <a href="#RSBAvro_p_CacheDriver">CacheDriver</a> and <a href="#RSBAvro_p_CacheConnection">CacheConnection</a> properties, use <a href="#RSBAvro_p_AutoCache">AutoCache</a> to cache implicitly. Or, use  <a href="#pg_cache">CACHE Statements</a> to cache explicitly. </li></ul>


</p>

</div>





  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Miscellaneous" desc="CData JDBC Driver for Avro - RSBAvro - Miscellaneous: When set to true, the provider will aggregate all the files in URI directory into a single result.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Miscellaneous</h1>
       
<div class="chapter_content" id="RSBAvro_c_Miscellaneous">
<p>
<p>This section provides a complete list of the Miscellaneous properties you can configure in the connection string for this provider.
<hr/>
<center></a>
<table><tr><td><b>Property</b></td><td><b>Description</b></td></tr>
<tr valign="top"><td><a href="#RSBAvro_p_AggregateFiles">AggregateFiles</a></td><td>When set to true, the provider will aggregate all the files in URI directory into a single result.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_BatchSize">BatchSize</a></td><td>The maximum size of each batch operation to submit.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Charset">Charset</a></td><td>Specifies the session character set for encoding and decoding character data transferred to and from the Avro file. The default value is UTF-8.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ConnectionLifeTime">ConnectionLifeTime</a></td><td>The maximum lifetime of a connection in seconds. Once the time has elapsed, the connection object is disposed.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ConnectOnOpen">ConnectOnOpen</a></td><td>This property specifies whether to connect to the Avro when the connection is opened.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DeleteDownloadedFiles">DeleteDownloadedFiles</a></td><td>When set to true, the provider will delete parsed Avro files downloaded from cloud sources.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_DirectoryRetrievalDepth">DirectoryRetrievalDepth</a></td><td>Limit the subfolders recursively scanned when IncludeSubdirectories is enabled.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_ExcludeFiles">ExcludeFiles</a></td><td>Comma-separated list of file extensions to exclude from the set of the files modeled as tables.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_FolderId">FolderId</a></td><td>The ID of a folder in Google Drive. If set, the resource location specified by the URI is relative to the Folder ID for all operations.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeDropboxTeamResources">IncludeDropboxTeamResources</a></td><td>Indicates if you want to include Dropbox team files and folders.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeFiles">IncludeFiles</a></td><td>Comma-separated list of file extensions to include into the set of the files modeled as tables.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeItemsFromAllDrives">IncludeItemsFromAllDrives</a></td><td>Whether Google Drive shared drive items should be included in results. If not present or set to false, then shared drive items are not returned.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_IncludeSubdirectories">IncludeSubdirectories</a></td><td>Whether to read files from nested folders. In the case of a name collision, table names are prefixed by the underscore-separated folder names.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_InsertMode">InsertMode</a></td><td>The behavior when using bulk INSERTs to create Avro files.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MaxRows">MaxRows</a></td><td>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_MetadataDiscoveryURI">MetadataDiscoveryURI</a></td><td>Used when aggregating multiple files into one table, this property specifies a specific file to read to determined the aggregated table schema.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Other">Other</a></td><td>These hidden properties are used only in specific use cases.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PageSize">PageSize</a></td><td>(Optional) PageSize value.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PathSeparator">PathSeparator</a></td><td>Determines the character which will be used to replace the file separator.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolIdleTimeout">PoolIdleTimeout</a></td><td>The allowed idle time for a connection before it is closed.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolMaxSize">PoolMaxSize</a></td><td>The maximum connections in the pool.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolMinSize">PoolMinSize</a></td><td>The minimum number of connections in the pool.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PoolWaitTime">PoolWaitTime</a></td><td>The max seconds to wait for an available connection.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_PseudoColumns">PseudoColumns</a></td><td>This property indicates whether or not to include pseudo columns as columns to the table.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_RTK">RTK</a></td><td>The runtime key used for licensing.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_TemporaryLocalFolder">TemporaryLocalFolder</a></td><td>The path, or URI, to the folder that is used to temporarily download avro file(s).</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_Timeout">Timeout</a></td><td>The value in seconds until the timeout error is thrown, canceling the operation.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UseConnectionPooling">UseConnectionPooling</a></td><td>This property enables connection pooling.</td></tr>

<tr valign="top"><td><a href="#RSBAvro_p_UserDefinedViews">UserDefinedViews</a></td><td>A filepath pointing to the JSON configuration file containing your custom views.</td></tr>
</table></center></div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - AggregateFiles" desc="CData JDBC Driver for Avro - RSBAvro - AggregateFiles: When set to true, the provider will aggregate all the files in URI directory into a single result.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>AggregateFiles</h1>
       
<div class="chapter_content" id="RSBAvro_p_AggregateFiles">
<p>When set to true, the provider will aggregate all the files in URI directory into a single result.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>With this option enabled, the AggregatedFiles will be exposed which can be used to query the dataset. By default the first file in the folder is used to define the schema.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - BatchSize" desc="CData JDBC Driver for Avro - RSBAvro - BatchSize: The maximum size of each batch operation to submit.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>BatchSize</h1>
       
<div class="chapter_content" id="RSBAvro_p_BatchSize">
<p>The maximum size of each batch operation to submit.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>0</p>

<h3>Remarks</h3>


<p>When BatchSize is set to a value greater than 0, the batch operation will split the entire batch into separate batches of size BatchSize. The split batches will then be submitted to the server individually. This is useful when the server has limitations on the size of the request that can be submitted.
</p>

<p>Setting BatchSize to 0 will submit the entire batch as specified.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Charset" desc="CData JDBC Driver for Avro - RSBAvro - Charset: Specifies the session character set for encoding and decoding character data transferred to and from the Avro file. The default value is UTF-8.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Charset</h1>
       
<div class="chapter_content" id="RSBAvro_p_Charset">
<p>Specifies the session character set for encoding and decoding character data transferred to and from the Avro file. The default value is UTF-8.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"UTF-8"</p>

<h3>Remarks</h3>


<p>Specifies the session character set for encoding and decoding character data transferred to and from the Avro file. The default value is UTF-8.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ConnectionLifeTime" desc="CData JDBC Driver for Avro - RSBAvro - ConnectionLifeTime: The maximum lifetime of a connection in seconds. Once the time has elapsed, the connection object is disposed.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ConnectionLifeTime</h1>
       
<div class="chapter_content" id="RSBAvro_p_ConnectionLifeTime">
<p>The maximum lifetime of a connection in seconds. Once the time has elapsed, the connection object is disposed.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>0</p>

<h3>Remarks</h3>


<p>The maximum lifetime of a connection in seconds. Once the time has elapsed, the connection object is disposed. The default is 0 which indicates there is no limit to the connection lifetime. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ConnectOnOpen" desc="CData JDBC Driver for Avro - RSBAvro - ConnectOnOpen: This property specifies whether to connect to the Avro when the connection is opened.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ConnectOnOpen</h1>
       
<div class="chapter_content" id="RSBAvro_p_ConnectOnOpen">
<p>This property specifies whether to connect to the Avro when the connection is opened.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>When set to true, a connection will be made to Avro when the connection is opened. This property enables the Test Connection feature available in various database tools.
</p>

<p>This feature acts as a NOOP command as it is used to verify a connection can be made to Avro and nothing from this initial connection is maintained.
</p>

<p>Setting this property to false may provide performance improvements (depending upon the number of times a connection is opened).
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - DeleteDownloadedFiles" desc="CData JDBC Driver for Avro - RSBAvro - DeleteDownloadedFiles: When set to true, the provider will delete parsed Avro files downloaded from cloud sources.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>DeleteDownloadedFiles</h1>
       
<div class="chapter_content" id="RSBAvro_p_DeleteDownloadedFiles">
<p>When set to true, the provider will delete parsed Avro files downloaded from cloud sources.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>true</p>

<h3>Remarks</h3>


<p>When set to false, downloaded files will be stored in directory specified through connection property 'TemporaryLocalFolder'.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - DirectoryRetrievalDepth" desc="CData JDBC Driver for Avro - RSBAvro - DirectoryRetrievalDepth: Limit the subfolders recursively scanned when IncludeSubdirectories is enabled.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>DirectoryRetrievalDepth</h1>
       
<div class="chapter_content" id="RSBAvro_p_DirectoryRetrievalDepth">
<p>Limit the subfolders recursively scanned when IncludeSubdirectories is enabled.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"-1"</p>

<h3>Remarks</h3>


<p>When <a href="#RSBAvro_p_IncludeSubdirectories">IncludeSubdirectories</a> is enabled, <u>DirectoryRetrievalDepth</u> specifies how many subfolders will be recursively scanned before stopping. -1 specifies that all subfolders are scanned.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - ExcludeFiles" desc="CData JDBC Driver for Avro - RSBAvro - ExcludeFiles: Comma-separated list of file extensions to exclude from the set of the files modeled as tables.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>ExcludeFiles</h1>
       
<div class="chapter_content" id="RSBAvro_p_ExcludeFiles">
<p>Comma-separated list of file extensions to exclude from the set of the files modeled as tables.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>It is also possible to specify datetime filters. We currently support CreatedDate and ModifiedDate.
All extension filters are evaluated in disjunction (using OR operator), and then the resulting filter is evaluated in conjunction (using AND operator) with the datetime filters.
</p>

<p>Examples:
<br/><pre lang="sql">ExcludeFiles="TXT,CreatedDate&lt;='2020-11-26T07:39:34-05:00'"
ExcludeFiles="TXT,ModifiedDate&lt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 50, 000)"
ExcludeFiles="ModifiedDate&gt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 49, 000),ModifiedDate&lt;=CURRENT_TIMESTAMP()"</pre></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - FolderId" desc="CData JDBC Driver for Avro - RSBAvro - FolderId: The ID of a folder in Google Drive. If set, the resource location specified by the URI is relative to the Folder ID for all operations.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>FolderId</h1>
       
<div class="chapter_content" id="RSBAvro_p_FolderId">
<p>The ID of a folder in Google Drive. If set, the resource location specified by the URI is relative to the Folder ID for all operations.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The ID of a folder in Google Drive. If set, the resource location specified by the URI is relative to the Folder ID for all operations.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - IncludeDropboxTeamResources" desc="CData JDBC Driver for Avro - RSBAvro - IncludeDropboxTeamResources: Indicates if you want to include Dropbox team files and folders.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>IncludeDropboxTeamResources</h1>
       
<div class="chapter_content" id="RSBAvro_p_IncludeDropboxTeamResources">
<p>Indicates if you want to include Dropbox team files and folders.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>In order to access Dropbox team folders and files, please set this connection property to True.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - IncludeFiles" desc="CData JDBC Driver for Avro - RSBAvro - IncludeFiles: Comma-separated list of file extensions to include into the set of the files modeled as tables.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>IncludeFiles</h1>
       
<div class="chapter_content" id="RSBAvro_p_IncludeFiles">
<p>Comma-separated list of file extensions to include into the set of the files modeled as tables.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"avro"</p>

<h3>Remarks</h3>


<p>Comma-separated list of file extensions to include into the set of the files modeled as tables. For example, IncludeFiles=avro,TXT. The default is avro. </p>

<p>A '*' value can be specified to include all files. A 'NOEXT' value can be specified to include files without an extension. 
</p>

<p>It is also possible to specify datetime filters. We currently support CreatedDate and ModifiedDate.
All extension filters are evaluated in disjunction (using OR operator), and then the resulting filter is evaluated in conjunction (using AND operator) with the datetime filters.
</p>

<p>Examples: 
<br/><pre lang="sql">IncludeFiles="TXT,CreatedDate&lt;='2020-11-26T07:39:34-05:00'"
IncludeFiles="TXT,ModifiedDate&lt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 50, 000)"
IncludeFiles="ModifiedDate&gt;=DATETIMEFROMPARTS(2020, 11, 26, 7, 40, 49, 000),ModifiedDate&lt;=CURRENT_TIMESTAMP()"</pre>
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - IncludeItemsFromAllDrives" desc="CData JDBC Driver for Avro - RSBAvro - IncludeItemsFromAllDrives: Whether Google Drive shared drive items should be included in results. If not present or set to false, then shared drive items are not returned.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>IncludeItemsFromAllDrives</h1>
       
<div class="chapter_content" id="RSBAvro_p_IncludeItemsFromAllDrives">
<p>Whether Google Drive shared drive items should be included in results. If not present or set to false, then shared drive items are not returned.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>If this property is set to 'True', files will be retrieved from all drives, including shared drives. The file retrieval can be limited a specific shared drive or a specific folder in that shared drive by setting the start of the URI to the path of the shared drive and optionally any folder within, for example: 'gdrive://SharedDriveA/FolderA/...'. Additionally, the FolderId property can be used to limit the search to an exact subdirectory.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - IncludeSubdirectories" desc="CData JDBC Driver for Avro - RSBAvro - IncludeSubdirectories: Whether to read files from nested folders. In the case of a name collision, table names are prefixed by the underscore-separated folder names.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>IncludeSubdirectories</h1>
       
<div class="chapter_content" id="RSBAvro_p_IncludeSubdirectories">
<p>Whether to read files from nested folders. In the case of a name collision, table names are prefixed by the underscore-separated folder names.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>Whether to read files from nested folders. Table names are prefixed by each nested folder name separated by underscores. For example, 
<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">Root\subfolder1\tableA</td><td>Root\subfolder1\subfolder2\tableA</td></tr><tr><td style="white-space:nowrap">subfolder1_tableA</td><td>subfolder1_subfolder2_tableA</td></tr></table></center><p />
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - InsertMode" desc="CData JDBC Driver for Avro - RSBAvro - InsertMode: The behavior when using bulk INSERTs to create Avro files.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>InsertMode</h1>
       
<div class="chapter_content" id="RSBAvro_p_InsertMode">
<p>The behavior when using bulk INSERTs to create Avro files.</p>





<h3>Possible Values</h3>
create, overwrite, batch

<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"create"</p>

<h3>Remarks</h3>


<p><ul><li>Create: Set this to create a new Avro file using the table name specified in Create Table Statement. This will cause an error if a file already exists with the same file name as the new file.</li><li>Overwrite: Set this to overwrite any exisiting Avro file with the same name as the new file.</li><li>Batch: Set this if using <a href="#RSBAvro_p_BatchSize">BatchSize</a> &gt; 0. This will create multiple Avro files, each file containing data for a single batch. File names would follow the pattern: '&lt;Timestamp&gt;_&lt;Table Name&gt;_&lt;Batch ID&gt;.avro'.</li></ul></p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MaxRows" desc="CData JDBC Driver for Avro - RSBAvro - MaxRows: Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MaxRows</h1>
       
<div class="chapter_content" id="RSBAvro_p_MaxRows">
<p>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>-1</p>

<h3>Remarks</h3>


<p>Limits the number of rows returned when no aggregation or GROUP BY is used in the query. This takes precedence over LIMIT clauses.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - MetadataDiscoveryURI" desc="CData JDBC Driver for Avro - RSBAvro - MetadataDiscoveryURI: Used when aggregating multiple files into one table, this property specifies a specific file to read to determined the aggregated table schema.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>MetadataDiscoveryURI</h1>
       
<div class="chapter_content" id="RSBAvro_p_MetadataDiscoveryURI">
<p>Used when aggregating multiple files into one table, this property specifies a specific file to read to determined the aggregated table schema.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>Used when aggregating multiple files into one table, this property specifies a specific file to read to determined the aggregated table schema.

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Other" desc="CData JDBC Driver for Avro - RSBAvro - Other: These hidden properties are used only in specific use cases.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Other</h1>
       
<div class="chapter_content" id="RSBAvro_p_Other">
<p>These hidden properties are used only in specific use cases.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>The properties listed below are available for specific use cases. Normal driver use cases and functionality should not require these properties.</p>

<p>Specify multiple properties in a semicolon-separated list.


<h3>Caching Configuration</h3>

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">CachePartial=True</td><td>Caches only a subset of columns, which you can specify in your query.
</td></tr><tr><td style="white-space:nowrap">QueryPassthrough=True</td><td>Passes the specified query to the cache database instead of using the SQL parser of the driver.</td></tr></table></center><p />


<h3>Integration and Formatting</h3>

<p /><center><table class='table'><tr style='display: none;'><td /><td /></tr><tr><td style="white-space:nowrap">DefaultColumnSize</td><td>Sets the default length of string fields when the data source does not provide column length in the metadata. The default value is 2000.
</td></tr><tr><td style="white-space:nowrap">ConvertDateTimeToGMT</td><td>Determines whether to convert date-time values to GMT, instead of the local time of the machine.
</td></tr><tr><td style="white-space:nowrap">RecordToFile=filename</td><td>Records the underlying socket data transfer to the specified file.
</td></tr></table></center><p />

</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PageSize" desc="CData JDBC Driver for Avro - RSBAvro - PageSize: (Optional) PageSize value.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PageSize</h1>
       
<div class="chapter_content" id="RSBAvro_p_PageSize">
<p>(Optional) PageSize value.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"5000"</p>

<h3>Remarks</h3>


<p>The PageSize value is used to specify number of rows to fetch at a time.</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PathSeparator" desc="CData JDBC Driver for Avro - RSBAvro - PathSeparator: Determines the character which will be used to replace the file separator.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PathSeparator</h1>
       
<div class="chapter_content" id="RSBAvro_p_PathSeparator">
<p>Determines the character which will be used to replace the file separator.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>"_"</p>

<h3>Remarks</h3>


<p>Determines the character which will be used to replace the file separator.
If there is a avro file located in "Test/Files/Test.avro" and if this property is set to "_", then the table name for this file would be "Test_Files_Test.avro".
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PoolIdleTimeout" desc="CData JDBC Driver for Avro - RSBAvro - PoolIdleTimeout: The allowed idle time for a connection before it is closed.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PoolIdleTimeout</h1>
       
<div class="chapter_content" id="RSBAvro_p_PoolIdleTimeout">
<p>The allowed idle time for a connection before it is closed.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>60</p>

<h3>Remarks</h3>


<p>The allowed idle time a connection can remain in the pool until the connection is closed. The default is 60 seconds.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PoolMaxSize" desc="CData JDBC Driver for Avro - RSBAvro - PoolMaxSize: The maximum connections in the pool.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PoolMaxSize</h1>
       
<div class="chapter_content" id="RSBAvro_p_PoolMaxSize">
<p>The maximum connections in the pool.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>100</p>

<h3>Remarks</h3>


<p>The maximum connections in the pool. The default is 100. To disable this property, set the property value to 0 or less.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PoolMinSize" desc="CData JDBC Driver for Avro - RSBAvro - PoolMinSize: The minimum number of connections in the pool.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PoolMinSize</h1>
       
<div class="chapter_content" id="RSBAvro_p_PoolMinSize">
<p>The minimum number of connections in the pool.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>1</p>

<h3>Remarks</h3>


<p>The minimum number of connections in the pool. The default is 1.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PoolWaitTime" desc="CData JDBC Driver for Avro - RSBAvro - PoolWaitTime: The max seconds to wait for an available connection.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PoolWaitTime</h1>
       
<div class="chapter_content" id="RSBAvro_p_PoolWaitTime">
<p>The max seconds to wait for an available connection.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>60</p>

<h3>Remarks</h3>


<p>The max seconds to wait for a connection to become available. If a new connection request is waiting for an available connection and exceeds this time, an error is thrown. By default, new requests wait forever for an available connection. 
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - PseudoColumns" desc="CData JDBC Driver for Avro - RSBAvro - PseudoColumns: This property indicates whether or not to include pseudo columns as columns to the table.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>PseudoColumns</h1>
       
<div class="chapter_content" id="RSBAvro_p_PseudoColumns">
<p>This property indicates whether or not to include pseudo columns as columns to the table.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>This setting is particularly helpful in Entity Framework, which does not allow you to set a value for a pseudo column unless it is a table column. The value of this connection setting is of the format "Table1=Column1, Table1=Column2, Table2=Column3". You can use the "*" character to include all tables and all columns; for example, "*=*".</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - RTK" desc="CData JDBC Driver for Avro - RSBAvro - RTK: The runtime key used for licensing.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>RTK</h1>
       
<div class="chapter_content" id="RSBAvro_p_RTK">
<p>The runtime key used for licensing.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>
  </p>

<p>The RTK property may be used to license a build.


See the included licensing file to see how to set this property. The runtime key is only available if you purchased an OEM license.

  </p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - TemporaryLocalFolder" desc="CData JDBC Driver for Avro - RSBAvro - TemporaryLocalFolder: The path, or URI, to the folder that is used to temporarily download avro file(s).">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>TemporaryLocalFolder</h1>
       
<div class="chapter_content" id="RSBAvro_p_TemporaryLocalFolder">
<p>The path, or URI, to the folder that is used to temporarily download avro file(s).</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>For instance: TemporaryLocalFolder='C:/User/Download'</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - Timeout" desc="CData JDBC Driver for Avro - RSBAvro - Timeout: The value in seconds until the timeout error is thrown, canceling the operation.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>Timeout</h1>
       
<div class="chapter_content" id="RSBAvro_p_Timeout">
<p>The value in seconds until the timeout error is thrown, canceling the operation.</p>







<h3>Data Type</h3>
    <p>int</p>

<h3>Default Value</h3>
<p>60</p>

<h3>Remarks</h3>


<p>If <u>Timeout</u> = 0, operations do not time out. The operations run until they complete successfully or until they encounter an error condition.
</p>

<p>If <u>Timeout</u> expires and the operation is not yet complete, the driver throws an exception.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - UseConnectionPooling" desc="CData JDBC Driver for Avro - RSBAvro - UseConnectionPooling: This property enables connection pooling.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UseConnectionPooling</h1>
       
<div class="chapter_content" id="RSBAvro_p_UseConnectionPooling">
<p>This property enables connection pooling.</p>







<h3>Data Type</h3>
    <p>bool</p>

<h3>Default Value</h3>
<p>false</p>

<h3>Remarks</h3>


<p>This property enables connection pooling. The default is false.
See <a href="#pg_connectionpoolingjdbc">Connection Pooling</a> for information on using connection pools.
</p>

</div>



  
  </div></div></div>
<span class=whtitle title="CData JDBC Driver for Avro - UserDefinedViews" desc="CData JDBC Driver for Avro - RSBAvro - UserDefinedViews: A filepath pointing to the JSON configuration file containing your custom views.">CData JDBC Driver for Avro</span>
<div class=whiframe>
  <! -- BEGIN CONTENT -->
  <div class="wrapper">
	  <div class="content">
      
		  <h1>UserDefinedViews</h1>
       
<div class="chapter_content" id="RSBAvro_p_UserDefinedViews">
<p>A filepath pointing to the JSON configuration file containing your custom views.</p>







<h3>Data Type</h3>
    <p>string</p>

<h3>Default Value</h3>
<p>""</p>

<h3>Remarks</h3>


<p>User Defined Views are defined in a JSON-formatted configuration file called <var>UserDefinedViews.json</var>. The driver automatically detects the views specified in this file. </p>

<p>You can also have multiple view definitions and control them using the <u>UserDefinedViews</u> connection property. When you use this property, only the specified views are seen by the driver.</p>

<p>This User Defined View configuration file is formatted as follows:
<ul><li>Each root element defines the name of a view.</li><li>Each root element contains a child element, called <b>query</b>, which contains the custom SQL query for the view.</li></ul></p>

<p>For example:
<br/><pre lang="">{
	"MyView": {
		"query": "SELECT * FROM SampleTable_1 WHERE MyColumn = 'value'"
	},
	"MyView2": {
		"query": "SELECT * FROM MyTable WHERE Id IN (1,2,3)"
	}
}</pre>

Use the <u>UserDefinedViews</u> connection property to specify the location of your JSON configuration file. For example:
<br/><pre lang="">"UserDefinedViews", "C:\\Users\\yourusername\\Desktop\\tmp\\UserDefinedViews.json"</pre></p>

</div>
















    </div></div></div><div class="right-table-of-contents"></div>

    
            </div>
        </div>
        <div>

				<div id='whfooter'>
					<div class=content>
            						Copyright (c) 2023 CData Software, Inc. - All rights reserved.
            
            
						<div class='build'>Build 23.0.8750</div>
					</div>&nbsp;
				</div>
        </div>
    </div>
	
	          <script type="text/javascript" src="./lib/jquery-3.5.1.min.js"></script>
      <script type="text/javascript" src="./lib/bootstrap/bootstrap.min.js"></script>
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/XRegExp.js"></script>	
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/shCore.js"></script>
      <script type="text/javascript" src="./lib/syntaxhighlighter-3.0.83/scripts/shAutoloader.js"></script>
      <script type="text/javascript" src="./lib/help2.js"></script>
    
		<script type="text/javascript">
			function setScrollBar() {
			  var treeHeight = $("#whtoc>ul").height();
			  var treePerentHeight = $("#whsizer").height();
			  if (treeHeight > treePerentHeight) {
				$("#whsizer").css("overflow-y", "scroll");
			  } else {
				$("#whsizer").css("overflow-y", "hidden");
			  }
			}
			
			function loadTree() {
			//   $("#whsizer").css({ "position": "fixed"});
			  $("#whtoc").addClass("tree");
			  $('#whtoc.tree li:has(ul)').addClass('parent_li').prepend("<span class='ygtvtp' title='Expand this branch'></span>");
			  $('#whtoc.tree li:not(.parent_li)').prepend("<span class='ygtvln'></span>");
			  $("#whtoc").show();
			  $('#whtoc.tree li.parent_li > span').on('click', function (e) {
				var children = $(this).parent('li.parent_li').find(' > ul > li');
				if (children.is(":visible")) {
				  children.hide();
				  $(this).attr('title', 'Expand this branch').addClass('ygtvtp').removeClass('ygtvlm');
				} else {
					children.show();
				  $(this).attr('title', 'Collapse this branch').addClass('ygtvlm').removeClass('ygtvtp');
				}
			
				var height = $("#whtoc").height();
				$("#resizerCol").css("height", 0 + "px"); //disable resizer 
				setScrollBar();
				e.stopPropagation();
			  });
			  setScrollBar();
			}
			
			loadTree();
		</script>
		
		
	</body></html>






